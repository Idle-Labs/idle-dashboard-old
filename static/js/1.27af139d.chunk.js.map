{"version":3,"sources":["utilities/GovernanceUtil.js","StatsCard/StatsCard.js","DashboardMenu/DashboardMenu.js","NetworkIndicator/NetworkIndicator.js","utilities/components/Swipeable.js","utilities/components/TooltipModal.js","CryptoInput/CryptoInput.module.scss","HoverImage/HoverImage.js","Notifications/Notifications.js","utilities/components/AccountModal.js","MenuAccount/MenuAccount.js","utilities/components/GovModal.js","DashboardHeader/DashboardHeader.js","Notifications/Notifications.module.scss"],"names":["GovernanceUtil","props","_this","this","Object","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","functionsUtil","setProps","FunctionsUtil","getTotalSupply","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","a","mark","_callee","cachedDataKey","cachedData","contractName","totalSupply","wrap","_context","prev","next","getCachedDataWithLocalStorage","BNify","isNaN","abrupt","getGlobalConfig","genericContractCall","sent","fixTokenDecimals","setCachedDataWithLocalStorage","stop","getTokensBalance","_callee2","account","balance","_args2","arguments","_context2","length","undefined","concat","getContractBalance","getVestedAmount","_callee3","vestedAmount","governanceTokenName","governanceTokenConfig","_ref4","_ref5","vestingEnd","lastUpdate","vestingBegin","vestingAmount","blockTimestamp","_args3","_context3","getVestingContract","toUpperCase","Promise","all","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","parseInt","Date","now","gt","times","minus","div","decimals","_callee4","vestingContract","_args4","_context4","initContract","VesterABI","claimVestedTokens","_callee5","callback","callbackReceipt","_args5","_context5","contractMethodSendWrapper","delegateVesting","_callee6","delegate","_args6","_context6","getVestingAmount","_callee7","_args7","_context7","getCurrentDelegate","_callee8","_args8","_context8","getCurrentVotes","_callee9","votes","_args9","_context9","getVotingPeriod","_callee10","votingPeriod","_context10","name","getTimelockDelay","_callee11","delay","_context11","queueProposal","_ref14","_callee12","proposalId","_args12","_context12","toBN","_x","apply","executeProposal","_ref15","_callee13","_args13","_context13","_x2","proposeAndVoteFor","_ref16","_callee14","targets","values","signatures","calldatas","description","batcher","contract","txs","_context14","Batcher","web3","getContractByName","to","_address","method","methods","propose","args","castVote","_x3","_x4","_x5","_x6","_x7","_ref17","_callee15","_args15","_context15","_x8","_x9","_x10","_x11","_x12","_ref18","_callee16","support","_args16","_context16","_x13","_x14","setDelegate","_ref19","_callee17","_args17","_context17","_x15","getDelegatesChanges","_callee18","lastBlockNumber","delegationsCalls","fromBlock","delegatesContractName","blockNumber","toBlock","all_delegations","_context18","eth","getBlockNumber","Math","min","push","getContractPastEvents","reduce","delegations","d","getLatestDelegators","_callee20","delegateChanges","latestDelegators","_args20","_context20","t0","sort","b","asyncForEach","_ref22","_callee19","_context19","returnValues","delegator","toDelegate","_x16","getDelegateDelegators","_ref23","_callee21","delegatesVotesChanges","latest_delegators","_args21","_context21","t1","getDelegatesVotesChanges","reverse","forEach","voteChangedTx","find","tx","transactionHash","toLowerCase","delegatorBalance","newBalance","previousBalance","filter","delegatorInfo","_x17","_callee22","_context22","getDelegates","_callee24","limit","_ref26","_ref27","all_votes","delegateAccounts","delegates","_args24","_context24","getVotes","e","_e$returnValues","keys","_ref28","_callee23","delegators","_context23","parseFloat","_x18","index","rank","toFixed","vote_weight","proposals","v","voter","splice","getProposalParams","_callee25","govContractName","_ref30","_ref31","proposalThreshold","proposalMaxOperations","params","_context25","getCachedData","setCachedData","_callee27","governanceContracts","lastContract","_context27","_ref33","_callee26","governanceContract","contractVotes","_context26","map","_e$returnValues2","vote","_x19","_x20","getProposals","_callee31","voted_by","filter_by_state","startBlock","enumerateProposalState","contracts","proposalCounts","allProposals","_args31","_context31","p","state","_ref35","_callee28","proposalCount","_context28","_x21","_ref36","_callee30","governanceContractName","lastCount","proposalGets","proposalStateGets","_arr","_i","i","_ref37","_ref38","proposalStates","proposalQueuedEvents","proposalCreatedEvents","proposalCanceledEvents","proposalExecutedEvents","_context30","t2","t3","Array","from","n","_ref39","_callee29","createdEvent","canceledEvent","executedEvent","queuedEvent","_ref40","_ref41","endBlockInfo","queuedBlockInfo","createdBlockInfo","canceledBlockInfo","executedBlockInfo","createdState","activeState","canceledState","succeededState","queuedState","executedState","endState","_createdEvent$returnV","proposalDetails","proposal","_context29","id","endBlock","getBlockInfo","states","end_time","timestamp","start_time","trx_hash","s","title","split","replace","shift","join","attr","eta","actions","executed","canceled","forVotes","proposer","againstVotes","_x24","_x25","_x22","_x23","StatsCard","loadUtils","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","minHeight","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","width","alignItems","flexDirection","justifyContent","titleMinHeight","h4","mb","fontWeight","fontSize","textAlign","color","lineHeight","value","toString","assign","valueProps","children","label","mt","labelTooltip","placement","message","ml","size","Component","DashboardMenu","logout","overMenuIndex","buyModalOpened","setConnector","connectorName","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","sendGoogleAnalyticsEvent","eventCategory","eventAction","context","unsetConnector","setState","govModalOpened","_this2","menu","currentNetworkId","getRequiredNetworkId","landingStrategies","visibleStrategies","visible","availableNetworks","includes","enabledEnvs","currentEnv","governanceRoute","baseRoute","dashboardRoute","visibleLinks","menuLink","isVisible","showMobile","mobile","isMobile","isDarkTheme","themeMode","themeTogglerEnabled","isProdEnv","checkUrlOrigin","logoSrc","logoHeight","checkChristmas","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","height","pb","react_router_dom__WEBPACK_IMPORTED_MODULE_10__","src","position","my","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","px","py","buttonProps","border","type","handleClick","isDashboard","goToSection","alignSelf","_NetworkIndicator_NetworkIndicator__WEBPACK_IMPORTED_MODULE_13__","style","overflowY","menuIndex","LinkComponent","isExternalLink","ExtLink","RouterLink","menuSelected","selected","menuOverSelected","activeImage","imageDark","image","inactiveImage","imageInactiveDark","imageInactive","key","onMouseOut","setMenuIndexOver","onMouseOver","route","href","onClick","closeMenu","textDecoration","borderRadius","backgroundColor","mr","align","icon","fontFamily","whiteSpace","setThemeMode","NetworkIndicator","activeNetworks","defaultNetwork","loadNetworks","networkInitialized","networkId","networkConfig","config","network","requiredNetwork","getRequiredNetwork","setRequiredNetwork","JSON","stringify","required","_this3","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","innerProps","boxShadow","customOptionProps","pl","pr","noShadow","isSearchable","notInteractive","options","CustomOptionValue","imageSrc","data","onChange","selectNetwork","bind","defaultValue","CustomValueContainer","selectProps","flex","innerxProps","cursor","isCorrectNetwork","isActive","isInteractive","display","__webpack_require__","__webpack_exports__","Swipeable","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","react_swipeable__WEBPACK_IMPORTED_MODULE_1__","handlers","useSwipeable","onSwiped","eventData","delta","preventDefaultTouchmoveEvent","trackTouch","trackMouse","rotationAngle","touchAction","TooltipModal","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","closeModal","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","maxWidth","closeFunc","Header","pt","Body","dangerouslySetInnerHTML","__html","content","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","React","module","exports","newLink","newPill","ethInput","ethInputDark","mainInput","button","gradientButton","input","newPillContainerAnim","HoverImage","react_default","index_es","hoverOn","hover","noHover","imageProps","Notifications","tabOpened","notifications","mouseOverBell","unreadNotifications","lastOpenTimestamp","mouseOverNotifications","governanceUtil","loadNotifications","clickEvent","eventLabel","updateLastOpenTimestamp","notificationsChanged","notificationsParams","getStoredItem","setLocalStorage","currTime","currentNetwork","isMainnet","governanceConfig","batchDepositConfig","polygonBridgeConfig","blocksPerWeek","oneWeekAgoBlock","polygonBridgeEnabled","enabled","governanceEnabled","getSubstackLatestFeed","getSnapshotProposals","getPolygonBridgeTxs","latestFeed","activeSnapshotProposals","polygonTransactions","governanceProposals","batchedDeposits","start","end","latestFeedDate","strToMoment","isoDate","isAfter","subtract","link","_d","getTime","htmlDecode","text","date","utc","format","snapshotProposalBaseUrl","body","governanceProposalUrl","iconProps","hash","batchDepositBaseUrl","batchToken","batchInfo","lastExecution","timeStamp","batchRedeems","theme","colors","transactions","status","completed","polygonBridgeBaseUrl","action","included","exited","token","tokenSymbol","depositBaseUrl","notification","openWindow","window","location","_this4","hasUnreadNotifications","iconColor","zIndex","flexProps","setMouseOverBell","toggleTab","className","styles","bell","ring","active","counter","DashboardCard","right","maxHeight","overflow","top","minWidth","setMouseOverNotifications","openNotification","dark","borderBottom","divider","textOverflow","AccountModal","balances","loadBalances","regenerator_default","availableStrategies","contractsInitialized","best","baseToken","tokens","strategy","strategyToken","idle","accountChanged","acccount","section","viewOnly","rows","renderBalances","tokenIndex","AssetField","tokenConfig","objectSpread","fieldInfo","ModalCard","address","toolName","toolConfig","CardIconButton","mx","Footer","ButtonLoader","buttonText","isLoading","asyncToGenerator","MenuAccount","isModalOpen","idleTokenBalance","idleGovToken","toggleModal","modalName","getIdleGovToken","loadIdleTokenBalance","requiredNetworkChanged","accountInizialized","idleGovTokenConfig","idleGovTokenEnabled","getBalance","getUnclaimedTokens","unclaimed","plus","walletProvider","connectorInfo","walletIcon","toggleMenu","menuOpened","alt","borderRight","ShortHash","src_Notifications_Notifications","setGovModal","connectAndValidateAccount","onMouseEnter","isHover","onMouseLeave","src_HoverImage_HoverImage","components_AccountModal","RoundButton","GovModal","total","txStatus","processing","txHash","loading","loadTokenInfo","_ref2","_ref3","slicedToArray","claim","error","getTransactionError","newState","claimCallback","claimRewards","mainColor","background","titleProps","TxProgressBar","textColor","cancelTextColor","cancelTextHoverColor","waitText","endMessage","cancelTransaction","contrastColor","disabled","lte","DashboardHeader","loadData","networkChanged","src_MenuAccount_MenuAccount","hoverColor","components_GovModal","list"],"mappings":"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","file":"static/js/1.27af139d.chunk.js","sourcesContent":["import Batcher from 'web3-batched-send';\nimport FunctionsUtil from './FunctionsUtil';\nimport VesterABI from '../contracts/Vester.json';\n\n// const env = process.env;\n\nclass GovernanceUtil {\n  // Attributes\n  props = {};\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  getTotalSupply = async () => {\n\n    // Check for cached data\n    const cachedDataKey = 'getTotalSupply';\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    let totalSupply = await this.functionsUtil.genericContractCall(contractName,'totalSupply');\n    if (totalSupply){\n      totalSupply = this.functionsUtil.fixTokenDecimals(totalSupply,18);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n    }\n\n    return null;\n  }\n\n  getTokensBalance = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getTokensBalance_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const balance = await this.functionsUtil.getContractBalance(contractName, account);\n      if (balance && !this.functionsUtil.BNify(balance).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(balance));\n      }\n    }\n    return null;\n  }\n\n  getVestedAmount = async (account=null) => {\n    let vestedAmount = this.functionsUtil.BNify(0);\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n      const governanceTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',governanceTokenName.toUpperCase()]);\n      let [\n        vestingEnd,\n        lastUpdate,\n        vestingBegin,\n        vestingAmount,\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall('VestingContract','vestingEnd'),\n        this.functionsUtil.genericContractCall('VestingContract','lastUpdate'),\n        this.functionsUtil.genericContractCall('VestingContract','vestingBegin'),\n        this.functionsUtil.genericContractCall('VestingContract','vestingAmount')\n      ]);\n\n      if (vestingAmount && vestingBegin && vestingEnd && lastUpdate){\n        vestingEnd = this.functionsUtil.BNify(vestingEnd);\n        lastUpdate = this.functionsUtil.BNify(lastUpdate);\n        vestingBegin = this.functionsUtil.BNify(vestingBegin);\n        vestingAmount = this.functionsUtil.BNify(vestingAmount);\n        const blockTimestamp = this.functionsUtil.BNify(parseInt(Date.now()/1000));\n\n        if (blockTimestamp.gt(vestingEnd)) {\n          vestedAmount = await this.functionsUtil.getContractBalance(governanceTokenName,account);\n        } else {\n          vestedAmount = vestingAmount.times(blockTimestamp.minus(this.functionsUtil.BNify(lastUpdate))).div(vestingEnd.minus(vestingBegin));\n        }\n        vestedAmount = this.functionsUtil.fixTokenDecimals(vestedAmount,governanceTokenConfig.decimals);\n      }\n    }\n    return vestedAmount;\n  }\n\n  getVestingContract = async (account=null) => {\n    account = account ? account : this.props.account;\n    const vestingContract = await this.functionsUtil.genericContractCall('VesterFactory','vestingContracts',[account]);\n\n    if (parseInt(vestingContract) === 0){\n      return null;\n    }\n    // Init vesting contract\n    await this.props.initContract('VestingContract',vestingContract,VesterABI);\n    return vestingContract;\n  }\n\n  claimVestedTokens = async (account=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','claim',[],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  delegateVesting = async (account=null,delegate=null,callback=null,callbackReceipt=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      // await this.functionsUtil.contractMethodSendWrapper('IDLE','delegate',[delegate]);\n      return await this.functionsUtil.contractMethodSendWrapper('VestingContract','setDelegate',[delegate],callback,callbackReceipt);\n    }\n    return null;\n  }\n\n  getVestingAmount = async (account=null) => {\n    account = account ? account : this.props.account;\n    const founderVesting = await this.getVestingContract(account);\n    if (founderVesting){\n      let vestingAmount = await this.functionsUtil.genericContractCall('VestingContract','vestingAmount');\n      if (vestingAmount){\n        return this.functionsUtil.BNify(vestingAmount);\n      }\n    }\n    return null;\n  }\n\n  getCurrentDelegate = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n\n      // Check for cached data\n      const cachedDataKey = `getCurrentDelegate_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const delegate = await this.functionsUtil.genericContractCall(contractName, 'delegates', [account]);\n\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegate);\n    }\n\n    return null;\n  }\n\n  getCurrentVotes = async (account=null) => {\n\n    account = account ? account : this.props.account;\n    if (account){\n      // Check for cached data\n      const cachedDataKey = `getCurrentVotes_${account}`;\n      const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData){\n        return cachedData;\n      }\n\n      const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n      const votes = await this.functionsUtil.genericContractCall(contractName, 'getCurrentVotes', [account]);\n      if (votes && !this.functionsUtil.BNify(votes).isNaN() ){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,this.functionsUtil.BNify(votes));\n      }\n    }\n\n    return null;\n  }\n\n  getVotingPeriod = async () => {\n    // Check for cached data\n    const cachedDataKey = `votingPeriod`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    let votingPeriod = await this.functionsUtil.genericContractCall(contractName,'votingPeriod');\n    if (votingPeriod){\n      votingPeriod = this.functionsUtil.BNify(votingPeriod);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,votingPeriod,null);\n    }\n\n    return null;\n  }\n\n  getTimelockDelay = async () => {\n    // Check for cached data\n    const cachedDataKey = `getTimelockDelay`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    let delay = await this.functionsUtil.genericContractCall('Timelock','delay');\n    if (delay){\n      delay = this.functionsUtil.BNify(delay);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delay,null);\n    }\n\n    return null;\n  }\n\n  queueProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'queue',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  executeProposal = async (proposalId,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    await this.functionsUtil.contractMethodSendWrapper(contractName,'execute',[this.functionsUtil.toBN(proposalId)],callback,callbackReceipt);\n  }\n\n  proposeAndVoteFor = async (targets, values, signatures, calldatas, description) => {\n    const batcher = new Batcher(this.props.web3,'0x741A4dCaD4f72B83bE9103a383911d78362611cf');\n\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    const contract = this.functionsUtil.getContractByName(contractName);\n\n    const txs = [\n      {\n        to:contract._address,\n        method:contract.methods.propose,\n        args:[targets, values, signatures, calldatas, description]\n      },\n      {\n        to:contract._address,\n        method:contract.methods.castVote,\n        args:[this.functionsUtil.BNify(3), true],\n      }\n    ];\n\n    batcher(txs);\n  }\n\n  propose = async (targets, values, signatures, calldatas, description, callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    return await this.props.contractMethodSendWrapper(contractName, 'propose', [targets, values, signatures, calldatas, description], null, callback, callbackReceipt);\n  }\n\n  castVote = async (proposalId,support,callback=null,callbackReceipt=null) => {\n    proposalId = this.functionsUtil.toBN(proposalId);\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    // console.log(contractName, 'castVote', [proposalId, support]);\n    return await this.props.contractMethodSendWrapper(contractName, 'castVote', [proposalId, support], null, callback, callbackReceipt);\n  }\n\n  setDelegate = async (delegate,callback=null,callbackReceipt=null) => {\n    const contractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n    return await this.props.contractMethodSendWrapper(contractName, 'delegate', [delegate], null, callback, callbackReceipt);\n  }\n\n  getDelegatesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getLatestDelegators = async (delegateChanges=null) => {\n    delegateChanges = delegateChanges || await this.getDelegatesChanges();\n    \n    delegateChanges.sort((a, b) => {\n      return a.blockNumber < b.blockNumber ? 1 : -1;\n    })\n\n    const latestDelegators = {};\n    await this.functionsUtil.asyncForEach(delegateChanges, async (d) => {\n      const values = d.returnValues;\n      if (!values.delegator || latestDelegators[values.delegator]){\n        return;\n      }\n      latestDelegators[values.delegator] = {\n        votes:0,\n        delegator:values.delegator,\n        toDelegate:values.toDelegate\n      };\n\n      const votes = await this.getTokensBalance(values.delegator);\n      latestDelegators[values.delegator].votes = +votes/1e18;\n\n      // console.log(values.delegator,+votes/1e18,values.toDelegate);\n    });\n\n    // console.log('getLatestDelegators',latestDelegators);\n\n    return latestDelegators;\n  }\n\n  getDelegateDelegators = async (delegate,delegateChanges=null,delegatesVotesChanges=null) => {\n    delegateChanges = delegateChanges || await this.getDelegatesChanges();\n    delegatesVotesChanges = delegatesVotesChanges || await this.getDelegatesVotesChanges();\n\n    const latest_delegators = {};\n    delegateChanges.reverse().forEach( d => {\n      const values = d.returnValues;\n      if (!values.delegator || latest_delegators[values.delegator]){\n        return;\n      }\n      const voteChangedTx = delegatesVotesChanges.find( tx => tx.transactionHash.toLowerCase() === d.transactionHash.toLowerCase() && tx.returnValues.delegate.toLowerCase() === delegate.toLowerCase() );\n      const delegatorBalance = voteChangedTx ? this.functionsUtil.BNify(voteChangedTx.returnValues.newBalance).minus(voteChangedTx.returnValues.previousBalance) : null;\n      const votes = delegatorBalance ? +delegatorBalance/1e18 : 0;\n\n      // console.log('delegator',values.delegator,'delegate',values.toDelegate,'delegate hash',d.transactionHash,'voteChanged hash',voteChangedTx ? voteChangedTx.transactionHash : null,'prevBalance',voteChangedTx ? +voteChangedTx.returnValues.previousBalance/1e18 : null,'newBalance',voteChangedTx ? +voteChangedTx.returnValues.newBalance/1e18 : null,'votes',votes);\n\n      latest_delegators[values.delegator] = {\n        votes,\n        delegator:values.delegator,\n        toDelegate:values.toDelegate\n      };\n    });\n\n    return Object.values(latest_delegators).filter( delegatorInfo => {\n      return delegatorInfo.toDelegate.toLowerCase() === delegate.toLowerCase();\n    })/*.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    })*/;\n  }\n\n  getDelegatesVotesChanges = async () => {\n\n    const lastBlockNumber = await this.props.web3.eth.getBlockNumber();\n\n    const delegationsCalls = [];\n    const blocksPerCall = 100000;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n    const delegatesContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','delegates']);\n\n    for (var blockNumber = fromBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      const toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      delegationsCalls.push(this.functionsUtil.getContractPastEvents(delegatesContractName,'DelegateVotesChanged', {fromBlock: blockNumber, toBlock}))\n    }\n\n    const all_delegations = await Promise.all(delegationsCalls);\n\n    return all_delegations.reduce( (delegations,d) => {\n      delegations = delegations.concat(d);\n      return delegations;\n    },[]);\n  }\n\n  getDelegates = async (limit=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getDelegates`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const [\n      all_votes,\n      totalSupply,\n      delegateChanges,\n      delegations,\n    ] = await Promise.all([\n      this.getVotes(),\n      this.getTotalSupply(),\n      this.getDelegatesChanges(),\n      this.getDelegatesVotesChanges()\n    ]);\n      \n    const latestDelegators = await this.getLatestDelegators(delegateChanges);\n\n    const delegateAccounts = {};\n    delegations.forEach(e => {\n      const { delegate, newBalance } = e.returnValues;\n      delegateAccounts[delegate] = newBalance;\n    });\n\n    // console.log('getDelegatesVotesChanges',delegations,'delegateChanges',delegateChanges);\n\n    let delegates = [];\n    await this.functionsUtil.asyncForEach(Object.keys(delegateAccounts), async (delegate) => {\n      const delegators = Object.values(latestDelegators).filter( delegatorInfo => {\n        return delegatorInfo.toDelegate.toLowerCase() === delegate.toLowerCase() && parseFloat(delegatorInfo.votes)>0;\n      }).sort((a, b) => {\n        return a.votes < b.votes ? 1 : -1;\n      });\n\n      const votes = +delegateAccounts[delegate]/1e18;\n      delegates.push({\n        votes,\n        delegate,\n        delegators\n      });\n    });\n\n    delegates.sort((a, b) => {\n      return a.votes < b.votes ? 1 : -1;\n    });\n\n    delegates.forEach( (d,index) => {\n      d.rank = index+1;\n      d.votes = d.votes.toFixed(6);\n      d.vote_weight = (100 * (d.votes / parseFloat(totalSupply))).toFixed(4) + '%';\n      d.proposals = all_votes.filter( v => (v.voter && d.delegate && v.voter.toLowerCase() === d.delegate.toLowerCase()) ).length;\n    });\n\n    this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,delegates);\n\n    if (limit !== null){\n      delegates = delegates.splice(0,limit);\n    }\n\n    return delegates;\n  }\n\n  getProposalParams = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposalParams`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govContractName = this.functionsUtil.getGlobalConfig(['governance','contracts','governance','v2']).name;\n    let [\n      proposalThreshold,\n      proposalMaxOperations\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(govContractName,'proposalThreshold'),\n      this.functionsUtil.genericContractCall(govContractName,'proposalMaxOperations')\n    ]);\n\n    if (proposalThreshold){\n      proposalThreshold = this.functionsUtil.BNify(proposalThreshold);\n    }\n\n    const params = {\n      proposalThreshold,\n      proposalMaxOperations\n    };\n\n    return this.functionsUtil.setCachedData(cachedDataKey,params);\n  }\n\n  getVotes = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getVotes`;\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    \n    const governanceContracts = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    let lastContract=null;\n    let fromBlock=null;\n    const votes=[];\n    Object.values(governanceContracts).forEach(async (governanceContract,index)=>{\n      const contractName=governanceContract.name;\n      const toBlock=governanceContract.toBlock;\n      if(!lastContract)\n      {\n        fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n      }\n      else\n      {\n        fromBlock=lastContract.toBlock;\n      }\n      lastContract=governanceContract;\n      let contractVotes = await this.functionsUtil.getContractPastEvents(contractName,'VoteCast', {fromBlock, toBlock});\n      if (contractVotes){\n        contractVotes = contractVotes.map( e => {\n          const {\n              voter,\n              votes,\n              support,\n              proposalId\n          } = e.returnValues;\n          return {\n            votes,\n            voter,\n            support,\n            proposalId\n          }\n        });\n        Object.values(contractVotes).forEach(vote=>{\n          votes.push(vote);\n        })\n      }\n    });\n   \n    return this.functionsUtil.setCachedData(cachedDataKey,votes);\n  }\n\n  getProposals = async (voted_by=null,filter_by_state=null,startBlock=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getProposals`;\n    let cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      if (filter_by_state){\n        cachedData = cachedData.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n      }\n      if (voted_by){\n        cachedData = cachedData.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n      }\n      if (startBlock){\n        cachedData = cachedData.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n      }\n      return cachedData;\n    }\n\n    const enumerateProposalState = (state) => {\n      const proposalStates = ['Pending', 'Active', 'Canceled', 'Defeated', 'Succeeded', 'Queued', 'Expired', 'Executed'];\n      return proposalStates[state];\n    };\n\n    const governanceContracts = this.functionsUtil.getGlobalConfig(['governance','contracts','governance']);\n    const contracts = Object.values(governanceContracts);\n\n    // const proposalCounts= await Object.values(governanceContracts).map(async (governanceContract)=>{\n    const proposalCounts = await this.functionsUtil.asyncForEach(contracts,async (governanceContract)=>{\n      const proposalCount = await this.functionsUtil.genericContractCall(governanceContract.name,'proposalCount');\n      return proposalCount;\n    });\n\n    let fromBlock = null;\n    let allProposals = [];\n\n    await this.functionsUtil.asyncForEach(contracts, async(governanceContract,index) => {\n      \n      const governanceContractName = governanceContract.name;\n      const proposalCount = parseInt(await proposalCounts[index]);\n      const lastCount = parseInt(await proposalCounts[index-1]);\n      if (!proposalCount){\n        return [];\n      }\n      if(index===0){\n        fromBlock = this.functionsUtil.getGlobalConfig(['governance','startBlock']);\n      }\n      else{\n        fromBlock = contracts[index-1].toBlock;\n      }\n\n      const proposalGets = [];\n      const proposalStateGets = [];\n      for (const i of Array.from(Array(proposalCount),(n,i) => i+1)) {\n        if (!index || i>lastCount){\n          proposalGets.push(this.functionsUtil.genericContractCall(governanceContractName,'proposals',[i]));\n          proposalStateGets.push(this.functionsUtil.genericContractCall(governanceContractName,'state',[i]));\n        }\n      }\n\n      if(!proposalStateGets || !proposalGets){\n        return false;\n      }\n      const toBlock = governanceContract.toBlock;\n      let [\n        votes,\n        proposals,\n        proposalStates,\n        proposalQueuedEvents,\n        proposalCreatedEvents,\n        proposalCanceledEvents,\n        proposalExecutedEvents,\n      ] = await Promise.all([\n        this.getVotes(),\n        Promise.all(proposalGets),\n        Promise.all(proposalStateGets),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalQueued', {fromBlock, toBlock}),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCreated', {fromBlock, toBlock}),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalCanceled', {fromBlock, toBlock}),\n        this.functionsUtil.getContractPastEvents(governanceContractName,'ProposalExecuted', {fromBlock, toBlock}),\n      ]);\n\n      if (proposals){\n        proposals.reverse();\n      } else {\n        proposals = [];\n      }\n      if (proposalStates){\n        proposalStates.reverse();\n      } else {\n        proposalStates = [];\n      }\n      if (proposalQueuedEvents){\n        proposalQueuedEvents.reverse();\n      } else {\n        proposalQueuedEvents = [];\n      }\n      if (proposalCreatedEvents){\n        proposalCreatedEvents.reverse();\n      } else {\n        proposalCreatedEvents = [];\n      }\n      if (proposalCanceledEvents){\n        proposalCanceledEvents.reverse();\n      } else {\n        proposalCanceledEvents = [];\n      }\n      if (proposalExecutedEvents){\n        proposalExecutedEvents.reverse();\n      } else {\n        proposalExecutedEvents = [];\n      }\n\n\n      // await this.functionsUtil.asyncForEach(proposals, async (p,i) => {\n      await this.functionsUtil.asyncForEach(proposalCreatedEvents, async (createdEvent,i) => {\n        const p = proposals[i];\n\n        if (!p || !p.id){\n          return;\n        }\n\n        const proposalId = parseInt(p.id);\n        const canceledEvent = proposalCanceledEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n        const executedEvent = proposalExecutedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n        const queuedEvent = proposalQueuedEvents.find( e => (parseInt(e.returnValues.id) === proposalId ) );\n\n        const [\n          endBlockInfo,\n          queuedBlockInfo,\n          createdBlockInfo,\n          canceledBlockInfo,\n          executedBlockInfo,\n        ] = await Promise.all([\n          p.endBlock ? this.functionsUtil.getBlockInfo(p.endBlock) : null,\n          queuedEvent ? this.functionsUtil.getBlockInfo(queuedEvent.blockNumber) : null,\n          createdEvent ? this.functionsUtil.getBlockInfo(createdEvent.blockNumber) : null,\n          canceledEvent ? this.functionsUtil.getBlockInfo(canceledEvent.blockNumber) : null,\n          executedEvent ? this.functionsUtil.getBlockInfo(executedEvent.blockNumber) : null,\n        ]);\n\n        // Init states array\n        p.states = [];\n\n        // Create created state\n        const createdState = {\n          state: \"Pending\",\n          blockNumber: createdEvent.blockNumber,\n          end_time: createdBlockInfo.timestamp,\n          start_time: createdBlockInfo.timestamp,\n          trx_hash: createdEvent.transactionHash\n        };\n        p.states.push(createdState);\n\n        // Push active state\n        const activeState = {\n          end_time: null,\n          trx_hash: null,\n          state: \"Active\",\n          blockNumber: createdEvent.blockNumber,\n          start_time: createdState.start_time\n        };\n        p.states.push(activeState);\n\n        // Push canceled state\n        if (canceledEvent){\n          const canceledState = {\n            end_time: null,\n            state: \"Canceled\",\n            blockNumber: canceledEvent.blockNumber,\n            start_time: canceledBlockInfo.timestamp,\n            trx_hash: canceledEvent.transactionHash\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = canceledBlockInfo.timestamp;\n          p.states.push(canceledState);\n        } else {\n          // Push queued state\n          if (queuedEvent){\n            const succeededState = {\n              end_time: null,\n              trx_hash: null,\n              state: \"Succeeded\",\n              blockNumber: queuedEvent.blockNumber,\n              start_time: queuedBlockInfo.timestamp,\n            };\n\n            const queuedState = {\n              end_time: null,\n              state: \"Queued\",\n              blockNumber: queuedEvent.blockNumber,\n              trx_hash: queuedEvent.transactionHash,\n              start_time: queuedBlockInfo.timestamp,\n            };\n\n            // Update previous state end_time\n            p.states[p.states.length-1].end_time = queuedBlockInfo.timestamp;\n            // Push Succeeded state\n            p.states.push(succeededState);\n            // Push queued state\n            p.states.push(queuedState);\n          }\n\n          // Push executed state\n          if (executedEvent){\n            const executedState = {\n              end_time: null,\n              state: \"Executed\",\n              blockNumber: executedEvent.blockNumber,\n              start_time: executedBlockInfo.timestamp,\n              trx_hash: executedEvent.transactionHash\n            }\n            // Update previous state end_time\n            p.states[p.states.length-1].end_time = executedBlockInfo.timestamp;\n            p.states.push(executedState);\n          }\n        }\n\n        // console.log(governanceContractName,i,proposalStates,proposalStates[i]);\n\n        // Check for defeated or expired\n        p.state = enumerateProposalState(proposalStates[i]);\n        const foundState = p.states.find( s => (s.state === p.state) );\n        if (!foundState){\n          const endState = {\n            state: p.state,\n            end_time: null,\n            trx_hash: null,\n            blockNumber: p.endBlock,\n            start_time: endBlockInfo.timestamp,\n          }\n          // Update previous state end_time\n          p.states[p.states.length-1].end_time = endBlockInfo.timestamp;\n          p.states.push(endState);\n        }\n\n        p.votes = votes.filter( v => (parseInt(v.proposalId)===proposalId) );\n\n        const { description, signatures, targets, values, calldatas } = createdEvent.returnValues;\n        p.timestamp = createdBlockInfo ? createdBlockInfo.timestamp : null;\n\n\n        // Idle\n        p.title = description.split(/# |\\n|↵/g)[0].replace(/^#/,'') || 'Untitled';\n        p.description = description.split(/\\n|↵/g);\n        p.description.shift();\n        p.description = p.description.join(\"\\n\");\n        p.description = p.description.replace(/\\n/g,\"<br />\")\n\n        // Overwrite proposal details\n        const proposalDetails = this.functionsUtil.getGlobalConfig(['governance','proposals',proposalId]);\n        if (proposalDetails){\n          Object.keys(proposalDetails).forEach( attr => {\n            p[attr] = proposalDetails[attr];\n          });\n        }\n\n        const proposal = {\n          eta:p.eta,\n          actions:{\n            values,\n            targets,\n            calldatas,\n            signatures\n          },\n          id:proposalId,\n          title:p.title,\n          state:p.state,\n          votes:p.votes,\n          states:p.states,\n          executed:p.executed,\n          endBlock:p.endBlock,\n          canceled:p.canceled,\n          forVotes:p.forVotes,\n          proposer:p.proposer,\n          timestamp:p.timestamp,\n          startBlock:p.startBlock,\n          description:p.description,\n          againstVotes:p.againstVotes\n        };\n\n        // Save proposal\n        proposals[i] = proposal;\n      });\n\n      Object.values(proposals).forEach(proposal=>{\n        if (proposal){\n          allProposals.push(proposal);\n        }\n      });\n    });\n\n    allProposals = allProposals.sort((a, b) => (a.id < b.id ? 1 : -1));\n  \n    if (allProposals.length){\n      this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,allProposals,1800);\n    }\n\n    if (filter_by_state){\n      allProposals = allProposals.filter( p => (p && p.state && p.state.toLowerCase() === filter_by_state.toLowerCase() ) );\n    }\n\n    if (voted_by){\n      allProposals = allProposals.filter( p => (p && p.votes.find( v => (v.voter && v.voter.toLowerCase() === voted_by.toLowerCase()) )) );\n    }\n\n    if (startBlock){\n      allProposals = allProposals.filter( p => parseInt(p.startBlock)>=parseInt(startBlock) );\n    }\n\n    return allProposals;\n  }\n}\n\nexport default GovernanceUtil;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass StatsCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          minHeight:this.props.minHeight ? this.props.minHeight : ['130px','153px']\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'flex-start'}\n          flexDirection={'column'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            alignItems={'flex-start'}\n            minHeight={ this.props.titleMinHeight ? this.props.titleMinHeight : ['auto','60px'] }\n          >\n            <Heading.h4\n              mb={[3,0]}\n              fontWeight={4}\n              fontSize={[2,3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n            >\n              {this.props.title}\n            </Heading.h4>\n          </Flex>\n          {\n            (typeof this.props.value !== 'undefined' && this.props.value !== null && this.props.value.toString().length>0) &&\n              <Text\n                lineHeight={1}\n                fontSize={[4,5]}\n                fontWeight={[3,4]}\n                color={'statValue'}\n                {...this.props.valueProps}\n              >\n                {this.props.value}\n              </Text>\n          }\n          {\n            this.props.children ?\n              this.props.children\n            : null\n          }\n          {\n            (typeof this.props.label !== 'undefined' && this.props.label !== null && this.props.label.toString().length>0) && (\n              <Flex\n                mt={[3,2]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={3}\n                  color={'legend'}\n                >\n                  {this.props.label}\n                </Text>\n                {\n                  (this.props.labelTooltip && this.props.labelTooltip.length>0) && (\n                    <Tooltip\n                      placement={'top'}\n                      message={this.props.labelTooltip}\n                    >\n                      <Icon\n                        ml={2}\n                        name={\"Info\"}\n                        size={'1em'}\n                        color={'cellTitle'}\n                      />\n                    </Tooltip>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StatsCard;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport { Flex, Box, Icon, Text, Image, Link } from \"rimble-ui\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass DashboardMenu extends Component {\n  state = {\n    logout: false,\n    overMenuIndex: false,\n    buyModalOpened: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  setBuyModalOpened(buyModalOpened) {\n    this.setState({\n      buyModalOpened\n    });\n  }\n\n  setMenuIndexOver(overMenuIndex) {\n    this.setState({\n      overMenuIndex\n    });\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    if (!this.props.menu.length) {\n      return null;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const landingStrategies = this.functionsUtil.getGlobalConfig(['landingStrategies']);\n    const visibleStrategies = Object.keys(landingStrategies).filter(s => landingStrategies[s].visible && (!landingStrategies[s].availableNetworks.length || landingStrategies[s].availableNetworks.includes(currentNetworkId)) && (!landingStrategies[s].enabledEnvs.length || landingStrategies[s].enabledEnvs.includes(this.props.currentEnv)) );\n\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceRoute = governanceConfig.baseRoute;\n    const dashboardRoute = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + '/' + visibleStrategies[0];\n\n    const visibleLinks = this.props.menu.filter(menuLink => {\n      const isVisible = menuLink.visible === undefined || menuLink.visible;\n      const showMobile = menuLink.mobile === undefined || menuLink.mobile;\n      return isVisible && (!this.props.isMobile || showMobile);\n    });\n\n    if (!visibleLinks.length) {\n      return null;\n    }\n\n    const isDarkTheme = this.props.themeMode === \"dark\";\n    const themeTogglerEnabled = this.functionsUtil.getGlobalConfig([\"dashboard\",\"theme\",\"themeTogglerEnabled\"]);\n\n    const isProdEnv = this.functionsUtil.checkUrlOrigin();\n    const isChristmas = this.functionsUtil.checkChristmas();\n    // let logoSrc = isProdEnv ? (!isDarkTheme ? \"images/logo-gradient.svg\" : \"images/logo-dark.svg\") : (!isDarkTheme ? \"images/logo-gradient-beta.png\" : \"images/logo-white-beta.png\");\n    let logoSrc = 'images/logo.svg';\n\n    let logoHeight = '42px';\n    if (isChristmas && isProdEnv){\n      logoHeight = '62px';\n      logoSrc = !isDarkTheme ? \"images/logo-gradient-christmas.svg\" : \"images/logo-dark-christmas.svg\";\n    }\n\n    return (\n      <Flex\n        p={0}\n        height={\"100%\"}\n        flexDirection={\"column\"}\n      >\n        <Flex\n          p={4}\n          pb={2}\n          mb={3}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          justifyContent={\"flex-start\"}\n        >\n          <RouterLink\n            to={\"/\"}\n          >\n            <Image\n              src={logoSrc}\n              height={logoHeight}\n              position={\"relative\"}\n            />\n          </RouterLink>\n        </Flex>\n        <Flex\n          my={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={\"center\"}\n        >\n          <RoundButton\n            px={2}\n            py={1}\n            buttonProps={{\n              border:1,\n              width:'auto'\n            }}\n            type={'secondary'}\n            handleClick={e => this.props.isDashboard ? this.props.goToSection(governanceRoute, false) : this.props.goToSection(dashboardRoute, false) }\n          >\n            Switch to {this.props.isDashboard ? 'Governance' : 'Dashboard'}\n          </RoundButton>\n        </Flex>\n        {\n          this.props.isMobile && (\n            <Flex\n              width={'82%'}\n              alignSelf={'center'}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'space-between'}\n            >\n              <NetworkIndicator\n                {...this.props}\n              />\n            </Flex>\n          )\n        }\n        <Flex\n          px={3}\n          height={'100%'}\n          style={{\n            overflowY:'scroll'\n          }}\n          flexDirection={\"column\"}\n        >\n          {\n            visibleLinks.map((menuLink, menuIndex) => {\n              const isExternalLink = menuLink.isExternalLink;\n              const LinkComponent = isExternalLink ? ExtLink : RouterLink;\n              const menuSelected = menuLink.selected;\n              const menuOverSelected = menuSelected || this.state.overMenuIndex === menuIndex;\n              const activeImage = isDarkTheme && menuLink.imageDark ? menuLink.imageDark : menuLink.image;\n              const inactiveImage = isDarkTheme && menuLink.imageInactiveDark ? menuLink.imageInactiveDark : menuLink.imageInactive;\n              return (\n                <Box\n                  width={\"auto\"}\n                  my={[1, \"8px\"]}\n                  key={`menu-${menuIndex}`}\n                  onMouseOut={(e) => this.setMenuIndexOver(null)}\n                  onMouseOver={(e) => this.setMenuIndexOver(menuIndex)}\n                >\n                  <LinkComponent\n                    to={menuLink.route}\n                    href={menuLink.route}\n                    onClick={this.props.closeMenu}\n                    style={{ textDecoration: \"none\" }}\n                  >\n                    <Flex\n                      py={2}\n                      px={3}\n                      borderRadius={2}\n                      alignItems={\"center\"}\n                      flexDirection={\"row\"}\n                      backgroundColor={\"transparent\"}\n                    >\n                      <Flex\n                        py={1}\n                        width={1}\n                        alignItems={\"center\"}\n                        flexDirection={\"row\"}\n                        justifyContent={\"flex-start\"}\n                      >\n                        {\n                          menuLink.image ? (\n                            <Image\n                              mr={3}\n                              ml={2}\n                              mb={0}\n                              align={\"center\"}\n                              height={[\"1.2em\",\"1.6em\"]}\n                              src={menuSelected ? activeImage : inactiveImage}\n                            />\n                          ) : menuLink.icon && (\n                            <Icon\n                              mr={3}\n                              ml={2}\n                              mb={0}\n                              name={menuLink.icon}\n                              size={ this.props.isMobile ? \"1.2em\" : \"1.6em\"}\n                              color={menuSelected ? \"menuIconActive\" : isDarkTheme ? \"white\" : \"dark-gray\"}\n                            />\n                          )\n                        }\n                        <Text\n                          fontWeight={3}\n                          fontSize={[1,2]}\n                          textAlign={\"center\"}\n                          fontFamily={'titles'}\n                          style={{\n                            whiteSpace: \"nowrap\"\n                          }}\n                          color={menuOverSelected ? \"primary\" : \"text\"}\n                        >\n                          {menuLink.label}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </LinkComponent>\n                </Box>\n              );\n            })\n          }\n        </Flex>\n        {\n          themeTogglerEnabled && (\n            <Flex\n              my={2}\n              width={\"auto\"}\n              height={\"auto\"}\n              flexDirection={\"column\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Link\n                style={{ textDecoration: \"none\" }}\n                onClick={e =>\n                  this.props.setThemeMode(\n                    this.props.themeMode === \"light\" ? \"dark\" : \"light\"\n                  )\n                }\n              >\n                <Flex\n                  p={2}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={\"flex-end\"}\n                >\n                  <Icon\n                    mr={2}\n                    ml={2}\n                    size={\"1.4em\"}\n                    align={\"center\"}\n                    color={\"copyColor\"}\n                    name={\"Brightness2\"}\n                  />\n                  <Flex\n                    px={\"0.2em\"}\n                    width={\"3.4em\"}\n                    height={\"1.6em\"}\n                    alignItems={\"center\"}\n                    borderRadius={\"1.6em\"}\n                    backgroundColor={\"cellText\"}\n                    justifyContent={this.props.themeMode === \"light\" ? \"flex-end\" : \"flex-start\"}\n                  >\n                    <Box\n                      width={\"1.3em\"}\n                      height={\"1.3em\"}\n                      borderRadius={\"1.3em\"}\n                      backgroundColor={\"copyColor\"}\n                    ></Box>\n                  </Flex>\n                  <Icon\n                    ml={2}\n                    size={\"1.4em\"}\n                    align={\"center\"}\n                    name={\"WbSunny\"}\n                    color={\"copyColor\"}\n                  />\n                </Flex>\n              </Link>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DashboardMenu;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Image, Box, Loader } from \"rimble-ui\";\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass NetworkIndicator extends Component {\n\n  state = {\n    activeNetworks: [],\n    defaultNetwork: null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadNetworks();\n  }\n\n  loadNetworks() {\n\n    if (!this.props.networkInitialized) {\n      return false;\n    }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network', 'availableNetworks']);\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network', 'enabledNetworks']);\n    const activeNetworks = enabledNetworks.map(networkId => {\n      const networkConfig = availableNetworks[networkId];\n      return {\n        value: networkId,\n        config: networkConfig,\n        label: networkConfig.name,\n        network: networkConfig.name.toLowerCase(),\n      }\n    });\n\n    const requiredNetwork = this.functionsUtil.getRequiredNetwork();\n    const defaultNetwork = activeNetworks.find(network => network.value === requiredNetwork.id);\n\n    this.setState({\n      defaultNetwork,\n      activeNetworks\n    });\n  }\n\n  selectNetwork(networkId) {\n    this.props.setRequiredNetwork(networkId);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const networkInitialized = !prevProps.networkInitialized && this.props.networkInitialized;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged || networkInitialized) {\n      this.setState({\n        defaultNetwork: null\n      }, () => {\n        this.loadNetworks();\n      });\n    }\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const imageSrc = `images/networks/${props.data.network}.svg`;\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Flex\n              mr={2}\n              width={'30px'}\n              height={'30px'}\n              borderRadius={'50%'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'primary'}\n            >\n              <Image\n                src={imageSrc}\n                width={['1.2em','1.3em']}\n                height={['1.2em','1.3em']}\n              />\n            </Flex>\n            <Text\n              fontWeight={3}\n              fontSize={[1,2]}\n              color={'primary'}\n              fontFamily={'ctas'}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.value || props.data;\n      const label = selectProps.label;\n      const imageSrc = `images/networks/${selectProps.network}.svg`;\n      return (\n        <Flex\n          {...props.innerProps}\n          px={0}\n          style={{\n            flex: '1'\n          }}\n          backgroundColor={'transparent'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            {...props.innerxProps}\n            p={0}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{ cursor: 'pointer' }}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={['1.2em','1.3em']}\n              height={['1.2em','1.3em']}\n            />\n            <Text\n              fontWeight={3}\n              fontSize={[1,2]}\n              color={'primary'}\n              fontFamily={'ctas'}\n            >\n              {label}\n            </Text>\n            <Box\n              ml={2}\n              width={'8px'}\n              height={'8px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.network.isCorrectNetwork ? '#00b84a' : '#fa0000'}\n            >\n            </Box>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return this.state.defaultNetwork ? (\n      <GenericSelector\n        {...this.props}\n        name={'network'}\n        innerProps={Object.assign({\n          px: 1,\n          py: 0,\n          border: 0,\n          boxShadow: 0,\n          height: '42px',\n          borderRadius: 0,\n          backgroundColor: 'transparent'\n        }, this.props.innerProps)}\n        customOptionProps={{\n          px: 0,\n          pl: 3,\n          pr: 0\n        }}\n        noShadow={\"true\"}\n        isDashboard={false}\n        isSearchable={false}\n        notInteractive={\"true\"}\n        options={this.state.activeNetworks}\n        CustomOptionValue={CustomOptionValue}\n        onChange={this.selectNetwork.bind(this)}\n        defaultValue={this.state.defaultNetwork}\n        CustomValueContainer={CustomValueContainer}\n      />\n    ) : (\n        <DashboardCard\n          {...this.props}\n          isActive={false}\n          isInteractive={false}\n          cardProps={{\n            border: 0,\n            px: [2, 3],\n            boxShadow: 0,\n            display:'flex',\n            borderRadius: 0,\n            width: [1, 'auto'],\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: 'transparent',\n            height: (this.props.innerProps && this.props.innerProps.height) || '42px',\n          }}\n        >\n          <Loader size={'20px'} />\n        </DashboardCard>\n      );\n  }\n}\n\nexport default NetworkIndicator;","import React from \"react\";\nimport { useSwipeable } from 'react-swipeable';\n\nexport default function Swipeable(){\n\n  const params = arguments[0];\n\n  const handlers = useSwipeable({\n    onSwiped: (eventData) => params.callback(eventData),\n    delta: 10,                            // min distance(px) before a swipe starts\n    preventDefaultTouchmoveEvent: false,  // call e.preventDefault *See Details*\n    trackTouch: true,                     // track touch input\n    trackMouse: false,                    // track mouse input\n    rotationAngle: 0,                     // set a rotation angle\n  });\n\n  return (\n  \t<div {...handlers} style={{ touchAction: 'pan-x' }}>\n  \t\t{params.children}\n  \t</div>\n  );\n}","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass TooltipModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            title={this.props.title}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{ __html: this.props.content }}\n              >\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                GOT IT\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TooltipModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newLink\":\"CryptoInput_newLink__3kk4t\",\"newPill\":\"CryptoInput_newPill__1F0vZ\",\"ethInput\":\"CryptoInput_ethInput__2X00J\",\"ethInputDark\":\"CryptoInput_ethInputDark__3NWkl\",\"mainInput\":\"CryptoInput_mainInput__2Q_Iz\",\"button\":\"CryptoInput_button__1r1Em\",\"gradientButton\":\"CryptoInput_gradientButton__xMMZI\",\"input\":\"CryptoInput_input__2TXe8\",\"newPillContainerAnim\":\"CryptoInput_newPillContainerAnim__1hcLk\"};","import { Image } from \"rimble-ui\"\nimport React, { Component } from 'react'\nclass HoverImage extends Component {\n\n    render() {\n        return (\n            <Image\n                src={this.props.hoverOn ? this.props.hover : this.props.noHover}\n                {...this.props.imageProps}\n            />\n        )\n    }\n}\nexport default HoverImage;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Notifications.module.scss';\nimport { Flex, Icon, Box, Text, Image } from \"rimble-ui\";\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Notifications extends Component {\n\n  state = {\n    tabOpened: false,\n    notifications: [],\n    mouseOverBell: false,\n    unreadNotifications: 0,\n    lastOpenTimestamp: null,\n    mouseOverNotifications: false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadNotifications();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const clickEventChanged = prevProps.clickEvent !== this.props.clickEvent;\n    if (clickEventChanged && this.props.clickEvent && !this.state.mouseOverNotifications && !this.state.mouseOverBell && this.state.tabOpened) {\n      this.setState({\n        tabOpened: false\n      });\n    }\n\n    const tabOpenedChanged = prevState.tabOpened !== this.state.tabOpened;\n    if (tabOpenedChanged && this.state.tabOpened && this.state.notifications.length > 0) {\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Notifications',\n        eventAction: 'open_tab',\n        eventLabel: ''\n      });\n\n      this.updateLastOpenTimestamp();\n    }\n\n    const notificationsChanged = JSON.stringify(prevState.notifications) !== JSON.stringify(this.state.notifications);\n    const lastOpenTimestampChanged = prevState.lastOpenTimestamp !== this.state.lastOpenTimestamp;\n    if (lastOpenTimestampChanged || notificationsChanged) {\n      const unreadNotifications = this.state.lastOpenTimestamp ? this.state.notifications.filter(n => n.timestamp > this.state.lastOpenTimestamp).length : this.state.notifications.length;\n      this.setState({\n        unreadNotifications\n      });\n    }\n  }\n\n  updateLastOpenTimestamp() {\n    const lastOpenTimestamp = Date.now();\n\n    // Set Notification params in localStorage\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams', true, {});\n    notificationsParams.lastOpenTimestamp = lastOpenTimestamp;\n    this.functionsUtil.setLocalStorage('notificationsParams', notificationsParams, true);\n\n    this.setState({\n      lastOpenTimestamp\n    });\n  }\n\n  async loadNotifications() {\n\n    // Get stored lastOpenTimestamp for notifications\n    const currTime = Date.now();\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const isMainnet = currentNetwork.id === 1;\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools', 'batchDeposit']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools', 'polygonBridge']);\n    const notificationsParams = this.functionsUtil.getStoredItem('notificationsParams', true, {});\n    const lastOpenTimestamp = notificationsParams.lastOpenTimestamp || null;\n\n    const blockNumber = this.functionsUtil.BNify(await this.functionsUtil.getBlockNumber());\n    const blocksPerWeek = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['network', 'blocksPerYear'])).div(52.1429);\n    const oneWeekAgoBlock = parseInt(blockNumber.minus(blocksPerWeek));\n\n    const polygonBridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n    const batchedDepositsEnabled = false; //batchDepositConfig.enabled && batchDepositConfig.availableNetworks.includes(currentNetwork.id) && isMainnet && !this.props.isMobile;\n\n    // Get active snapshot proposals\n    const [\n      latestFeed,\n      activeSnapshotProposals,\n      polygonTransactions,\n      governanceProposals,\n      batchedDeposits,\n    ] = await Promise.all([\n      this.functionsUtil.getSubstackLatestFeed(),\n      this.functionsUtil.getSnapshotProposals(true),\n      polygonBridgeEnabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n      governanceEnabled ? this.governanceUtil.getProposals(null, 'Active', oneWeekAgoBlock) : null,\n      batchedDepositsEnabled ? this.functionsUtil.getBatchedDeposits(this.props.account, 'executed') : null\n    ]);\n\n    let notifications = this.functionsUtil.getGlobalConfig(['notifications']).filter(n => (n.enabled && n.start <= currTime && n.end > currTime));\n\n    // Show latest Substack for 1 week\n    if (latestFeed) {\n      const latestFeedDate = this.functionsUtil.strToMoment(latestFeed.isoDate);\n      if (latestFeedDate.isAfter(this.functionsUtil.strToMoment().subtract(7, 'd'))) {\n        notifications.push({\n          link: latestFeed.link,\n          image: '/images/substack.png',\n          timestamp: latestFeedDate._d.getTime(),\n          title: this.functionsUtil.htmlDecode(latestFeed.title),\n          text: this.functionsUtil.htmlDecode(latestFeed.content),\n          date: latestFeedDate.utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      }\n    }\n\n    // Add snapshot proposals\n    const snapshotProposalBaseUrl = this.functionsUtil.getGlobalConfig(['network', 'providers', 'snapshot', 'urls', 'proposals']);\n\n    if (activeSnapshotProposals) {\n      activeSnapshotProposals.forEach(p => {\n        const text = p.body.replace(/^[#]*/, '');\n        // const text = p.msg.payload.name.replace(/^[#]*/,'');\n        notifications.push({\n          text,\n          image: '/images/snapshot.png',\n          timestamp: p.start * 1000,\n          link: snapshotProposalBaseUrl + p.id,\n          title: p.title,\n          date: this.functionsUtil.strToMoment(p.start * 1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n        });\n      });\n    }\n\n    // Add governance proposals\n    if (governanceProposals) {\n      const governanceProposalUrl = this.functionsUtil.getGlobalConfig(['governance', 'baseRoute']) + '/proposals/';\n      governanceProposals.forEach(p => {\n        notifications.push(\n          {\n            text: p.title,\n            iconProps: {\n              color: '#00acff'\n            },\n            icon: 'LightbulbOutline',\n            timestamp: p.timestamp * 1000,\n            title: 'Governance Proposal',\n            hash: governanceProposalUrl + p.id,\n            date: this.functionsUtil.strToMoment(p.timestamp * 1000).utc().format('MMM DD, YYYY HH:mm UTC'),\n          }\n        );\n      });\n    }\n\n    // Add Executed Batch Deposits\n    if (batchedDeposits) {\n      const batchDepositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/tools/${batchDepositConfig.route}/`;\n      Object.keys(batchedDeposits).forEach(batchToken => {\n        const batchInfo = batchedDeposits[batchToken];\n        const timestamp = batchInfo.lastExecution.timeStamp * 1000;\n        const text = `You can claim ${batchInfo.batchRedeems.toFixed(4)} ${batchToken}`;\n        notifications.push({\n          text,\n          timestamp,\n          icon: 'DoneAll',\n          title: 'Batch Deposit Executed',\n          hash: batchDepositBaseUrl + batchToken,\n          iconProps: {\n            color: this.props.theme.colors.transactions.status.completed\n          },\n          date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n        });\n      });\n    }\n\n    if (polygonTransactions) {\n      const polygonBridgeBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/tools/${polygonBridgeConfig.route}/`;\n      const polygonWithdrawalsToExit = polygonTransactions.filter(tx => tx.action === 'Withdraw' && tx.included && !tx.exited);\n      polygonWithdrawalsToExit.forEach(tx => {\n        const timestamp = tx.timeStamp * 1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(10, 'd'))) {\n          const text = `You can Exit ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.token} from Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image: polygonBridgeConfig.image,\n            title: 'Polygon Withdraw Completed',\n            hash: polygonBridgeBaseUrl + tx.tokenSymbol,\n            date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n\n      const depositBaseUrl = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']) + `/best/`;\n      const polygonCompletedDeposits = polygonTransactions.filter(tx => tx.action === 'Deposit' && tx.included);\n      polygonCompletedDeposits.forEach(tx => {\n        const timestamp = tx.timeStamp * 1000;\n        const txDate = this.functionsUtil.strToMoment(timestamp);\n        if (txDate.isAfter(this.functionsUtil.strToMoment().subtract(1, 'd'))) {\n          const text = `Your ${this.functionsUtil.BNify(tx.value).toFixed(4)} ${tx.tokenSymbol} are now available in Polygon`;\n          notifications.push({\n            text,\n            timestamp,\n            image: polygonBridgeConfig.image,\n            title: 'Polygon Deposit Completed',\n            hash: depositBaseUrl + tx.tokenSymbol,\n            date: this.functionsUtil.strToMoment(timestamp).utc().format('MMM DD, YYYY HH:mm UTC')\n          });\n        }\n      });\n    }\n\n    notifications = notifications.sort((a, b) => (a.timestamp < b.timestamp ? 1 : -1));\n\n    this.setState({\n      notifications,\n      lastOpenTimestamp\n    });\n  }\n\n  setMouseOverBell(mouseOverBell) {\n    this.setState({\n      mouseOverBell\n    });\n  }\n\n  setMouseOverNotifications(mouseOverNotifications) {\n    this.setState({\n      mouseOverNotifications\n    });\n  }\n\n  toggleTab() {\n    this.setState((prevState) => ({\n      tabOpened: !prevState.tabOpened\n    }));\n  }\n\n  openNotification(notification) {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Notifications',\n      eventAction: 'open_notification',\n      eventLabel: notification.link || notification.hash\n    });\n\n    if (notification.link) {\n      return this.functionsUtil.openWindow(notification.link);\n    } else if (notification.hash) {\n      return window.location.hash = notification.hash;\n    }\n\n    return false;\n  }\n\n  render() {\n    const hasUnreadNotifications = this.state.unreadNotifications > 0;\n    const iconColor = hasUnreadNotifications ? '#0239FF' : 'dashboardBg';\n    return (\n      <Flex\n        zIndex={999}\n        position={'relative'}\n        {...this.props.flexProps}\n      >\n        <Box\n          width={1}\n          position={'relative'}\n          onMouseOut={(e) => this.setMouseOverBell(false)}\n          onMouseOver={(e) => this.setMouseOverBell(true)}\n        >\n          <Icon\n            color={iconColor}\n            name={'Notifications'}\n            {...this.props.iconProps}\n            onClick={this.toggleTab.bind(this)}\n            className={[styles.bell, (hasUnreadNotifications ? styles.ring : null), (this.state.tabOpened || this.state.notifications.length > 0 ? styles.active : null)]}\n          />\n          {\n            hasUnreadNotifications &&\n            <Box\n              className={styles.counter}\n            >\n              {this.state.notifications.length}\n            </Box>\n          }\n        </Box>\n        {\n          this.state.tabOpened &&\n          <DashboardCard\n            cardProps={{\n              style: {\n                right: 0,\n                maxHeight: '21em',\n                overflow: 'scroll',\n                position: 'absolute',\n                top: this.props.isMobile ? '2.8em' : '3em',\n              },\n              minWidth: ['91vw', '22em'],\n              onMouseOut: (e) => this.setMouseOverNotifications(false),\n              onMouseOver: (e) => this.setMouseOverNotifications(true),\n            }}\n          >\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              {\n                this.state.notifications.length > 0 ?\n                  this.state.notifications.map((n, index) => (\n                    <ExtLink\n                      style={{\n                        textDecoration: 'none'\n                      }}\n                      key={`notification_${index}`}\n                      onClick={e => this.openNotification(n)}\n                    >\n                      <Flex\n                        py={2}\n                        px={1}\n                        flexDirection={'row'}\n                        className={[styles.notification, this.props.themeMode === 'dark' ? styles.dark : null]}\n                        borderBottom={index < this.state.notifications.length - 1 ? `1px solid ${this.props.theme.colors.divider}` : null}\n                      >\n                        <Flex\n                          minWidth={'2em'}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          {\n                            n.icon ? (\n                              <Icon\n                                name={n.icon}\n                                size={'1.6em'}\n                                color={'copyColor'}\n                                {...n.iconProps}\n                              />\n                            ) : n.image && (\n                              <Image\n                                src={n.image}\n                                width={'1.6em'}\n                                height={'1.6em'}\n                              />\n                            )\n                          }\n                        </Flex>\n                        <Flex\n                          ml={1}\n                          overflow={'hidden'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'primary'}\n                            style={{\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              textOverflow: 'ellipsis'\n                            }}\n                          >\n                            {n.title}\n                          </Text>\n                          <Text\n                            fontSize={1}\n                            lineHeight={1.3}\n                            color={'copyColor'}\n                            style={{\n                              overflow: 'hidden',\n                              whiteSpace: 'nowrap',\n                              textOverflow: 'ellipsis'\n                            }}\n                          >\n                            {n.text}\n                          </Text>\n                          <Text\n                            fontSize={0}\n                            lineHeight={1.3}\n                            color={'cellText'}\n                          >\n                            {n.date}\n                          </Text>\n                        </Flex>\n                      </Flex>\n                    </ExtLink>\n                  ))\n                  : (\n                    <Text\n                      py={2}\n                      textAlign={'center'}\n                    >\n                      There are no notifications.\n                    </Text>\n                  )\n              }\n            </Flex>\n          </DashboardCard>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Notifications;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport AssetField from '../../AssetField/AssetField.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport { Heading, Modal, Flex, EthAddress } from \"rimble-ui\";\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport CardIconButton from '../../CardIconButton/CardIconButton';\n\nclass AccountModal extends React.Component {\n\n  state = {\n    logout: false,\n    balances: null\n  }\n\n  loadBalances = async () => {\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || !this.props.account || this.state.balances !== null){\n      return false;\n    }\n\n    const balances = [];\n    const allTokens = Object.keys(this.props.availableStrategies.best);\n\n    allTokens.forEach( baseToken => {\n      const tokens = [];\n      tokens.push(baseToken);\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const strategyToken = this.props.availableStrategies[strategy][baseToken];\n        if (strategyToken){\n          tokens.push(strategyToken.idle.token);\n        }\n      });\n\n      balances.push(tokens);\n    });\n\n    this.setState({\n      balances\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n    this.loadBalances();\n  }\n\n  componentDidUpdate(prevProps) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.acccount !== this.props.account;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && this.props.availableStrategies;\n    if (availableStrategiesChanged || accountChanged || contractsInitialized){\n      this.loadBalances();\n    }\n  }\n\n  setConnector = async (connectorName) => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Connect',\n      eventAction: 'logout'\n    });\n\n    if (typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  }\n\n  async logout(){\n    this.setState({\n      logout:true\n    });\n\n    this.props.logout();\n    await this.setConnector('Infura');\n\n    // this.props.closeModal();\n  }\n\n  goToSection(section){\n    this.props.goToSection(section);\n    this.props.closeModal();\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n\n    if (this.props.account){\n\n      const rows = (Object.keys(this.props.availableStrategies).length+1);\n      const renderBalances = this.state.balances && this.state.balances.map( (tokens,i) => {\n        return (\n          <Flex\n            mt={2}\n            width={1}\n            boxShadow={0}\n            key={'balance_'+i}\n            alignItems={'center'}\n            flexDirection={'row'}\n            >\n              {\n                tokens.map( (token,tokenIndex) => (\n                  <Flex\n                    width={1/rows}\n                    flexDirection={'row'}\n                    key={'balance_token_'+token}\n                    justifyContent={'flex-start'}\n                  >\n                    <AssetField\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                        ,...this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()])\n                      }}\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mr:[1,2],\n                          ml:[1,4],\n                          width:['1.4em','2em'],\n                          height:['1.4em','2em']\n                        }\n                      }}\n                    />\n                    <AssetField\n                      {...this.props}\n                      token={token}\n                      tokenConfig={{\n                        token:token\n                      }}\n                      fieldInfo={{\n                        name:'tokenBalance',\n                        props:{\n                          fontSize:[0,2],\n                          fontWeight:500,\n                          color:'cellText'\n                        }\n                      }}\n                    />\n                  </Flex>\n                ) )\n              }\n          </Flex>\n        );\n      });\n\n      const showTools = ['addFunds','tokenSwap'];\n\n      return (\n        <Modal isOpen={this.props.isOpen}>\n          <ModalCard closeFunc={this.props.closeModal}>\n            <ModalCard.Header title={'Account overview'}></ModalCard.Header>\n            <ModalCard.Body>\n              <Flex\n                alignItems={'center'}\n                width={[\"auto\", \"40em\"]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                  justifyContent={'stretch'}\n                >\n                  <EthAddress\n                    width={1}\n                    address={this.props.account}\n                    className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                  />\n                </Flex>\n                <Flex\n                  width={1}\n                  mb={[2,3]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['100%','30em']}\n                >\n                  <Heading.h4\n                    color={'copyColor'}\n                    textAlign={'center'}\n                  >\n                    Balances:\n                  </Heading.h4>\n                  { renderBalances }\n                </Flex>\n                {\n                  !viewOnly && (\n                    <Flex\n                      width={1}\n                      mb={[2,3]}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Heading.h4\n                        mb={2}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Tools:\n                      </Heading.h4>\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                      >\n                        {\n                          showTools.map( toolName => {\n                            const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                            return (\n                              <CardIconButton\n                                {...this.props}\n                                key={`tool_${toolName}`}\n                                cardProps={{\n                                  mx:[0,2],\n                                  my:[2,0],\n                                  width:'auto',\n                                  minWidth:['50%','auto']\n                                }}\n                                icon={toolConfig.icon}\n                                text={toolConfig.label}\n                                handleClick={ e => this.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            )\n                          })\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </ModalCard.Body>\n            <ModalCard.Footer>\n              <ButtonLoader\n                buttonText={'Logout wallet'}\n                isLoading={this.state.logout}\n                handleClick={ async () => { await this.logout() } }\n                buttonProps={{\n                  mt:[4,8],\n                  size:['auto','medium'],\n                  minWidth:['95px','145px']\n                }}\n              >\n              </ButtonLoader>\n            </ModalCard.Footer>\n          </ModalCard>\n        </Modal>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AccountModal;\n","import React, { Component } from \"react\";\nimport HoverImage from \"../HoverImage/HoverImage\"\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport Notifications from \"../Notifications/Notifications\";\nimport AccountModal from \"../utilities/components/AccountModal\";\nimport { Flex, Icon, Image, Text, Link, Loader } from \"rimble-ui\";\nimport NetworkIndicator from \"../NetworkIndicator/NetworkIndicator\";\n\nclass MenuAccount extends Component {\n  state = {\n    isModalOpen: null,\n    idleTokenBalance: null,\n    logout: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"Connect\",\n      eventAction: \"logout\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.unsetConnector();\n    // return await this.props.context.setConnector(connectorName);\n  };\n  async logout() {\n    this.setState({\n      logout: true\n    });\n\n    this.props.logout();\n    await this.setConnector(\"Infura\");\n    // this.props.closeModal();\n  }\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n    this.loadIdleTokenBalance();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountInizialized || contractsInitialized) {\n      this.loadIdleTokenBalance();\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged) {\n      this.setState({\n          isModalOpen: null\n      },() => {\n        this.loadIdleTokenBalance();\n      });\n    }\n  }\n\n  async loadIdleTokenBalance() {\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const idleGovTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens', 'IDLE']);\n    const idleGovTokenEnabled = idleGovTokenConfig.enabled && idleGovTokenConfig.availableNetworks.includes(currentNetwork.id);\n    let idleTokenBalance = null;\n\n    if (idleGovTokenEnabled) {\n      idleTokenBalance = this.functionsUtil.BNify(0);\n      const [\n        balance,\n        unclaimed\n      ] = await Promise.all([\n        this.idleGovToken.getBalance(this.props.account),\n        this.idleGovToken.getUnclaimedTokens(this.props.account)\n      ]);\n\n      if (balance && unclaimed) {\n        idleTokenBalance = this.functionsUtil.BNify(balance).plus(unclaimed);\n      }\n    }\n\n    return this.setState({\n      idleTokenBalance\n    });\n  }\n\n  toggleModal = modalName => {\n    this.setState(state => ({\n      ...state,\n      isModalOpen: state.isModalOpen === modalName ? null : modalName\n    }));\n  };\n\n  render() {\n    const walletProvider = this.functionsUtil.getStoredItem(\"walletProvider\", false, null);\n    const connectorInfo = walletProvider ? this.functionsUtil.getGlobalConfig([\"connectors\", walletProvider.toLowerCase()]) : null;\n    const walletIcon = connectorInfo && connectorInfo.icon ? connectorInfo.icon : walletProvider ? `${walletProvider.toLowerCase()}.svg` : null;\n\n    return this.props.account ? (\n      <Flex\n        width={1}\n        mr={[0,5]}\n        flexDirection={[\"column\", \"row\"]}\n        alignItems={[\"flex-start\", \"center\"]}\n      >\n        <Flex\n          px={[2,0]}\n          flexDirection={\"row\"}\n          alignItems={\"center\"}\n          width={[1, \"fit-content\"]}\n          justifyContent={\"space-between\"}\n        >\n          {\n            this.props.isMobile && (\n              <Flex\n                ml={1}\n                mr={2}\n                width={'12%'}\n              >\n                <Icon\n                  size={\"2.4em\"}\n                  color={\"copyColor\"}\n                  onClick={this.props.toggleMenu}\n                  name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.isMobile && (\n              <Flex\n                width={'fit-content'}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n          {\n            this.props.isMobile && (\n              <Flex\n                width={'87%'}\n                justifyContent={\"space-between\"}\n              >\n                <Link\n                  style={{\n                    width:'80%',\n                    display:'flex',\n                    overflow:'hidden',\n                    textDecoration:'none'\n                  }}\n                  onClick={e => this.toggleModal(\"account\")}\n                >\n                  <Flex\n                    p={0}\n                    width={'100%'}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={[\"center\", \"flex-start\"]}\n                  >\n                  {\n                    connectorInfo ? (\n                      <Image\n                        mr={[1, 2]}\n                        width={\"2em\"}\n                        height={\"2em\"}\n                        display={\"inline-flex\"}\n                        alt={walletProvider.toLowerCase()}\n                        src={`images/connectors/${walletIcon}`}\n                      />\n                    ) : (\n                      <Icon\n                        mr={[1, 2]}\n                        size={\"2em\"}\n                        color={\"copyColor\"}\n                        name={\"AccountCircle\"}\n                      />\n                    )\n                  }\n                  {\n                    this.props.isMobile ? (\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"copyColor\"}\n\n                        style={{\n                          flex: '1',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {this.props.account}\n                      </Text>\n                    ) : (\n                      <Flex\n                        pr={3}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <ShortHash\n                          fontSize={2}\n                          fontWeight={3}\n                          {...this.props}\n                          color={\"primary\"}\n                          fontFamily={'ctas'}\n                          hash={this.props.account}\n                        />\n                      </Flex>\n                    )\n                  }\n                  </Flex>\n                </Link>\n                <Notifications\n                  flexProps={{ p: 2 }}\n                  iconProps={{ p: 1, size: \"2.5em\" }}\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n        </Flex>\n        {\n          !this.props.isMobile && (\n            <Flex\n              pr={[2,0]}\n              style={{\n                flex: \"1 1 auto\"\n              }}\n              width={[1, \"auto\"]}\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              justifyContent={\"flex-end\"}\n            >\n              <Link\n                mr={3}\n                style={{\n                  textDecoration:'none'\n                }}\n                onClick={e => this.toggleModal(\"account\")}\n              >\n                <Flex\n                  p={0}\n                  width={1}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={[\"center\", \"flex-start\"]}\n                >\n                  {\n                    connectorInfo ? (\n                      <Image\n                        mr={[1, 2]}\n                        width={\"2em\"}\n                        height={\"2em\"}\n                        display={\"inline-flex\"}\n                        alt={walletProvider.toLowerCase()}\n                        src={`images/connectors/${walletIcon}`}\n                      />\n                    ) : (\n                      <Icon\n                        mr={[1, 2]}\n                        size={\"2em\"}\n                        color={\"copyColor\"}\n                        name={\"AccountCircle\"}\n                      />\n                    )\n                  }\n                  {\n                    this.props.isMobile ? (\n                      <Text\n                        mr={2}\n                        fontSize={2}\n                        fontWeight={3}\n                        color={\"copyColor\"}\n\n                        style={{\n                          flex: '1',\n                          overflow: 'hidden',\n                          textOverflow: 'ellipsis'\n                        }}\n                      >\n                        {this.props.account}\n                      </Text>\n                    ) : (\n                      <Flex\n                        pr={3}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <ShortHash\n                          fontSize={2}\n                          fontWeight={3}\n                          {...this.props}\n                          color={\"primary\"}\n                          fontFamily={'ctas'}\n                          hash={this.props.account}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Flex>\n              </Link>\n              <Link\n                style={{\n                  textDecoration:'none'\n                }}\n                onClick={e => this.props.setGovModal(true)}\n              >\n                <Flex\n                  p={0}\n                  width={1}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  justifyContent={[\"center\", \"flex-start\"]}\n                >\n                  <Image\n                    mr={2}\n                    width={\"1.7em\"}\n                    height={\"1.7em\"}\n                    display={\"inline-flex\"}\n                    src={`images/tokens/IDLE.svg`}\n                  />\n                  {\n                    this.state.idleTokenBalance ? (\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1, 2]}\n                        color={\"primary\"}\n                        fontFamily={'ctas'}\n                      >\n                        {this.state.idleTokenBalance.toFixed(2)} IDLE\n                      </Text>\n                    ) : <Loader size={'20px'} />\n                  }\n                </Flex>\n              </Link>\n              <Flex\n                ml={3}\n                alignItems={\"center\"}\n                flexDirection={\"row\"}\n                justifyContent={\"flex-end\"}\n              >\n                <Link\n                  style={{\n                    textDecoration:'none'\n                  }}\n                  onClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n                >\n                  <Flex\n                    p={0}\n                    width={1}\n                    alignItems={\"center\"}\n                    flexDirection={\"row\"}\n                    justifyContent={\"flex-start\"}\n                    onMouseEnter={e => this.setState({ isHover: true })}\n                    onMouseLeave={e => this.setState({ isHover: false })}\n                  >\n                    <HoverImage\n                      hoverOn={this.state.isHover}\n                      noHover={'images/logout.svg'}\n                      hover={'images/logoutHover.svg'}\n                      imageProps={{\n                        mx: 2,\n                        width: \"24px\",\n                        height: \"24px\",\n                        display: \"inline-flex\"\n                      }}\n                    />\n                  </Flex>\n                </Link>\n                <Notifications\n                  {...this.props}\n                  iconProps={{\n                    size: \"2.1em\"\n                  }}\n                  flexProps={{\n                    ml: 2\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        <AccountModal\n          {...this.props}\n          isOpen={this.state.isModalOpen === \"account\"}\n          closeModal={e => this.toggleModal(\"account\")}\n        />\n      </Flex>\n    ) : (\n      <Flex\n        px={2}\n        width={1}\n        mr={[0,5]}\n      >\n        <Flex\n          width={1}\n          alignItems={\"center\"}\n          style={{ justifyContent: \"flex-start\" }}\n          justifyContent={[\"flex-start\", \"flex-end\"]}\n        >\n          {this.props.isMobile && (\n            <Flex mr={2}>\n              <Icon\n                size={\"2.4em\"}\n                color={\"copyColor\"}\n                onClick={this.props.toggleMenu}\n                name={this.props.menuOpened ? \"Close\" : \"Menu\"}\n              />\n            </Flex>\n          )}\n          {\n            !this.props.isMobile && (\n              <Flex\n                width={1}\n                justifyContent={['space-between', 'flex-start']}\n              >\n                <NetworkIndicator\n                  innerProps={{\n                    px: 1,\n                    py: 0,\n                    width: ['100%', 'auto'],\n                    height: ['45px', '54px']\n                  }}\n                  {...this.props}\n                />\n              </Flex>\n            )\n          }\n        </Flex>\n        <Flex\n          width={1}\n          flexDirection={\"row\"}\n          alignItems={[\"center\"]}\n          justifyContent={\"flex-end\"}\n        >\n          <RoundButton\n            {...this.props}\n            buttonProps={{\n              width:'auto',\n              style: {\n                display: \"flex\",\n                justifyContent: \"flex-start\"\n              }\n            }}\n            handleClick={this.props.account ? e => this.logout() : this.props.connectAndValidateAccount}\n          >\n            Connect to Idle\n          </RoundButton>\n          <Notifications\n            {...this.props}\n            iconProps={{\n              size: \"2.2em\"\n            }}\n            flexProps={{\n              ml: 2\n            }}\n          />\n        </Flex>\n      </Flex >\n    );\n  }\n}\n\nexport default MenuAccount;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Text, Modal, Flex, Image, Link, Icon } from \"rimble-ui\";\n\nclass GovModal extends React.Component {\n\n  state = {\n    total:null,\n    balance:null,\n    txStatus:null,\n    unclaimed:null,\n    processing: {\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  loadTokenInfo = async () => {\n    const [\n      balance,\n      unclaimed\n    ] = await Promise.all([\n      this.idleGovToken.getBalance(this.props.account),\n      this.idleGovToken.getUnclaimedTokens(this.props.account)\n    ]);\n\n    let total = this.functionsUtil.BNify(0);\n    if (balance && unclaimed){\n      total = this.functionsUtil.BNify(balance).plus(unclaimed);\n    }\n\n    this.setState({\n      total,\n      balance,\n      unclaimed\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n    this.loadTokenInfo();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (accountChanged || requiredNetworkChanged || contractsInitialized){\n      this.loadTokenInfo();\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      txStatus:null,\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  claim = async () => {\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'claim',\n        eventCategory: 'Governance',\n        eventLabel: tx.status ? tx.status : error\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx.status ? tx.status : 'error',\n      };\n\n      if (tx.status === 'success'){\n        newState.balance = this.state.unclaimed;\n        newState.unclaimed = this.functionsUtil.BNify(0);\n\n        if (typeof this.props.claimCallback === 'function'){\n          this.props.claimCallback();\n        }\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.idleGovToken.claimRewards(callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  closeModal = async (action) => {\n    this.props.closeModal();\n  }\n\n  render() {\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetworkId);\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          mainColor={'white'}\n          maxWidth={['auto','420px']}\n          closeFunc={this.props.closeModal}\n          background={'radial-gradient(76.02% 75.41% at 1.84% 0%, rgb(162, 196, 246) 0%, rgb(10, 79, 176) 100%)'}\n        >\n          <ModalCard.Header\n            pt={3}\n            titleProps={{\n              color:'white'\n            }}\n            title={'Your IDLE balance'}\n            borderBottom={'1px solid rgba(255,255,255,0.2)'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body\n            px={3}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Image\n                mt={2}\n                width={'3em'}\n                height={'3em'}\n                src={'images/tokens/IDLE.svg'}\n              />\n              <Text\n                mt={2}\n                fontSize={7}\n                color={'white'}\n                fontWeight={500}\n              >\n                {this.state.total ? this.state.total.toFixed(2) : '-'}\n              </Text>\n              <Text\n                mb={2}\n                fontSize={3}\n                color={'white'}\n                fontWeight={400}\n                textAlign={'center'}\n              >\n                {\n                  this.state.unclaimed && this.state.unclaimed.gt(0) ? 'You can now claim your IDLE tokens from the Early LPs Program!' : 'You don\\'t have any IDLE to claim from the Early LPs Program'\n                }\n              </Text>\n              <Flex\n                pb={2}\n                mb={3}\n                width={1}\n                flexDirection={'column'}\n                borderBottom={'1px solid rgba(255,255,255,0.2)'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Balance:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.balance ? this.state.balance.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    Unclaimed:\n                  </Text>\n                  <Text\n                    color={'white'}\n                    fontWeight={500}\n                  >\n                    {this.state.unclaimed ? this.state.unclaimed.toFixed(4) : '-'}\n                  </Text>\n                </Flex>\n                {\n                  governanceEnabled && (\n                    <Link\n                      href={`/#${this.functionsUtil.getGlobalConfig(['governance','baseRoute'])}`}\n                    >\n                      <Flex\n                        zIndex={10}\n                        position={'relative'}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          color={'white'}\n                          fontWeight={400}\n                        >\n                          Go to governance\n                        </Text>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'white'}\n                          name={\"OpenInNew\"}\n                        />\n                      </Flex>\n                    </Link>\n                  )\n                }\n              </Flex>\n              {\n                <Flex\n                  mb={3}\n                  width={1}\n                  zIndex={10}\n                  position={'relative'}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.state.unclaimed && this.state.unclaimed.gt(0) ? \n                      // Sending transaction\n                      this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          textColor={'white'}\n                          cancelTextColor={'moon-gray'}\n                          cancelTextHoverColor={'white'}\n                          waitText={`Claim estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing Claim request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            color:'blue',\n                            width:[1,'45%'],\n                            mainColor:'white',\n                            contrastColor:'blue',\n                            disabled:!this.state.unclaimed || this.state.unclaimed.lte(0)\n                          }}\n                          handleClick={this.claim.bind(this)}\n                        >\n                          Claim\n                        </RoundButton>\n                      )\n                    : (\n                      <RoundButton\n                        buttonProps={{\n                          color:'blue',\n                          width:[1,'45%'],\n                          mainColor:'white',\n                          contrastColor:'blue',\n                        }}\n                        handleClick={this.closeModal.bind(this)}\n                      >\n                        Close\n                      </RoundButton>\n                    )\n                  }\n                </Flex>\n              }\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GovModal;","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport { Box, Flex, Text, Button } from \"rimble-ui\";\nimport MenuAccount from \"../MenuAccount/MenuAccount\";\nimport GovModal from \"../utilities/components/GovModal\";\nimport GovernanceUtil from \"../utilities/GovernanceUtil\";\n\nclass DashboardHeader extends Component {\n  state = {\n    unclaimed: null,\n    vestingAmount: null,\n    govModalOpened: false\n  };\n\n  // Utils\n  idleGovToken = null;\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const networkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (accountChanged || networkChanged) {\n      await this.loadData();\n    }\n  }\n\n  async loadData() {\n    const idleGovTokenEnabled = this.functionsUtil.getGlobalConfig([\n      \"govTokens\",\n      \"IDLE\",\n      \"enabled\"\n    ]);\n    if (idleGovTokenEnabled && this.props.account) {\n      const unclaimed = await this.idleGovToken.getUnclaimedTokens(\n        this.props.account\n      );\n      this.setState({\n        unclaimed\n      });\n    }\n  }\n\n  setConnector = async connectorName => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventAction: \"logout\",\n      eventCategory: \"Connect\"\n    });\n\n    if (typeof this.props.setConnector === \"function\") {\n      this.props.setConnector(connectorName);\n    }\n\n    return await this.props.context.setConnector(connectorName);\n  };\n\n  async exit() {\n    this.props.goToSection(\"/\", false);\n  }\n\n  setGovModal(govModalOpened) {\n    this.setState({\n      govModalOpened\n    });\n  }\n\n  render() {\n    return (\n      <Box >\n        <Flex\n          py={2}\n          width={1}\n          flexDirection={\"row\"}\n          justifyContent={\"space-between\"}\n          alignItems={[\"flex-end\", \"center\"]}\n        >\n          <MenuAccount\n            width={1}\n            {...this.props}\n            setGovModal={this.setGovModal.bind(this)}\n            goToSection={this.props.goToSection.bind(this)}\n          />\n        </Flex>\n        {\n          this.state.unclaimed && this.state.unclaimed.gt(0) && (\n            <Flex\n              p={2}\n              mt={3}\n              width={1}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              flexDirection={[\"column\", \"row\"]}\n            >\n              <Text\n                fontSize={2}\n                fontWeight={500}\n                color={\"flashColor\"}\n                textAlign={\"center\"}\n              >\n                IDLE Governance Token is now available,\n                <ExtLink\n                  ml={1}\n                  fontSize={2}\n                  fontWeight={500}\n                  color={\"primary\"}\n                  hoverColor={\"primary\"}\n                  href={\n                    \"https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7\"\n                  }\n                >\n                  discover more\n                </ExtLink>\n                ! You have {this.state.unclaimed.toFixed(4)} IDLE tokens to\n                claim.\n              </Text>\n              <Button\n                ml={[0, 2]}\n                mt={[2, 0]}\n                size={\"small\"}\n                mainColor={\"blue\"}\n                onClick={e => this.setGovModal(true)}\n              >\n                CLAIM NOW\n              </Button>\n            </Flex>\n          )\n        }\n        <GovModal\n          {...this.props}\n          isOpen={this.state.govModalOpened}\n          claimCallback={this.loadData.bind(this)}\n          closeModal={e => this.setGovModal(false)}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default DashboardHeader;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bell\":\"Notifications_bell__2ztij\",\"ring\":\"Notifications_ring__3e7Th\",\"counter\":\"Notifications_counter__2rAzi\",\"list\":\"Notifications_list__qOGcP\",\"notification\":\"Notifications_notification__qFTm7\",\"dark\":\"Notifications_dark__1vXvv\"};"],"sourceRoot":""}