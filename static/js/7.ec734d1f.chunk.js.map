{"version":3,"sources":["Dashboard/Dashboard.module.scss","FlashNews/FlashNews.js","Stats/StatsChart.js","Rebalance/Rebalance.js","utilities/components/DateRangeModal.js","StatsAsset/StatsAsset.js","TrancheSelector/TrancheSelector.js","StatsTranche/StatsTranche.js","Stats/Stats.js","Utils/Utils.js","FundsOverview/FundsOverview.js","CurveRedeem/CurveRedeem.js","DepositRedeem/DepositRedeem.js","ActiveCoverages/ActiveCoverages.js","EstimatedEarnings/EstimatedEarnings.js","AssetPage/AssetPage.js","utilities/components/BetaModal.js","CurveDeposit/CurveDeposit.js","PortfolioEquityCurve/PortfolioEquityCurve.js","FundsOverviewCurve/FundsOverviewCurve.js","CurveStrategy/CurveStrategy.js","utilities/components/PolygonModal.js","utilities/components/WelcomeModal.js","utilities/components/MigrateModal.js","utilities/components/UpgradeModal.js","utilities/components/RiskAdjustedModal.js","Dashboard/Dashboard.js"],"names":["module","exports","bg","bg-top-left","bg-bottom-right","bg-noise","submenu","opened","FlashNews","state","activeNews","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","gaugesConfg","getGlobalConfig","stakingConfig","flashNews","1","name","icon","text","link","url","label","getDashboardSectionUrl","concat","route","image","137","currentNetworkId","getRequiredNetworkId","activeFlashNews","length","Math","floor","random","setState","prevProps","prevState","_this2","react_default","a","createElement","DashboardCard","cardProps","p","mb","width","backgroundColor","isActive","isInteractive","index_es","alignItems","justifyContent","flexDirection","mr","size","color","heght","src","fontSize","fontWeight","textAlign","ExtLink","ml","hoverColor","href","onClick","e","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","Component","StatsChart","chartProps","chartType","chartData","chartWidth","parseAum","value","parseInt","parseFloat","toFixed","_this","selectedToken","loadApiData","_callee3","maxGridLines","apiResults","apiResults_aa","apiResults_bb","apiResults_unfiltered","protocols","totalItems","tranchesConfig","versionInfo","keys","tempData","gridYStep","itemIndex","daysCount","gridYValues","maxChartValue","axisBottomIndex","daysFrequency","idleChartData","firstIdleBlock","axisBottomMaxValues","apiResults_filtered","seniorTrancheName","juniorTrancheName","i","Values","firstPriceAA","firstPriceBB","chartDataAA","chartDataBB","firstBlock","_i","divergingData","startTimestampA","endTimestampA","timestamp","date","lastRow","maxRange","_i2","startTimestamp","endTimestamp","_timestamp","_date","_i3","_i4","_i5","_i6","dates","_i7","_i8","chartValues","prevValue","_i9","prevApr","prevData","avgApy","startBalance","currentBalance","aaveProtocolInfo","_i10","firstTokenPrice","_i11","regenerator_default","wrap","_context3","prev","next","tokenConfig","chartMode","abrupt","Object","assign","globalConfigs","stats","versions","idleVersion","Line","capitalize","AA","baseName","BB","t0","push","id","hex","data","map","d","x","moment","timeStamp","format","y","fixTokenDecimals","apr","max","sort","b","isBefore","diff","ceil","xScale","type","xFormat","yFormat","yScale","stacked","axisLeft","legend","tickSize","orient","tickPadding","tickRotation","legendOffset","tickValues","legendPosition","axisBottom","isMobile","pointSize","useMesh","animate","pointLabel","curve","enableArea","enableSlices","enableGridX","enableGridY","pointBorderWidth","colors","pointLabelYOffset","legends","itemWidth","itemHeight","translateX","translateY","symbolSize","itemsSpacing","direction","anchor","symbolShape","itemTextColor","theme","effects","on","style","themeMode","axis","ticks","fill","fontFamily","fonts","sansSerif","grid","line","stroke","lineChartStroke","strokeDasharray","textTransform","pointColor","from","modifiers","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","CustomTooltip","protocolName","serieId","protocolEarning","yFormatted","CustomTooltipRow","key","apy","days","tokenPrice","virtualPrice","decimals","div","minus","times","blockNumber","itemPos","blocknumber","splice","protocolApy","_d","getTime","deposits","redeems","forEach","row","idleTokens","totalSupply","idleTokensPrev","eq","gte","abs","values","filter","v","Bar","indexBy","enableLabel","minValue","maxValue","axisRight","abbreviateNumber","markers","lineStyle","strokeOpacity","textStyle","transactions","action","deposit","legendOrientation","legendOffsetX","redeem","padding","labelTextColor","labelSkipWidth","labelSkipHeight","dataFrom","tooltip","container","boxShadow","background","xFormatted","strToMoment","depositFormatted","redeemFormatted","idleSupply","aum_aa","contractValue","toString","aum_bb","formatMoney","BNify","ratio","tokens","hsl","join","idlePrice","aum","j","protocolsData","protocolAllocation","protocolAddr","toLowerCase","address","z","rate","allocation","foundItem","item","pos","indexOf","allocations","undefined","serieColor","protocolInfo","protocolColor","protocolAllocationFormatted","protocolAllocationPerc","protocolData","protocolPaused","foundProtocol","find","_ref2","tableCell","_ref3","py","px","borderCollapse","display","height","totalAllocation","reduce","accumulator","plus","allocationPerc","_ref4","_ref5","additionalProtocols","additionalProtocol","protocol","enabledTokens","includes","enabled","unshift","objectSpread","rateField","isSameOrBefore","isSameOrAfter","protocolRate","acc","field","lt","aaveAdditionalAPR","gt","idle","idleRate","defiScore","isNaN","idleScore","aaveProtocolData","pData","earnings","earning","daysSinceBeginning","tokensProps","tokenProps","isAfter","Date","now","chartRow","baseProfit","firstProtocolData","firstProtocolBlock","mDate","rowData","idlePerformance","d1","asyncForEach","_ref6","asyncToGenerator","mark","_callee2","lastRowData","lastTokenPrice","_context2","_ref7","_callee","tokenExchangeRate","tokenPriceFixed","lastYDiff","_context","price","stop","_x2","apply","arguments","_x","showAdvanced","showAdvancedChanged","apiResults_aa_Changed","apiResults_bb_Changed","apiResultsChanged","tokenChanged","JSON","stringify","componentDidMount","GenericChart","showLoader","parentId","parentIdHeight","Rebalance","loading","processing","rebalance","txHash","shouldRebalance","componentUnmounted","checkRebalance","setStateSafe","sent","callback","callback_receipt","preventDefault","tx","error","eventData","status","getTransactionError","window","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","transactionHash","contractMethodSendWrapper","token","accountChanged","account","newState","minHeight","FlexLoader","flexProps","loaderProps","textProps","TxProgressBar","waitText","endMessage","hash","mt","RoundButton","buttonProps","disabled","handleClick","DateRangeModal","quickSelection","ranges","startDate","endDate","options","quickSelections","componentDidUpdate","selection","target","quickSelectionParams","clone","subtract","closeModal","handleSelect","startTimestampObj","endTimestampObj","_this3","isOpen","ModalCard","closeFunc","Header","title","Body","counter","cardBg","required","onChange","handleQuickSelect","bind","dist","minDate","maxDate","className","Footer","my","mx","borderRadius","mainColor","React","StatsAsset","delta","carouselMax","rebalances","buttonGroups","carouselIndex","statsVersions","minStartTime","govTokensPool","unlentBalance","carouselOffsetLeft","dateRangeModalOpened","day","week","weeks","month","ytd","setDateRange","isSame","add","maxEndDate","setDateRangeModal","filterTokenData","r","setIdleVersion","isRisk","firstResult","lastResult","firstIdlePrice","lastIdlePrice","compoundInfo","firstCompoundData","lastCompoundData","clearpoolProtocolInfo","compoundWithCOMPInfo","compoundAvgApr","firstCompoundPrice","lastCompoundPrice","compoundApr","availableTokens","selectedStrategy","getTokenApiData","pop","convertTokenBalance","weightedApr","normalizeTokenAmount","sum","compoundWithCOMP","compoundData","compoundRate","index","prevRow","prevTotalAllocation","hasRebalanced","prevP","prevAllocation","getGovTokenPool","getUnlentBalance","selectToken","strategy","setStrategyToken","changeToken","handleCarousel","$element","jQuery","position","loadParams","latestVersion","version","enabledStrategies","strategiesParams","versionInfoExtra","param","params","match","currentNetworkAvailableTokens","customToken","toUpperCase","getLatestAvailableVersion","getVersionInfo","newEndTimestampObj","newStartTimestampObj","web3","initWeb3","loadCarousel","contractsInitialized","strategyChanged","dateChanged","versionChanged","versionsOptions","performanceTooltip","versionDefaultValue","Breadcrumb","showPathMobile","goToSection","path","GenericSelector","innerProps","defaultValue","AssetSelector","pr","StatsCard","labelTooltip","SmartNumber","precision","lineHeight","unitProps","number","unit","VariationNumber","iconPos","iconSize","span","description","Stats_StatsChart","contracts","pb","pt","AllocationChart","src_Rebalance_Rebalance","pl","h4","RoundIconButton","iconName","transition","utilities_components_DateRangeModal","TrancheSelector","CustomOptionValue","CustomValueContainer","availableTranches","t","selectedProtocol","changeProtocolToken","opt","AssetField","fieldInfo","selectProps","flex","cursor","loadComponents","selectedTokenChanged","isSearchable","StatsTranche","seniorTrancheApy","juniorTrancheApy","seniorTrancheConverage","apiResults_unfiltered_aa","apiResults_unfiltered_bb","firstResult_aa","firstResult_bb","lastResult_aa","lastResult_bb","days_aa","days_bb","firstAAPrice","lastAAPrice","firstBBPrice","lastBBPrice","getSubgraphTrancheInfo","convertTrancheTokenBalance","min","trancheType","trancheDetails","selectTrancheType","protocolChanged","src_TrancheSelector_TrancheSelector","unitPos","Stats","showRefreshIdleSpeed","toggleAdvancedCharts","selectTranche","nextProps","nextState","stateChanged","networkId","idleTokenAvailableNetworks","idleTokenEnabled","tranchesEnabled","availableNetworks","enabledStatsNetworks","refreshIdleSpeedConfig","refreshIdleSpeedEnabled","apyLong","availableStrategies","textSize","statsTokens","src_StatsAsset_StatsAsset","src_StatsTranche_StatsTranche","strategies","statsProtocols","AssetsUnderManagement","loaderAlign","strategyInfo","availableProtocolsKeys","availableProtocols","Title","titlePostfix","AssetsList","cols","fields","mobile","parentProps","overflow","desc","showTooltip","rgb","TranchesList","enabledProtocols","minPrecision","ExecuteTransaction","Button","componentProps","contractName","methodName","completed","Utils","SubComponent","selectedSubsection","subComponent","viewOnly","connectorName","showBreadCrumb","selectedSection","dangerouslySetInnerHTML","__html","directProps","toolProps","flexWrap","IconBox","maxWidth","tool","toolIndex","FundsOverview","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensDistribution","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","idleGovToken","getIdleGovToken","govTokenAvailableTokens","Promise","all","getUserDistribution","getGovTokensUserBalances","loadAssetField","depositTimestamp","getAvgAPYStats","avgAPY","lte","totBalance","govTokenBalance","govToken","balance","children","placement","message","PortfolioEquity","chartHeight","chartToken","frequencySeconds","getFrequencySeconds","component","Heading","h3","maxPrecision","govTokenIndex","tokenName","distributionFrequency","CurveRedeem","inputValue","maxSlippage","unevenAmounts","buttonDisabled","showMaxSlippage","redeemUnderlying","curveTokenConfig","curvePoolContract","curveSwapContract","curveTokenBalance","curveTokensAmounts","fastBalanceSelector","redeemUnevenAmounts","curveRedeemableIdleTokens","toggleUnevenAmounts","checkButtonDisabled","amount","changeInputValue","setFastBalanceSelector","setMaxSlippage","initToken","max_slippage","normalizedAmount","withdrawSlippage","curveIdleTokensAmounts","getCurveTokensAmounts","getCurveIdleTokensAmounts","getCurveSlippage","getCurveTokenPrice","curveTokenPrice","redeemableBalance","redeemUnevenAmountsChanged","setInputValue","inputChanged","maxSlippageChanged","tokenConfigChanged","calculateSlippage","loadSelectedTokenConfig","selectedPercentage","curveConfig","getCurvePoolContract","getCurveSwapContract","getCurveTokenBalance","getCurveRedeemableIdleTokens","getCurveAvailableTokens","callbackRedeem","txSucceeded","eventValue","callbackReceiptRedeem","_amount","min_amounts","console","log","coin_index","migrationParams","coinIndex","min_amount","showSlippage","curveTokenName","cancelTransaction","checked","showBalance","selectDestinationToken","slippage","FastBalanceSelector","percentage","onMouseDown","whiteSpace","failed","textOverflow","placeholder","border","divider","DepositRedeem","txError","tokenAPY","curveAPY","totalAUM","canRedeem","canDeposit","directMint","activeModal","tokenGovTokens","showBuyFlow","maxUnlentPerc","tokenApproved","skipMigration","redeemSkipGov","showRedeemFlow","contractPaused","canRedeemCurve","erc20ForwarderTx","signedParameters","minAmountForMint","redeemGovTokens","canDepositCurve","redeemSkipGovTokens","actionProxyContract","migrationEnabled","componentMounted","agreeSkipGovTokens","redeemCurveEnabled","depositCurveBalance","depositCurveEnabled","showAdvancedOptions","skipGovTokensGasSave","depositCurveSlippage","erc20ForwarderContract","erc20ForwarderEnabled","showETHWrapperEnabled","skipGovTokensGasSaveUSD","metaTransactionsEnabled","skippedGovTokensBalance","minAmountForMintReached","loadingErc20ForwarderTx","setShowRedeemFlow","setShowBuyFlow","toggleShowAdvancedOptions","toggleSkipMigration","toggleRedeemCurve","toggleDepositCurve","toggleShowETHWrapper","toggleAgreeSkipGovTokens","toggleSkipMint","toggleRedeemGovTokens","toggleRedeemSkipGov","getSkippedGovTokensFlags","govTokensIndexes","govTokensFlags","getGovTokensIndexes","calculateSkippedGovTokens","DAITokenConfig","_skipGovTokenRedeem","WETHTokenConfig","wethPrice","redeemGasUsage","skipGovRedeemGasUsage","govTokenConfig","govTokenPrice","skippedAmount","getUniswapConversionRate","govTokensUserBalances","estimateMethodGasUsage","idleTokenBalance","slicedToArray","setRedeemSkipGovTokens","toggleErc20ForwarderEnabled","toggleMetaTransactionsEnabled","resetModal","setActiveModal","checkUseProxyContract","proxyContract","depositErc20ForwarderEnabled","depositMetaTransactionsEnabled","biconomy","approveContract","_callee4","callbackApprove","callbackReceiptApprove","curveDepositContract","_context4","enableERC20","checkTokenApproved","_callee5","_context5","approveToken","_callee6","_context6","approve","loadTokenInfo","_callee7","curveTokenEnabled","_ref10","_ref11","_context7","checkContractPaused","getCurveDepositContract","checkMigration","tokenBalance","getTokenGovTokens","boost","checkAction","loadAPY","_callee8","_context8","defineProperty","executeAction","_callee11","contractSendResult","callbackDeposit","callbackReceiptDeposit","curvePoolContractInfo","tokensToDeposit","amounts","minMintAmount","depositParams","_tokensToDeposit","_depositParams","mintProxyContractInfo","mintProxyContract","_mintProxyContract$me","functionCall","functionSignature","methodAbi","useNonce","_referral","txData","idleTokenToRedeem","idleTokenPriceWithFee","_callbackRedeem","_callbackReceiptRedeem","redeemMethod","redeemParams","_context11","getFastBalanceSelector","localStorage","setLocalStorage","lendingProcessing","lendAmount","genericError","getCurveAmounts","getCurveTokenAmount","integerValue","contract","methods","function","toConsumableArray","encodeABI","sendBiconomyTxWithPersonalSign","_jsonInterface","f","inputs","_callee10","metaInfo","permitOptions","erc20ForwarderBaseContract","permitValue","permitConfig","setValue","expiry","nonce","s","_context10","signPermit","allowed","holder","spender","permitData","permitType","asyncTimeout","sendBiconomyTxWithErc20Forwarder","request","_callee9","_erc20ForwarderContra","_functionCall","_functionSignature","gasLimit","_context9","estimateGas","buildBiconomyErc20ForwarderTx","getReferralAddress","getIdleTokenPriceWithFee","_callee12","_context12","setAction","loadProxyContracts","actions","_ref17","_callee15","erc20ForwarderContractInfo","hasProxyContract","_context15","initContract","abi","approved","_x5","getTokenAprs","tokenAprs","getCurveAPY","getQueryStringParameterByName","checkAddress","erc20ForwarderEnabledChanged","tokenBalanceChanged","actionChanged","fastBalanceSelectorChanged","redeemSkipGovChanged","redeemGovTokensChanged","agreeSkipGovTokensChanged","redeemSkipGovTokensChanged","depositCurveChanged","calculateCurveSlippage","showPoolPerc","convertedAmount","genericContractCall","depositPerc","maxUnlentPercFormatted","currentNetwork","getCurrentNetwork","isDepositDisabled","depositDisabledMessage","disabledMessageRedeemKey","disabledMessageDepositKey","govTokensEnabled","govTokensDisabled","skipMintForDepositEnabled","skipMintForDeposit","redeemGovTokenEnabled","redeemSkipGovConfig","redeemSkipGovEnabled","disabledTokens","govTokensBalance","redeemSkipGovNoTokens","showAdvancedRedeemOptions","depositErc20ForwarderEnabledTokens","metaTransactionsAvailable","useMetaTx","erc20ForwarderClient","totalBalance","migrateText","migration","depositCurve","showDepositCurve","showRedeemCurve","showCurveSlippage","showAdvancedDepositOptions","batchDepositInfo","batchDepositEnabled","batchDepositDepositEnabled","depositEnabled","showBatchDeposit","isMigrationTool","ethWrapperInfo","ETHWrapperComponent","showETHWrapper","polygonBridgeInfo","polygonNetworkId","canPerformAction","showPolygonBridgeEnabled","showActionFlow","provider","showPolygonBridge","showPolygonBridgeBanner","buyToken","accountBalance","getBaseToken","showReferral","Migrate","migrateTextBefore","TransactionField","transaction","isDisabled","iconProps","openTooltipModal","isRainbow","m","CardIconButton","imageProps","getWalletProvider","primary","fullWidth","cost","align","tokenFeesPercentage","borderColor","minWidth","ConnectBox","src_CurveRedeem_CurveRedeem","BuyModal","showInline","availableMethods","ShareModal","confettiEnabled","tweet","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","collateral","statusColors","statusIcon","statusColor","pending","statusIconProps","portfolioCoverage","titleProps","CustomList","rows","fileClaimUrl","openWindow","funcProps","actionLabel","actionDisabled","actionUrl","EstimatedEarnings","maxInputValue","loadChart","getTokenApy","earningsYear","tokenApy","amountMonth","amount3Months","amount6Months","amountYear","getTokenConfig","hslColor","perc","monthColor","month3","month3Color","month6","month6Color","year","yearColor","labelTextColorModifiers","getArrayPath","gridYValue","_ref","labels","showAPYDisclaimer","verticalAlign","zIndex","AssetPage","tokenFees","idleTokenPrice","userHasFunds","availableGovTokens","getTokenFees","getIdleTokenPrice","getTokenBalance","getUserTokenFees","getGovTokensUserTotalBalance","loadTokensInfo","availableTokensChanged","transactionsChanged","getRequiredNetwork","nexusMutualConfig","tokenLabel","Fragment","src_DepositRedeem_DepositRedeem","ActiveCoverages","src_FundsOverview_FundsOverview","src_EstimatedEarnings_EstimatedEarnings","TransactionsList","BetaModal","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","iconHeight","CurveDeposit","depositSlippage","migrationContract","curveTokensBalance","migrationSucceeded","migrationContractApproved","checkMigrationContractApproved","getMigrationParams","approveCallback","migrationCallback","idleTokenBalanceChanged","toMigrate","n_coins","underlyingBalanceToDeposit","normalizeIdleTokenBalance","hasCurveTokens","PortfolioEquityCurve","chartwidth","loadChartData","quickDateSelectionChanged","quickDateSelection","getCurveTxs","curveTxs","tokensBalance","processedTxs","firstTxTimestamp","curveTokens","currentDate","prevBalances","prevTimestamp","minChartValue","aggregatedBalancesKeys","tokensBalancesPerDate","aggregatedBalance","currTimestamp","tokensData","foundBalances","tokensBalances","momentDate","filteredTokenData","filteredBalances","lastFilteredTx","lastTokenData","lastTx","lastTxBalance","formattedDate","aggregatedBalanceParsed","aggregatedBalances","balances","yFormatDecimals","areaOpacity","areaBaselineValue","ChartCustomTooltip","ChartCustomTooltipRow","tokenInfo","formattedBalance","FundsOverviewCurve","compAPR","getCurveAvgBuyPrice","getCurveAvgSlippage","src_PortfolioEquityCurve_PortfolioEquityCurve","redeemBalance","depositBalance","curveZapContract","curveAvailableTokens","changeFromToken","setSelectedToken","baseToken","getSelectedToken","urlParams","param1","getCurveZapContract","updateAssetSelector","curveTokensToRedeem","src_CurveDeposit_CurveDeposit","src_FundsOverviewCurve_FundsOverviewCurve","enabledActions","PolygonModal","getEtherscanAddressUrl","WelcomeModal","email","subscribed","sendingForm","sendUserInfo","sendEmail","walletProvider","userInfo","simpleIDPassUserInfo","analytics","google","events","setTimeout","err","handleSubmit","assertThisInitialized","handleValidation","axios","post","newsletterSubscription","endpoint","then","catch","walletAddress","lastLogin","getItem","parse","signedUp","parentNode","classList","onSubmit","green","Field","Input","outline","header_styles","input","ButtonLoader","buttonText","isLoading","gradientButton","MigrateModal","dontShowAgain","toggleDontShowAgain","removeStoredItem","migrate","tokenMigrationRoute","fieldProps","protocolsTokensBalances","UpgradeModal","_args3","convert","convertTool","tokensToMigrate","tokenKey","oldContractBalanceFormatted","oldIdleTokensToMigrate","newTokenConfig","RiskAdjustedModal","getAppUrl","Dashboard","menu","baseRoute","clickEvent","menuOpened","currentRoute","pageComponent","currentSection","showResetButton","pageComponentProps","timeoutId","modalTitle","modalContent","logout","setConnector","extraicons","comingSoon","enabledEnvs","currentEnv","imageInfo","selected","bgColor","visible","imageDark","iconDark","imageInactive","iconInactive","imageInactiveDark","iconInactiveDark","stakePolygonConfig","curveParams","CurveStrategy","stakeConfig","gaugesConfig","statsInfo","isExternalLink","networkInitialized","section","param2","param3","section_is_strategy","param1_is_strategy","param1_is_token","param2_is_token","sectionRoute","subm","sendGoogleAnalyticsPageview","clearTimeout","setCurrentSection","loadMenu","accountInizialized","initAccount","initializeContracts","checkModals","networkInitializedChanged","networkChanged","network","paramsChanged","requiredNetworkChanged","contractsChanged","prevParams","_this4","checkRiskAdjusted","checkPolygonModal","checkBetaApproval","checkTokensToMigrate","checkWelcomeModal","checkProtocolsTokensBalances","getStoredItem","isPolygon","isPolygonApproved","isOriginUrl","checkUrlOrigin","isBetaApproved","showUpgradeModal","getTokensToMigrate","getProtocolsTokensBalances","welcomeIsOpen","welcomeModalProps","currTime","lastTime","frequency","migrateModalConfig","migrateModalEnabled","showMigrateModal","isDashboard","replace","re","RegExp","newRoute","location","scrollTo","routeParts","setMenu","dir","_this5","networkSupported","isSupportedNetwork","PageComponent","networkCorrect","isCorrectNetwork","current","Swipeable","swipeCallback","styles","DashboardMenu","closeMenu","DashboardHeader","toggleMenu","overflowY","overflowX","justifyItems","src_FlashNews_FlashNews","addEthereumChain","components_PolygonModal","components_BetaModal","components_RiskAdjustedModal","components_UpgradeModal","components_MigrateModal","TooltipModal","content","components_WelcomeModal","simpleID","initSimpleID","baseTokenName","GenericModal","checkboxEnabled"],"mappings":"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","file":"static/js/7.ec734d1f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"Dashboard_bg__1vL3e\",\"bg-top-left\":\"Dashboard_bg-top-left__1qN1S\",\"bg-bottom-right\":\"Dashboard_bg-bottom-right__1zgZD\",\"bg-noise\":\"Dashboard_bg-noise__Rbjg-\",\"submenu\":\"Dashboard_submenu__QOrCp\",\"opened\":\"Dashboard_opened__6MG0R\"};","import ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass FlashNews extends Component {\n\n  state = {\n    activeNews:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n\n    const gaugesConfg = this.functionsUtil.getGlobalConfig([\"tools\", \"gauges\"]);\n    const stakingConfig = this.functionsUtil.getGlobalConfig([\"tools\", \"stake\"]);\n    // const stakingPolygonConfig = this.functionsUtil.getGlobalConfig([\"tools\", \"stakePolygon\"]);\n\n    const flashNews = {\n      1: [\n        {\n          name: \"Governance Forum\",\n          icon: \"LightbulbOutline\",\n          text: `Do you have any idea to improve the Idle Protocol? Let's discuss it in our`,\n          link: {\n            text: `Governance Forum`,\n            url: this.functionsUtil.getGlobalConfig([\"forumURL\"])\n          }\n        },\n        {\n          icon: stakingConfig.icon,\n          name: stakingConfig.label,\n          text: `You can now stake your $IDLE token and take part of the fee-sharing for long-term holders.`,\n          link: {\n            text: `Stake Now`,\n            url: this.functionsUtil.getDashboardSectionUrl(`tools/${stakingConfig.route}`)\n          }\n        },\n        {\n          name: gaugesConfg.label,\n          image: gaugesConfg.image,\n          text: `stkIDLE Gauges are now live at full throttle with $IDLE rewards!`,\n          link: {\n            text: `Go to Gauges`,\n            url: this.functionsUtil.getDashboardSectionUrl(`gauges`)\n          }\n        }\n      ],\n      137: [\n        /*\n        {\n          icon: stakingPolygonConfig.icon,\n          name: stakingPolygonConfig.label,\n          text: `SushiSwap LP Staking on Polygon is now available!`,\n          link: {\n            text: `Stake Now`,\n            url: this.functionsUtil.getDashboardSectionUrl(`tools/${stakingPolygonConfig.route}`)\n          }\n        }\n        */\n      ]\n    };\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const activeFlashNews = flashNews[currentNetworkId];\n    const activeNews = activeFlashNews.length ? activeFlashNews[Math.floor(Math.random() * activeFlashNews.length)] : null;\n    this.setState({\n      activeNews\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return this.state.activeNews ? (\n      <DashboardCard\n        cardProps={{\n          p: 2,\n          mb: 3,\n          width: 1,\n          backgroundColor:'flashBg'\n        }}\n        isActive={true}\n        isInteractive={false}\n      >\n        <Flex\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n          flexDirection={[\"column\", \"row\"]}\n        >\n          {\n            this.state.activeNews.icon ? (\n              <Icon\n                mr={1}\n                size={\"1.2em\"}\n                color={\"flashColor\"}\n                name={this.state.activeNews.icon}\n              />\n            ) : this.state.activeNews.image && (\n              <Image\n                mr={1}\n                width={\"1.2em\"}\n                heght={\"1.2em\"}\n                src={this.state.activeNews.image}\n              />\n            )\n          }\n          <Text\n            fontSize={2}\n            fontWeight={3}\n            color={\"flashColor\"}\n            textAlign={\"center\"}\n          >\n            {this.state.activeNews.text}\n          </Text>\n          <ExtLink\n            ml={1}\n            fontSize={2}\n            fontWeight={3}\n            color={\"primary\"}\n            hoverColor={\"primary\"}\n            href={this.state.activeNews.link.url}\n            onClick={e =>\n              this.functionsUtil.sendGoogleAnalyticsEvent({\n                eventCategory: \"UI\",\n                eventAction: \"flashNews\",\n                eventLabel: this.state.activeNews.name\n              })\n            }\n          >\n            <Flex\n              alignItems={\"center\"}\n              flexDirection={\"row\"}\n              justifyContent={\"center\"}\n            >\n              {this.state.activeNews.link.text}\n              <Icon\n                ml={1}\n                size={\"0.9em\"}\n                color={\"primary\"}\n                name={\"OpenInNew\"}\n              />\n              .\n            </Flex>\n          </ExtLink>\n        </Flex>\n      </DashboardCard>\n    ) : null;\n  }\n}\n\nexport default FlashNews;\n","import moment from 'moment';\nimport { Bar } from '@nivo/bar';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass StatsChart extends Component {\n  state = {\n    chartProps:{},\n    chartType:null,\n    chartData:null,\n    chartWidth:null\n  };\n\n  async componentDidMount() {\n    this.setState({\n      chartData:null,\n      chartType:null,\n      chartProps:null,\n    });\n    this.loadUtils();\n    this.loadApiData();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const showAdvancedChanged = prevProps.showAdvanced !== this.props.showAdvanced;\n    const apiResults_aa_Changed = prevProps.apiResults_aa !== this.props.apiResults_aa;\n    const apiResults_bb_Changed = prevProps.apiResults_bb !== this.props.apiResults_bb;\n    const apiResultsChanged = prevProps.apiResults !== this.props.apiResults;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (apiResultsChanged || showAdvancedChanged || tokenChanged||apiResults_aa_Changed||apiResults_bb_Changed){\n      this.componentDidMount();\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  parseAum = value => {\n    return (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken || !this.props.chartMode || (!this.props.apiResults&&!this.props.apiResults_aa)){\n      return false;\n    }\n    const maxGridLines = 4;\n    const apiResults = this.props.apiResults;\n    const apiResults_aa=this.props.apiResults_aa;\n    const apiResults_bb=this.props.apiResults_bb;\n    const apiResults_unfiltered = this.props.apiResults_unfiltered;\n    const protocols = Object.assign([],this.props.tokenConfig.protocols);\n    const totalItems = apiResults_aa ? apiResults_aa.length : apiResults.length;\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    const versionInfo = globalConfigs.stats.versions[this.props.idleVersion];\n\n    let keys = {};\n    let tempData = {};\n    let gridYStep = 0;\n    let itemIndex = 0;\n    let daysCount = 0;\n    let chartData = [];\n    let chartProps = {};\n    let chartType = Line;\n    let gridYValues = [];\n    let maxChartValue = 0;\n    let axisBottomIndex = 0;\n    let daysFrequency = null;\n    let idleChartData = null;\n    let firstIdleBlock = null;\n    let axisBottomMaxValues = 12;\n    let apiResults_filtered = {};\n\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    switch (this.props.chartMode){\n\n      case 'APR_TRANCHE':\n\n        maxChartValue = 0;\n        chartData.push({\n          id:`APR ${seniorTrancheName}`,\n          color:tranchesConfig.AA.color.hex,\n          data:apiResults_aa.map((d,i) => {\n            const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n            maxChartValue = Math.max(maxChartValue,y);\n            return { x, y };\n          })\n        });\n        chartData.push({\n          id:`APR ${juniorTrancheName}`,\n          color:tranchesConfig.BB.color.hex,\n          data:apiResults_bb.map((d,i) => {\n            const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.apr,18));\n            maxChartValue = Math.max(maxChartValue,y);\n            return { x, y };\n          })\n        });\n\n        /*\n        const csv = {};\n        chartData.forEach( protocolData => {\n          protocolData.data.forEach( d => {\n            if (!csv[d.x]){\n              csv[d.x] = {};\n            }\n            csv[d.x][protocolData.id] = d.y;\n          });\n        });\n\n        const csv_ordered = Object.keys(csv).sort().reduce(\n          (obj, key) => { \n            obj[key] = csv[key]; \n            return obj;\n          }, \n          {}\n        );\n\n        const csv_array = [];\n        const csv_header = [];\n        csv_header.push('Date');\n        chartData.forEach( pData => csv_header.push(pData.id) );\n        csv_array.push(csv_header.join(','));\n\n        Object.keys(csv_ordered).forEach( date => {\n          const csv_row = [date];\n          chartData.forEach( cData => {\n            if (csv_ordered[date][cData.id]){\n              csv_row.push(parseFloat(csv_ordered[date][cData.id]).toFixed(4));\n            } else {\n              csv_row.push('0.0000');\n            }\n          });\n          csv_array.push(csv_row.join(','));\n        });\n\n        console.log('-------DEBUG-------');\n        console.log(csv_ordered);\n        console.log('-------START-------');\n        console.log(csv_array.join('\\n'));\n        console.log('-------END-------');\n        */\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        const Values = chartData[chartData.length-1].data.sort((a,b) => (moment(a.x,\"YYYY/MM/DD HH:mm\").isBefore(moment(b.x,\"YYYY/MM/DD HH:mm\")) ? -1 : 1));\n        daysCount = moment(Values[Values.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(Values[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        // console.log('APR',chartValues,chartValues[0].x,chartValues[chartValues.length-1].x,daysCount,daysFrequency);\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            tickPadding: 15,\n            legendOffset: 0,\n            orient: 'bottom',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickValues: 'every day',\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 110 : 120,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_TRANCHE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstPriceAA = null;\n        let firstPriceBB = null;\n        let chartDataAA=null;\n        let chartDataBB=null;\n        let firstBlock=null;\n\n        chartDataAA = apiResults_aa.map((d,i) => {\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.virtualPrice,this.props.tokenConfig.decimals);\n\n          if (!firstPriceAA){\n            firstPriceAA = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstPriceAA).minus(1).times(100));\n\n            days = (d.timeStamp-apiResults_aa[0].timeStamp)/86400;\n            const earning = tokenPrice.div(firstPriceAA).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstBlock === null){\n            firstBlock = parseInt(d.blockNumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = parseInt(d.blockNumber);\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        chartDataBB = apiResults_bb.map((d,i) => {\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.virtualPrice,this.props.tokenConfig.decimals);\n\n          if (!firstPriceBB){\n            firstPriceBB = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstPriceBB).minus(1).times(100));\n\n            days = (d.timeStamp-apiResults_bb[0].timeStamp)/86400;\n            const earning = tokenPrice.div(firstPriceBB).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blockNumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = parseInt(d.blockNumber);\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n        chartDataAA.splice(0,1);\n\n        \n        chartData.push({\n          id:`Performance ${seniorTrancheName}`,\n          color: tranchesConfig.AA.color.hex,\n          data: chartDataAA\n        });\n\n        chartData.push({\n          id:`Performance ${juniorTrancheName}`,\n          color: tranchesConfig.BB.color.hex,\n          data: chartDataBB\n        });\n     \n\n        // Set chart type\n        chartType = Line;\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 12;\n        daysCount = moment(chartDataAA[chartDataAA.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(chartDataAA[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            tickValues:`every day`,\n            legendPosition: 'middle',\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              itemWidth: this.props.isMobile ? 70 : 160,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fill:this.props.theme.colors.legend,\n                fontWeight:500,\n                fontFamily: this.props.theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'VOL_TRANCHE':\n        let divergingData = {};\n\n        const startTimestampA = parseInt(apiResults_unfiltered[0].timeStamp);\n        const endTimestampA = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestampA;timestamp<=endTimestampA;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        let lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timeStamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.totalSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timeStamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.totalSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        }).sort((a,b) => (a.timestamp < b.timestamp ? -1 : 1));\n\n        let maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        });\n\n        chartType = Bar;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        daysCount = moment(chartData[chartData.length-1].date,\"YYYY/MM/DD\").diff(moment(chartData[0].date,\"YYYY/MM/DD\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            tickValues: 'every day',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD').format('MMM DD')\n              }\n            },\n            legendPosition: 'middle',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: this.props.theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: this.props.theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: this.props.theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[this.props.theme.colors.transactions.action.deposit, this.props.theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.data.timestamp*1000).format('MMM DD HH:ss');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,4)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,4)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={this.props.theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={this.props.theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'VOL':\n        divergingData = {};\n\n        const startTimestamp = parseInt(apiResults_unfiltered[0].timestamp);\n        const endTimestamp = parseInt(moment()._d.getTime()/1000);\n\n        for (let timestamp=startTimestamp;timestamp<=endTimestamp;timestamp+=86400){\n          const date = moment(timestamp*1000).format(\"YYYY/MM/DD\");\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n        }\n\n        lastRow = null;\n        apiResults_unfiltered.forEach(row => {\n          const date = moment(row.timestamp*1000).format(\"YYYY/MM/DD\");\n          const idleTokens = this.functionsUtil.fixTokenDecimals(row.idleSupply,18);\n\n          if (!divergingData[date]){\n            divergingData[date] = {\n              date,\n              timestamp:row.timestamp,\n              deposits: 0,\n              redeems: 0\n            };\n          }\n\n          if (lastRow){\n            const idleTokensPrev = this.functionsUtil.fixTokenDecimals(lastRow.idleSupply,18);\n            const idleTokensDiff = !idleTokens.eq(idleTokensPrev);\n            if (idleTokensDiff){\n              const diff = idleTokens.minus(idleTokensPrev);\n              // Deposits\n              if (diff.gte(0)){\n                divergingData[date].deposits+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,divergingData[date].deposits);\n              } else {\n                divergingData[date].redeems+=parseFloat(diff);\n                maxChartValue = Math.max(maxChartValue,Math.abs(divergingData[date].deposits));\n              }\n            }\n\n          } else {\n            divergingData[date].deposits+=parseFloat(idleTokens);\n          }\n\n          lastRow = row;\n        });\n\n        chartData = Object.values(divergingData).filter(v => {\n          return (!this.props.startTimestamp || v.timestamp>=this.props.startTimestamp) && (!this.props.endTimestamp || v.timestamp<=this.props.endTimestamp);\n        }).sort((a,b) => (a.timestamp < b.timestamp ? -1 : 1));\n\n        maxRange = 0;\n        chartData.forEach(v => {\n          maxRange = Math.max(maxRange,Math.abs(v.deposits),Math.abs(v.redeems));\n        });\n\n        chartType = Bar;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        daysCount = moment(chartData[chartData.length-1].date,\"YYYY/MM/DD\").diff(moment(chartData[0].date,\"YYYY/MM/DD\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          indexBy: 'date',\n          enableLabel: false,\n          minValue:-maxRange,\n          maxValue:maxRange,\n          label: d => {\n            return Math.abs(d.value);\n          },\n          axisBottom: this.props.isMobile ? null : {\n            tickSize: 0,\n            legend: '',\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            tickValues: 'every day',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD').format('MMM DD')\n              }\n            },\n            legendPosition: 'middle',\n          },\n          axisLeft: null,\n          axisRight: {\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:8,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(Math.abs(v),0)\n          },\n          markers: [\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { strokeOpacity: 0 },\n              textStyle: { fill: this.props.theme.colors.transactions.action.deposit },\n              legend: 'deposits',\n              legendPosition: 'top-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n            {\n              axis: 'y',\n              value: 0,\n              lineStyle: { stroke: this.props.theme.colors['dark-gray'], strokeDasharray: '5 3' },\n              textStyle: { fill: this.props.theme.colors.transactions.action.redeem },\n              legend: 'redeems',\n              legendPosition: 'bottom-left',\n              legendOrientation: 'vertical',\n              // legendOffsetY: 120,\n              legendOffsetX: -20\n            },\n          ],\n          keys:['deposits','redeems'],\n          padding:0.4,\n          colors:[this.props.theme.colors.transactions.action.deposit, this.props.theme.colors.transactions.action.redeem],\n          labelTextColor: 'inherit:darker(1.4)',\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 80 : 100,\n              itemHeight: 18,\n              translateX: 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            },\n            tooltip:{\n              container:{\n                boxShadow:null,\n                background:null\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 50, bottom: 45, left: 50 } : { top: 20, right: 70, bottom: 70, left: 50 },\n          tooltip:(data) => {\n            const xFormatted = this.functionsUtil.strToMoment(data.data.timestamp*1000).format('MMM DD HH:ss');\n            const point = {\n              id:data.id,\n              data:{\n                xFormatted\n              }\n            };\n            const depositFormatted = this.functionsUtil.abbreviateNumber(data.data.deposits,2)+' '+this.props.selectedToken;\n            const redeemFormatted = this.functionsUtil.abbreviateNumber(data.data.redeems,2)+' '+this.props.selectedToken;\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                <CustomTooltipRow\n                  label={'Deposits'}\n                  color={this.props.theme.colors.deposit}\n                  value={depositFormatted}\n                />\n                <CustomTooltipRow\n                  label={'Redeem'}\n                  color={this.props.theme.colors.redeem}\n                  value={redeemFormatted}\n                />\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case'AUM_TRANCHE':\n\n        maxChartValue = 0;\n        chartData.push({\n          id:`AUM ${seniorTrancheName}`,\n          color: tranchesConfig.AA.color.hex,\n          data: apiResults_aa.map((d,i) => {\n\n            const aum_aa = this.functionsUtil.fixTokenDecimals(d.contractValue, this.props.tokenConfig.decimals);\n            const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum_aa.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n        chartData.push({\n          id:`AUM ${juniorTrancheName}`,\n          color: tranchesConfig.BB.color.hex,\n          data: apiResults_bb.map((d,i) => {\n\n            const aum_bb = this.functionsUtil.fixTokenDecimals(d.contractValue, this.props.tokenConfig.decimals);\n            const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum_bb.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        daysCount = moment(chartData[0].data[chartData[0].data.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(chartData[0].data[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            tickValues: 'every day',\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 90 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                fontSize: this.props.isMobile ? 12: 14,\n                fontFamily: this.props.theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const contractValue = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={`${contractValue} ${this.props.selectedToken}`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n        break;\n        case'COVERAGE_TRANCHE':\n\n          maxChartValue = 0;\n          chartData.push({\n            id:'Coverage',\n            color: tranchesConfig.AA.color.hex,\n            data: apiResults_aa.map((d,i) => {\n              const aum_aa = this.functionsUtil.fixTokenDecimals(d.contractValue,18);\n              const x = moment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n              const aum_bb=apiResults_bb[i]?(this.functionsUtil.fixTokenDecimals(apiResults_bb[i].contractValue,18)):this.functionsUtil.BNify(0);\n              const ratio=aum_aa>0?aum_bb.div(aum_aa):1;\n              const coverage=ratio>1?100:ratio*100\n              const y = parseFloat(coverage.toString());\n              maxChartValue = Math.max(maxChartValue,y);\n\n              return { x,y };\n            })\n          });\n\n          // Add allocation\n\n          // Set chart type\n          chartType = Line;\n\n          gridYStep = parseFloat(maxChartValue/maxGridLines);\n          gridYValues = [0];\n          for (let i=1;i<=5;i++){\n            gridYValues.push(i*gridYStep);\n          }\n\n          axisBottomIndex = 0;\n          axisBottomMaxValues = 6;\n          daysCount = moment(chartData[0].data[chartData[0].data.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(chartData[0].data[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n          daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n          chartProps = {\n            xScale:{\n              type: 'time',\n              format: '%Y/%m/%d %H:%M',\n              // precision: 'hour',\n            },\n            xFormat:'time:%b %d %H:%M',\n            yFormat:v => parseFloat(v).toFixed(3)+'%',\n            yScale:{\n              type: 'linear',\n              stacked: false\n            },\n            axisLeft:{\n              legend: '',\n              tickSize: 0,\n              orient: 'left',\n              tickPadding: 10,\n              tickRotation: 0,\n              legendOffset: -70,\n              tickValues:gridYValues,\n              legendPosition: 'middle',\n              format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            },\n            axisBottom: this.props.isMobile ? null : {\n              legend: '',\n              tickSize: 0,\n              format: (value) => {\n                if (axisBottomIndex++ % daysFrequency === 0){\n                  return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n                }\n              },\n              tickPadding: 15,\n              orient: 'bottom',\n              legendOffset: 0,\n              tickValues: 'every day',\n              legendPosition: 'middle'\n            },\n            gridYValues,\n            pointSize:0,\n            useMesh:true,\n            animate:false,\n            pointLabel:\"y\",\n            curve:'linear',\n            enableArea:false,\n            enableSlices:'x',\n            enableGridX:false,\n            enableGridY:true,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            legends:[\n              {\n                itemWidth: this.props.isMobile ? 70 : 80,\n                itemHeight: 18,\n                translateX: this.props.isMobile ? -35 : 0,\n                translateY: this.props.isMobile ? 40 : 65,\n                symbolSize: 10,\n                itemsSpacing: 5,\n                direction: 'row',\n                anchor: 'bottom-left',\n                symbolShape: 'circle',\n                itemTextColor: this.props.theme.colors.legend,\n                effects: [\n                  {\n                    on: 'hover',\n                    style: {\n                      itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                    }\n                  }\n                ]\n              }\n            ],\n            theme:{\n              axis: {\n                ticks: {\n                  text: {\n                    fontSize: this.props.isMobile ? 12: 14,\n                    fontWeight:600,\n                    fill:this.props.theme.colors.legend,\n                    fontFamily: this.props.theme.fonts.sansSerif\n                  }\n                }\n              },\n              grid: {\n                line: {\n                  stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n                }\n              },\n              legends:{\n                text:{\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fill:this.props.theme.colors.legend,\n                  fontWeight:500,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            pointColor:{ from: 'color', modifiers: []},\n            margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const contractValue = point.data.yFormatted;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          label={protocolName}\n                          color={point.color}\n                          value={`${contractValue}`}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n        break;\n      /*\n      case 'AUM_ALL':\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens[globalConfigs.network.requiredNetwork]),async (tokenName,i) => {\n          const tokenConfig = availableTokens[globalConfigs.network.requiredNetwork][tokenName];\n          const tokenDataApi = await this.props.getTokenData(tokenConfig.address);\n          chartData.push({\n            id:tokenName,\n            color: tokenConfig.color,\n            data: tokenDataApi.map((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n              return {\n                x: moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\"),\n                y: parseInt(aum.toString())\n              };\n            })\n          });\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => (parseInt(value)>=1000 ? parseFloat(value/1000).toFixed(1)+'K' : parseFloat(value) )+' '+this.props.selectedToken,\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v),\n            orient: 'left',\n            tickSize: 5,\n            tickPadding: 5,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            legendPosition: 'middle'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            format: '%b %d',\n            tickValues: this.props.isMobile ? 'every 4 days' : 'every 3 days',\n            orient: 'bottom',\n            legend: '',\n            legendOffset: 36,\n            legendPosition: 'middle'\n          },\n          enableArea:false,\n          curve:\"linear\",\n          enableSlices:'x',\n          enableGridX:true,\n          enableGridY:false,\n          colors:d => d.color,\n          pointSize:0,\n          pointColor:{ from: 'color', modifiers: []},\n          pointBorderWidth:1,\n          pointLabel:\"y\",\n          pointLabelYOffset:-12,\n          useMesh:true,\n          animate:false,\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 60, bottom: 40, left: 60 },\n        };\n      break;\n      */\n      case 'AUM':\n\n        maxChartValue = 0;\n\n        chartData.push({\n          id:'AUM',\n          color: 'hsl('+globalConfigs.stats.tokens[this.props.selectedToken].color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply,18);\n            const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n            const aum = idleTokens.times(idlePrice);\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(aum.toString());\n\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x,y };\n          })\n        });\n\n        // Add allocation\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          apiResults.map((d,i) => {\n            return d.protocolsData.filter((protocolAllocation,x) => {\n                return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            })\n            .map((protocolAllocation,z) => {\n              const protocolPaused = this.functionsUtil.BNify(protocolAllocation.rate).eq(0);\n              if (!protocolPaused){\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals));\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                let foundItem = chartData[0].data.filter(item => { return item.x === x });\n                if (foundItem){\n                  foundItem = foundItem[0];\n                  const pos = chartData[0].data.indexOf(foundItem);\n                  if (!foundItem.allocations){\n                    foundItem.allocations = {};\n                  }\n                  foundItem.allocations[p.name] = y;\n                  chartData[0].data[pos] = foundItem;\n                }\n              }\n              return undefined;\n            })[0]\n          }).filter((v) => { return v !== undefined; } )\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        daysCount = moment(chartData[0].data[chartData[0].data.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(chartData[0].data[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:v => this.functionsUtil.formatMoney(v,v<1 ? 3 :0),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            tickValues: 'every day',\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:true,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fill:this.props.theme.colors.legend,\n                fontWeight:500,\n                fontFamily: this.props.theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            if (typeof point === 'object' && typeof point.data === 'object'){\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  <CustomTooltipRow\n                    label={point.serieId}\n                    color={point.serieColor}\n                    value={point.data.yFormatted}\n                  />\n                  {\n                    point.data.allocations && typeof point.data.allocations === 'object' &&\n                      Object.keys(point.data.allocations).map(protocolName => {\n                        const protocolInfo = globalConfigs.stats.protocols[protocolName];\n                        const protocolColor = 'hsl('+protocolInfo.color.hsl.join(',')+')';\n                        const protocolAllocation = point.data.allocations[protocolName];\n                        const protocolAllocationFormatted = this.functionsUtil.formatMoney(protocolAllocation,protocolAllocation<1 ? 3 : 0);\n                        const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                        return (\n                          <CustomTooltipRow\n                            color={protocolColor}\n                            label={protocolInfo.label}\n                            key={`${point.id}_${protocolName}`}\n                            value={`${protocolAllocationFormatted} (${protocolAllocationPerc})`}\n                          />\n                        );\n                      })\n                  }\n                </CustomTooltip>\n              );\n              /*\n              return (\n                <div\n                    key={point.id}\n                    style={{\n                      background: 'white',\n                      color: 'inherit',\n                      fontSize: 'inherit',\n                      borderRadius: '2px',\n                      boxShadow: 'rgba(0, 0, 0, 0.25) 0px 1px 2px',\n                      padding: '5px 9px'\n                    }}\n                >\n                  <div>\n                    <table style={{width:'100%',borderCollapse:'collapse'}}>\n                      <tbody>\n                        <tr>\n                          <td style={{padding:'3px 5px'}}>\n                            <span style={{display:'block', width: '12px', height: '12px', background: point.serieColor}}></span>\n                          </td>\n                          <td style={{padding:'3px 5px'}}>{point.serieId}</td>\n                          <td style={{padding:'3px 5px'}}><strong>{point.data.yFormatted}</strong></td>\n                        </tr>\n                        {\n                          point.data.allocations && typeof point.data.allocations === 'object' &&\n                            Object.keys(point.data.allocations).map(protocolName => {\n                              const protocolColor = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n                              const protocolAllocation = this.functionsUtil.formatMoney(point.data.allocations[protocolName],0);\n                              const protocolAllocationPerc = this.functionsUtil.BNify(point.data.allocations[protocolName]).div(this.functionsUtil.BNify(point.data.y)).times(100).toFixed(0)+'%';\n                              return (\n                                <tr key={`${point.id}_${protocolName}`}>\n                                  <td style={{padding:'3px 5px'}}>\n                                    <span style={{display:'block', width: '12px', height: '12px', background: protocolColor}}></span>\n                                  </td>\n                                  <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{protocolName}</td>\n                                  <td style={{padding:'3px 5px'}}><strong>{protocolAllocation}</strong> ({protocolAllocationPerc})</td>\n                                </tr>\n                              );\n                            })\n                        }\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              );\n              */\n            }\n\n            return null;\n          }\n        };\n      break;\n      case 'ALL':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\");\n\n          let row = {\n            date\n          };\n\n          // const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply, 18);\n          // const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice, this.props.tokenConfig.decimals);\n          // const aum = idleTokens.times(idlePrice);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const foundProtocol = this.props.tokenConfig.protocols.find((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() });\n            if (foundProtocol){\n              const protocolInfo = globalConfigs.stats.protocols[foundProtocol.name];\n              if (!protocolPaused){\n                const allocation = parseFloat(this.functionsUtil.fixTokenDecimals(protocolData.allocation, this.props.tokenConfig.decimals));\n                keys[protocolInfo.label] = 1;\n                row[protocolInfo.label] = allocation;\n                row[`${protocolInfo.label}Color`] = 'hsl('+protocolInfo.color.hsl.join(',')+')';\n                maxChartValue = Math.max(maxChartValue, allocation);\n                // } else {\n                //   console.log('SKIP', date, protocolInfo.label, this.props.tokenConfig.decimals, allocation.toString(), aum.toString())\n                // }\n              } else {\n                row[protocolInfo.label] = 0;\n              }\n            }\n          });\n\n          tempData[date] = row;\n        });\n\n        const dates = Object.keys(tempData);\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 12;\n        daysCount = moment(dates[dates.length-1],\"YYYY/MM/DD\").diff(moment(dates[0],\"YYYY/MM/DD\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => this.functionsUtil.abbreviateNumber(v,v<1 ? 3 :0),\n            orient: 'left',\n            tickSize: 0,\n            tickPadding: 10,\n            tickRotation: 0,\n            legend: '',\n            legendOffset: -65,\n            tickValues:gridYValues,\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickSize: 0,\n            tickPadding: 10,\n            legendOffset: 36,\n            orient: 'bottom-left',\n            tickValues: 'every day',\n            legendPosition: 'middle'\n          },\n          legends:[\n            {\n              dataFrom:'keys',\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            tooltip: {\n              container:{\n                padding:'0',\n                boxShadow:'none',\n                background:'transparent',\n              },\n              tableCell:{\n                padding:'0'\n              }\n            },\n            axis: {\n              ticks: {\n                text: {\n                  fontSize:this.props.isMobile ? 12 : 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize:this.props.isMobile ? 12 : 14,\n                fill:this.props.theme.colors.legend,\n                fontWeight:500,\n                fontFamily: this.props.theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 60 },\n          tooltip:({ id, value, color }) => {\n            const allocation = this.functionsUtil.formatMoney(value,0);\n            return (\n              <DashboardCard\n                cardProps={{\n                  py:1,\n                  px:2,\n                  width:1,\n                }}\n              >\n                <table\n                  style={{width:'100%',borderCollapse:'collapse'}}\n                >\n                  <tbody>\n                    <tr>\n                      <td style={{padding:'3px 5px'}}>\n                        <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                      </td>\n                      <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                      <td style={{padding:'3px 5px'}}><strong>{allocation} {this.props.selectedToken}</strong></td>\n                    </tr>\n                  </tbody>\n                </table>\n              </DashboardCard>\n            )\n          }\n        }\n      break;\n      case 'ALL_PERC':\n        keys = {};\n        tempData = {};\n\n        apiResults.forEach((d,i) => {\n          const date = moment(d.timestamp*1000).format(\"YYYY/MM/DD\")\n          let row = {\n            date:moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\")\n          };\n          if (tempData[date]){\n            row = tempData[date];\n          }\n\n          const totalAllocation = d.protocolsData.reduce((accumulator,protocolAllocation) => {\n            const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n            return this.functionsUtil.BNify(accumulator).plus(allocation);\n          },0);\n\n          d.protocolsData.forEach((protocolData) => {\n            const protocolPaused = this.functionsUtil.BNify(protocolData.rate).eq(0);\n            const protocolName = this.props.tokenConfig.protocols.filter((p) => { return p.address.toLowerCase() === protocolData.protocolAddr.toLowerCase() })[0].name;\n            if (!protocolPaused){\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolData.allocation,this.props.tokenConfig.decimals);\n              const allocationPerc = parseFloat(allocation.div(totalAllocation).times(100));\n              keys[protocolName] = 1;\n              row[protocolName] = allocationPerc;\n              row[`${protocolName}Color`] = 'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')';\n            } else if (typeof row[protocolName] !== undefined) {\n              row[protocolName] = 0;\n            } \n          });\n          \n          tempData[date] = row;\n        });\n\n        chartData = Object.values(tempData);\n\n        // Set chart type\n        chartType = Bar;\n\n        axisBottomIndex = 0;\n\n        chartProps = {\n          padding: 0.2,\n          animate: false,\n          indexBy: 'date',\n          data: chartData,\n          enableLabel: false,\n          labelSkipWidth: 16,\n          labelSkipHeight: 16,\n          keys: Object.keys(keys),\n          labelTextColor: 'inherit:darker(1.4)',\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 50 } : { top: 20, right: 40, bottom: 40, left: 60 },\n          colors: ({ id, data }) => data[`${id}Color`],\n          axisLeft:{\n            format: v => parseInt(v)+'%'\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            format: (value) => {\n              if (axisBottomIndex++ % 3 === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            orient: 'bottom',\n            legendOffset: 36,\n            legendPosition: 'middle',\n            tickValues: 'every 3 days'\n          },\n          tooltip:({ id, value, color }) => {\n            const allocation = parseInt(value)===100 ? this.functionsUtil.formatMoney(value,0) : this.functionsUtil.formatMoney(value,2);\n            return (\n              <table style={{width:'100%',borderCollapse:'collapse'}}>\n                <tbody>\n                  <tr>\n                    <td style={{padding:'3px 5px'}}>\n                      <span style={{display:'block', width: '12px', height: '12px', background: color}}></span>\n                    </td>\n                    <td style={{padding:'3px 5px',textTransform:'capitalize'}}>{id}</td>\n                    <td style={{padding:'3px 5px'}}><strong>{allocation}%</strong></td>\n                  </tr>\n                </tbody>\n              </table>\n            )\n          }\n        }\n      break;\n      case 'APR':\n\n        maxChartValue = 0;\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo && additionalProtocol.enabledTokens.includes(this.props.selectedToken)){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach((p,j) => {\n          const protocolInfo = {...globalConfigs.stats.protocols[p.name]};\n          if (!protocolInfo.enabled){\n            return;\n          }\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          apiResults_filtered = apiResults.filter( d => (!protocolInfo.startTimestamp || moment(protocolInfo.startTimestamp).isSameOrBefore(moment(d.timestamp*1000))) && (!protocolInfo.endTimestamp || this.functionsUtil.strToMoment(protocolInfo.endTimestamp).isSameOrAfter(moment(d.timestamp*1000))) );\n          \n          chartData.push({\n            id:protocolInfo.label,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults_filtered.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                // let protocolRate = this.functionsUtil.BNify(protocolAllocation.rate);\n\n                let protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                  if (protocolAllocation[field]){\n                    return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolAllocation[field]));\n                  }\n                  return this.functionsUtil.BNify(acc);\n                },0) : this.functionsUtil.BNify(protocolAllocation[rateField]);\n\n                const protocolPaused = protocolRate.eq(0);\n                if (!protocolPaused){\n\n                  // Aave V1 wrong rate FIX\n                  if (protocolRate.lt(0) && protocolAllocation.aaveAdditionalAPR && this.functionsUtil.BNify(protocolAllocation.aaveAdditionalAPR).gt(0)){\n                    protocolRate = protocolRate.plus(this.functionsUtil.BNify(protocolAllocation.aaveAdditionalAPR));\n                  }\n\n                  protocolRate = this.functionsUtil.fixTokenDecimals(protocolRate,18);\n\n                  const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                  const y = parseFloat(protocolRate);\n\n                  maxChartValue = Math.max(maxChartValue,y);\n\n                  return { x, y };\n                }\n                return undefined;\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color:'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data:apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n            maxChartValue = Math.max(maxChartValue,y);\n            return { x, y };\n          })\n        });\n\n        /*\n        const csv = {};\n        chartData.forEach( protocolData => {\n          protocolData.data.forEach( d => {\n            if (!csv[d.x]){\n              csv[d.x] = {};\n            }\n            csv[d.x][protocolData.id] = d.y;\n          });\n        });\n\n        const csv_ordered = Object.keys(csv).sort().reduce(\n          (obj, key) => { \n            obj[key] = csv[key]; \n            return obj;\n          }, \n          {}\n        );\n\n        const csv_array = [];\n        const csv_header = [];\n        csv_header.push('Date');\n        chartData.forEach( pData => csv_header.push(pData.id) );\n        csv_array.push(csv_header.join(','));\n\n        Object.keys(csv_ordered).forEach( date => {\n          const csv_row = [date];\n          chartData.forEach( cData => {\n            if (csv_ordered[date][cData.id]){\n              csv_row.push(parseFloat(csv_ordered[date][cData.id]).toFixed(4));\n            } else {\n              csv_row.push('0.0000');\n            }\n          });\n          csv_array.push(csv_row.join(','));\n        });\n\n        console.log('-------DEBUG-------');\n        console.log(csv_ordered);\n        console.log('-------START-------');\n        console.log(csv_array.join('\\n'));\n        console.log('-------END-------');\n        */\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        const chartValues = chartData[chartData.length-1].data.sort((a,b) => (moment(a.x,\"YYYY/MM/DD HH:mm\").isBefore(moment(b.x,\"YYYY/MM/DD HH:mm\")) ? -1 : 1));\n        daysCount = moment(chartValues[chartValues.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(chartValues[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        // console.log('APR',chartValues,chartValues[0].x,chartValues[chartValues.length-1].x,daysCount,daysFrequency);\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(2)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            tickPadding: 15,\n            legendOffset: 0,\n            orient: 'bottom',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickValues: 'every day',\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    // const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'SCORE':\n\n        let prevValue = 0;\n        maxChartValue = 0;\n\n        this.props.tokenConfig.protocols.forEach((p,j) => {\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n          if (!protocolInfo.enabled){\n            return;\n          }\n          if (chartData.filter(d => { return d.name === p.name; }).length){\n            return;\n          }\n          chartData.push({\n            id:protocolInfo.label,\n            color:'hsl('+globalConfigs.stats.protocols[p.name].color.hsl.join(',')+')',\n            data:apiResults.map((d,i) => {\n              return d.protocolsData.filter((protocolAllocation,x) => {\n                  return protocolAllocation.protocolAddr.toLowerCase() === p.address.toLowerCase()\n              })\n              .map((protocolAllocation,z) => {\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                let y = parseFloat(protocolAllocation.defiScore);\n\n                y = isNaN(y) || !y ? prevValue : y;\n                prevValue = y;\n                maxChartValue = Math.max(maxChartValue,y);\n\n                return { x, y };\n              })[0]\n            }).filter((v) => { return v !== undefined; } )\n          })\n        });\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: apiResults.map((d,i) => {\n            const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            let y = parseFloat(d.idleScore);\n            y = isNaN(y) || !y ? prevValue : y;\n            prevValue = y;\n            maxChartValue = Math.max(maxChartValue,y);\n\n            return { x, y };\n          })\n        });\n\n        // debugger;\n\n        // Set chart type\n        chartType = Line;\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 6;\n        daysCount = moment(chartData[0].data[chartData[0].data.length-1].x,\"YYYY/MM/DD\").diff(moment(chartData[0].data[0].x,\"YYYY/MM/DD\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'hour',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(1),\n          yScale:{\n            type: 'linear',\n            stacked: false\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format:value => parseFloat(value).toFixed(1),\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            tickPadding: 15,\n            orient: 'bottom',\n            legendOffset: 0,\n            tickValues: 'every day',\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            legendPosition: 'middle'\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'linear',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemWidth: this.props.isMobile ? 70 : 80,\n              itemHeight: 18,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 0,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 70, left: 70 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        color={point.color}\n                        label={protocolName}\n                        value={protocolEarning}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE_V4':\n\n        itemIndex = 0;\n        maxChartValue = 0;\n        // let prevApy = null;\n        let prevApr = null;\n        let prevData = null;\n        let avgApy = this.functionsUtil.BNify(0);\n        let startBalance = this.functionsUtil.BNify(1);\n        let currentBalance = this.functionsUtil.BNify(1);\n\n        idleChartData = [];\n        const aaveProtocolInfo = protocols.find( p => p.name === 'aavev2' );\n\n        apiResults.forEach((d,i) => {\n\n          let idleRate = this.functionsUtil.BNify(d.idleRate);\n          let y = 0;\n          let apy = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n          // Aave V1 wrong rate FIX\n          if (this.props.selectedToken === 'WETH' && moment(x).isSameOrBefore(moment('2021-05-19 12:20','YYYY-MM-DD HH:mm'))){\n            const aaveProtocolData = aaveProtocolInfo ? d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === aaveProtocolInfo.address.toLowerCase()\n            }) : null;\n            if (aaveProtocolData.aaveAdditionalAPR && this.functionsUtil.BNify(aaveProtocolData.aaveAdditionalAPR).gt(0)){\n              idleRate = idleRate.plus(this.functionsUtil.BNify(aaveProtocolData.aaveAdditionalAPR));\n            }\n          }\n\n          const apr = this.functionsUtil.fixTokenDecimals(idleRate, 18).div(100);\n          // const apy = this.functionsUtil.apr2apy(apr);\n          \n          avgApy = avgApy.plus(apr.times(100));\n\n          if (prevApr){\n            const days = (d.timestamp-prevData.timestamp)/86400;\n            // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n            const earnings = currentBalance.times(prevApr.times(days).div(365));\n            currentBalance = currentBalance.plus(earnings);\n\n            const earning = currentBalance.div(startBalance).minus(1).times(100);\n            y = parseFloat(earning);\n\n            // apy = earning.times(365).div(totDays).toFixed(2);\n            const daysSinceBeginning = idleChartData.length>0 ? Math.max(1,moment(d.timestamp*1000).diff(moment(idleChartData[0].x,\"YYYY/MM/DD HH:mm\"),'days')) : 1;\n            apy = parseFloat(y*365/daysSinceBeginning).toFixed(2);\n          }\n\n          prevData = d;\n          // prevApy = apy;\n          prevApr = apr;\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue, y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          // console.log(x, y, apy, i, d)\n\n          if (apy>0){\n            idleChartData.push({ x, y, apy, blocknumber, itemPos });\n          }\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo && additionalProtocol.enabledTokens.includes(this.props.selectedToken)){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        protocols.forEach( p => {\n\n          const protocolInfo = {...globalConfigs.stats.protocols[p.name]};\n\n          // Add custom protocol info\n          if (protocolInfo.tokensProps && protocolInfo.tokensProps[this.props.selectedToken]){\n            const tokenProps = protocolInfo.tokensProps[this.props.selectedToken];\n            Object.keys(tokenProps).forEach(p => {\n              protocolInfo[p] = tokenProps[p];\n            });\n          }\n\n          if (!protocolInfo.enabled || (protocolInfo.startTimestamp && this.functionsUtil.strToMoment(protocolInfo.startTimestamp).isAfter(Date.now()))){\n            return;\n          }\n\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          // prevApy = null;\n          prevApr = null;\n          prevData = null;\n          let baseProfit = 0;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n          avgApy = this.functionsUtil.BNify(0);\n          startBalance = this.functionsUtil.BNify(1);\n          currentBalance = this.functionsUtil.BNify(1);\n          apiResults_filtered = apiResults.filter( d => (!protocolInfo.startTimestamp || moment(protocolInfo.startTimestamp).isSameOrBefore(moment(d.timestamp*1000))) && (!protocolInfo.endTimestamp || this.functionsUtil.strToMoment(protocolInfo.endTimestamp).isSameOrAfter(moment(d.timestamp*1000))) );\n\n          apiResults_filtered.forEach( (d,i) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              let protocolRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (protocolData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(protocolData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(protocolData[rateField]);\n\n              // Aave V1 wrong rate FIX\n              if (protocolRate.lt(0) && protocolData.aaveAdditionalAPR && this.functionsUtil.BNify(protocolData.aaveAdditionalAPR).gt(0)){\n                protocolRate = protocolRate.plus(this.functionsUtil.BNify(protocolData.aaveAdditionalAPR));\n              }\n\n              const mDate = moment(d.timestamp*1000);\n              const protocolPaused = protocolRate.eq(0);\n              if (!protocolPaused){\n\n                let rowData = {};\n\n                let y = 0;\n                let apy = 0;\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                const apr = this.functionsUtil.fixTokenDecimals(protocolRate,18).div(100);\n\n                avgApy = avgApy.plus(apr.times(100));\n                // const apy = this.functionsUtil.apr2apy(apr);\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null) {\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => (d1.blocknumber>=firstProtocolBlock) );\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                      y = baseProfit;\n                      apy = avgApy.toFixed(2);\n                    }\n                  }\n                }\n\n                itemIndex++;\n\n                if (prevData) {\n                  const days = (d.timestamp-prevData.timestamp)/86400;\n                  // const totDays = (d.timestamp-apiResults[0].timestamp)/86400;\n\n                  const earnings = currentBalance.times(prevApr.times(days).div(365));\n                  currentBalance = currentBalance.plus(earnings);\n\n                  const earning = currentBalance.div(startBalance).minus(1).times(100);\n                  y = parseFloat(earning)+baseProfit;\n\n                  const daysSinceBeginning = Math.max(1,moment(d.timestamp*1000).diff(moment(idleChartData[0].x,\"YYYY/MM/DD HH:mm\"),'days'));\n                  apy = parseFloat(y*365/daysSinceBeginning).toFixed(2);\n                  // debugger;\n\n                  // apy = avgApy.div(itemIndex+1).toFixed(2);\n                  const itemPos = Math.floor(itemIndex/totalItems*100);\n                  rowData = {\n                    x,\n                    y,\n                    apy,\n                    itemPos\n                  };\n\n                  itemIndex++;\n                  chartRow.data.push(rowData);\n                }\n\n                prevData = d;\n                prevApr = apr;\n\n                if (firstIdleBlock === null){\n                  firstIdleBlock = parseInt(d.blocknumber);\n                }\n\n                maxChartValue = Math.max(maxChartValue,y);\n\n                // const blocknumber = d.blocknumber;\n\n              }\n            }\n          });\n          \n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n        chartData.push({\n          id:'Idle',\n          data: idleChartData,\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')'\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        axisBottomIndex = 0;\n        axisBottomMaxValues = 12;\n        daysCount = moment(idleChartData[idleChartData.length-1].x,\"YYYY/MM/DD HH:mm\").diff(moment(idleChartData[0].x,\"YYYY/MM/DD HH:mm\"),'days');\n        daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: (value) => {\n              if (axisBottomIndex++ % daysFrequency === 0){\n                return moment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n              }\n            },\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            tickValues:`every day`,\n            legendPosition: 'middle',\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              itemWidth: this.props.isMobile ? 70 : 160,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontSize: this.props.isMobile ? 12: 14,\n                fill:this.props.theme.colors.legend,\n                fontWeight:500,\n                fontFamily: this.props.theme.fonts.sansSerif\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      case 'PRICE':\n        // let prevTokenPrice = null;\n        maxChartValue = 0;\n        let firstTokenPrice = null;\n\n        idleChartData = apiResults.map((d,i) => {\n\n          let y = 0;\n          let apy = 0;\n          let days = 0;\n          const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n          const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n          if (!firstTokenPrice){\n            firstTokenPrice = tokenPrice;\n          } else {\n            y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n\n            days = (d.timestamp-apiResults[0].timestamp)/86400;\n            const earning = tokenPrice.div(firstTokenPrice).minus(1).times(100);\n            apy = earning.times(365).div(days).toFixed(2);\n\n            // console.log(firstTokenPrice.toString(),tokenPrice.toString(),earning.toString(),days,y,apy);\n          }\n\n          if (firstIdleBlock === null){\n            firstIdleBlock = parseInt(d.blocknumber);\n          }\n\n          maxChartValue = Math.max(maxChartValue,y);\n\n          const itemPos = Math.floor(itemIndex/totalItems*100);\n          const blocknumber = d.blocknumber;\n\n          itemIndex++;\n\n          return { x, y, apy, blocknumber, itemPos };\n        });\n\n        // Add Additional protocols\n        if (versionInfo.additionalProtocols && versionInfo.additionalProtocols.length>0){\n          versionInfo.additionalProtocols.forEach( additionalProtocol => {\n            const protocolInfo = this.props.tokenConfig.protocols.find( p => (p.name === additionalProtocol.protocol));\n            if (protocolInfo && additionalProtocol.enabledTokens.includes(this.props.selectedToken)){\n              additionalProtocol.enabled = true;\n              additionalProtocol.address = protocolInfo.address;\n              protocols.unshift(additionalProtocol);\n            }\n          });\n        }\n\n        await this.functionsUtil.asyncForEach(protocols,async (p) => {\n\n          const protocolInfo = globalConfigs.stats.protocols[p.name];\n\n          if (!protocolInfo.enabled){\n            return;\n          }\n\n          const rateField = protocolInfo.rateField ? protocolInfo.rateField : 'rate';\n\n          const chartRow = {\n            id:protocolInfo.label,\n            color: 'hsl('+protocolInfo.color.hsl.join(',')+')',\n            data: []\n          };\n\n          itemIndex = 0;\n          let baseProfit = 0;\n          firstTokenPrice = null;\n          let lastRowData = null;\n          let lastTokenPrice = null;\n          let firstProtocolData = null;\n          let firstProtocolBlock = null;\n\n          await this.functionsUtil.asyncForEach(apiResults,async (d) => {\n\n            const protocolData = d.protocolsData.find((pData,x) => {\n              return pData.protocolAddr.toLowerCase() === p.address.toLowerCase()\n            });\n\n            if (protocolData && protocolData[rateField]){\n\n              if (!firstProtocolData){\n                firstProtocolData = protocolData;\n              }\n\n              const protocolPaused = this.functionsUtil.BNify(protocolData[rateField]).eq(0);\n              if (!protocolPaused){\n\n                // Start new protocols from Idle performances\n                if (firstProtocolBlock === null){\n                  firstProtocolBlock = parseInt(d.blocknumber);\n                  if (firstProtocolBlock>firstIdleBlock){\n                    const idlePerformance = idleChartData.find(d1 => {\n                      return d1.blocknumber>=firstProtocolBlock;\n                    });\n                    if (idlePerformance){\n                      baseProfit = idlePerformance.y;\n                    }\n                  }\n                }\n\n                let rowData = {};\n                let tokenExchangeRate = protocolData.price;\n                let tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                const x = moment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n\n                // Take data from\n                if (protocolInfo && protocolInfo.data && protocolInfo.data[p.address.toLowerCase()] && protocolInfo.data[p.address.toLowerCase()][d.blocknumber]){\n                  tokenExchangeRate = this.functionsUtil.BNify(globalConfigs.stats.protocols[p.name].data[p.address.toLowerCase()][d.blocknumber]);\n                  tokenPriceFixed = this.functionsUtil.fixTokenDecimals(tokenExchangeRate,p.decimals);\n                }/* else if (p.name === 'aave'){\n                  // Token holders (aDAI = 0xc025c03e10f656d3ee76685d53d236824d8ef3da , aUSDC = 0xd2c734fbd8f5d1c809185e014016dd4097e94711)\n                  let aaveTokenBalance = await this.functionsUtil.genericContractCall(p.token,'balanceOf',['0xd2c734fbd8f5d1c809185e014016dd4097e94711'],{},d.blocknumber);\n                  if (aaveTokenBalance){\n                    if (!Object.values(aave_data).length){\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(1,p.decimals);\n                      aave_data[d.blocknumber] = aaveTokenBalance.toString();\n                    } else {\n                      const firstBalance = Object.values(aave_data)[0];\n                      tokenExchangeRate = this.functionsUtil.normalizeTokenAmount(this.functionsUtil.BNify(aaveTokenBalance).div(this.functionsUtil.BNify(firstBalance)).toFixed(p.decimals),p.decimals);\n                      aave_data[d.blocknumber] = tokenExchangeRate.toString();\n                    }\n                  }\n                }\n                */\n\n                let y = baseProfit;\n                let apy = 0;\n\n                if (!firstTokenPrice){\n                  firstTokenPrice = tokenPriceFixed;\n                } else {\n                  if (tokenPriceFixed.lt(lastTokenPrice)){\n                    firstTokenPrice = tokenPriceFixed;\n                    const lastYDiff = chartRow.data[chartRow.data.length-1].y-chartRow.data[chartRow.data.length-2].y;\n                    y = lastRowData.y+lastYDiff;\n                    baseProfit = y;\n                  } else {\n                    y += parseFloat(tokenPriceFixed.div(firstTokenPrice).minus(1).times(100));\n                  }\n\n                  const days = (d.timestamp-apiResults[0].timestamp)/86400;\n                  const earning = tokenPriceFixed.div(firstTokenPrice).minus(1).times(100);\n                  apy = earning.times(365).div(days).toFixed(2);\n                }\n\n                y = Math.max(0,y);\n                maxChartValue = Math.max(maxChartValue,y);\n\n                const itemPos = Math.floor(itemIndex/totalItems*100);\n\n                rowData = {\n                  x,\n                  y,\n                  apy,\n                  itemPos\n                };\n\n                itemIndex++;\n                lastRowData = rowData;\n                chartRow.data.push(rowData);\n                lastTokenPrice = tokenPriceFixed;\n              }\n            }\n          });\n\n          chartData.push(chartRow);\n        });\n\n        gridYStep = parseFloat(maxChartValue/maxGridLines);\n        gridYValues = [0];\n        for (let i=1;i<=5;i++){\n          gridYValues.push(i*gridYStep);\n        }\n\n        chartData.push({\n          id:'Idle',\n          color: 'hsl('+globalConfigs.stats.protocols.idle.color.hsl.join(',')+')',\n          data: idleChartData\n        });\n\n        // Set chart type\n        chartType = Line;\n\n        chartProps = {\n          xScale:{\n            type: 'time',\n            format: '%Y/%m/%d %H:%M',\n            // precision: 'day',\n          },\n          xFormat:'time:%b %d %H:%M',\n          yFormat:value => parseFloat(value).toFixed(3)+'%',\n          yScale:{\n            type: 'linear',\n            stacked: false,\n            // min: 1\n          },\n          axisLeft:{\n            legend: '',\n            tickSize: 0,\n            orient: 'left',\n            tickPadding: 10,\n            tickRotation: 0,\n            legendOffset: -70,\n            tickValues:gridYValues,\n            legendPosition: 'middle',\n            format: value => parseFloat(value).toFixed(2)+'%',\n          },\n          axisBottom: this.props.isMobile ? null : {\n            legend: '',\n            tickSize: 0,\n            format: '%b %d',\n            tickPadding: 10,\n            legendOffset: 0,\n            orient: 'bottom',\n            legendPosition: 'middle',\n            tickValues: this.props.isMobile ? 'every 4 days' : ( this.props.showAdvanced ? 'every 3 days' : 'every 2 days'),\n          },\n          gridYValues,\n          pointSize:0,\n          useMesh:true,\n          animate:false,\n          pointLabel:\"y\",\n          curve:'monotoneX',\n          enableArea:false,\n          enableSlices:'x',\n          enableGridX:false,\n          enableGridY:true,\n          pointBorderWidth:1,\n          colors:d => d.color,\n          pointLabelYOffset:-12,\n          legends:[\n            {\n              itemHeight: 18,\n              itemWidth: this.props.isMobile ? 70 : 100,\n              translateX: this.props.isMobile ? -35 : 0,\n              translateY: this.props.isMobile ? 40 : 65,\n              symbolSize: 10,\n              itemsSpacing: 5,\n              direction: 'row',\n              anchor: 'bottom-left',\n              symbolShape: 'circle',\n              itemTextColor: this.props.theme.colors.legend,\n              effects: [\n                {\n                  on: 'hover',\n                  style: {\n                    itemTextColor: this.props.themeMode === 'light' ? '#000' : '#fff'\n                  }\n                }\n              ]\n            }\n          ],\n          theme:{\n            axis: {\n              ticks: {\n                text: {\n                  fontSize: this.props.isMobile ? 12: 14,\n                  fontWeight:600,\n                  fill:this.props.theme.colors.legend,\n                  fontFamily: this.props.theme.fonts.sansSerif\n                }\n              }\n            },\n            grid: {\n              line: {\n                stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '10 6'\n              }\n            },\n            legends:{\n              text:{\n                fontWeight:500,\n                fill:this.props.theme.colors.legend,\n                textTransform:'capitalize',\n                fontFamily: this.props.theme.fonts.sansSerif,\n                fontSize: this.props.isMobile ? 12: 14\n              }\n            }\n          },\n          pointColor:{ from: 'color', modifiers: []},\n          margin: this.props.isMobile ? { top: 20, right: 20, bottom: 40, left: 65 } : { top: 20, right: 40, bottom: 80, left: 80 },\n          sliceTooltip:(slideData) => {\n            const { slice } = slideData;\n            const point = slice.points[0];\n            return (\n              <CustomTooltip\n                point={point}\n              >\n                {\n                typeof slice.points === 'object' && slice.points.length &&\n                  slice.points.map(point => {\n                    const protocolName = point.serieId;\n                    const protocolEarning = point.data.yFormatted;\n                    const protocolApy = point.data.apy;\n                    return (\n                      <CustomTooltipRow\n                        key={point.id}\n                        label={protocolName}\n                        color={point.color}\n                        value={`${protocolEarning} <small>(${protocolApy}% APY)</small>`}\n                      />\n                    );\n                  })\n                }\n              </CustomTooltip>\n            );\n          }\n        };\n      break;\n      default:\n      break;\n    }\n    this.setState({\n      chartType,\n      chartProps,\n      chartData\n    });\n  }\n\n  render() {\n    return(\n      <GenericChart\n        showLoader={true}\n        {...this.state.chartProps}\n        height={this.props.height}\n        type={this.state.chartType}\n        data={this.state.chartData}\n        width={this.state.chartWidth}\n        isMobile={this.props.isMobile}\n        parentId={this.props.parentId}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default StatsChart;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass Rebalance extends Component {\n\n  state = {\n    loading:true,\n    processing:{\n      rebalance:{\n        txHash:null,\n        loading:false\n      },\n    },\n    shouldRebalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.checkRebalance();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged || accountChanged){\n      this.checkRebalance();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  checkRebalance = async () => {\n    this.setStateSafe({\n      loading:true,\n    });\n\n    const shouldRebalance = await this.functionsUtil.checkRebalance(this.props.tokenConfig);\n\n    this.setStateSafe({\n      loading:false,\n      shouldRebalance\n    });\n  }\n\n  rebalance = async (e) => {\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n\n      if (tx){\n        // Send Google Analytics event\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: 'Rebalance',\n          eventAction: this.props.selectedToken,\n        };\n\n        let txDenied = false;\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (tx.status === 'success'){\n          // Toast message\n          window.toastProvider.addMessage(`Rebalance completed`, {\n            secondaryMessage: `Now the pool is balanced!`,\n            colorTheme: 'light',\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"success\",\n          });\n        } else if (!txDenied){\n          window.toastProvider.addMessage(`Rebalance error`, {\n            secondaryMessage: `The rebalance has failed, try again...`,\n            colorTheme: 'light',\n            actionHref: \"\",\n            actionText: \"\",\n            variant: \"failure\",\n          });\n        }\n      }\n\n      this.setStateSafe((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          rebalance:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n\n      this.checkRebalance();\n    }\n\n    const callback_receipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setStateSafe((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            rebalance:{\n              ...prevState.processing.rebalance,\n              txHash\n            }\n          }\n        })\n      );\n    };\n\n    await this.setStateSafe({\n      processing:{\n        rebalance:{\n          txHash:null,\n          loading:true\n        }\n      }\n    });\n\n    this.props.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'rebalance', [], null , callback, callback_receipt);\n  }\n\n  render() {\n    return (\n      <Flex\n        px={3}\n        width={1}\n        minHeight={'100px'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n      {\n        this.state.loading ? (\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking rebalance...'}\n          />\n        ) : (\n          this.state.processing.rebalance.loading ? (\n            <TxProgressBar {...this.props} waitText={`Rebalance estimated in`} endMessage={`Finalizing rebalance request...`} hash={this.state.processing.rebalance.txHash} />\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                mt={0}\n                mb={3}\n                textAlign={'center'}\n              >\n                {this.state.shouldRebalance ? 'Rebalance the entire pool. All users will bless you.' : 'The pool is already balanced.'}\n              </Text>\n              <RoundButton\n                buttonProps={{\n                  width:'auto',\n                  disabled:!this.state.shouldRebalance\n                }}\n                handleClick={e => this.rebalance(e)}\n              >\n                Rebalance\n              </RoundButton>\n            </Flex>\n          )\n        )\n      }\n      </Flex>\n    )\n  }\n}\n\nexport default Rebalance;","import React from \"react\";\nimport {\n  Modal,\n  Button,\n  Flex,\n  Field,\n  Select\n} from \"rimble-ui\";\nimport moment from 'moment';\nimport './DateRangeModal.css';\nimport ModalCard from './ModalCard';\nimport 'react-date-range/dist/styles.css';\nimport { DateRange } from 'react-date-range';\nimport 'react-date-range/dist/theme/default.css';\n\nclass DateRangeModal extends React.Component {\n\n  state = {\n    quickSelection:'',\n    ranges:{\n      startDate: this.props.startDate ? this.props.startDate : new Date(),\n      endDate: this.props.endDate ? this.props.endDate : new Date(),\n      key: 'selection'\n    },\n    options:Object.keys(this.props.quickSelections).map( value => ({ value,label:this.props.quickSelections[value].label }) )\n  }\n\n  handleSelect(ranges){\n    this.setState({\n      quickSelection:'',\n      ranges:ranges.selection\n    });\n  }\n\n  handleQuickSelect(e){\n    let startDate = null;\n    let endDate = moment(new Date());\n    const quickSelection = e.target.value;\n\n    if (quickSelection && this.props.quickSelections[quickSelection]){\n      const quickSelectionParams = this.props.quickSelections[quickSelection];\n      startDate = endDate.clone().subtract(quickSelectionParams.value,quickSelectionParams.type);\n    } else {\n      startDate = null;\n      endDate = null;\n    }\n\n    if (startDate && endDate){\n      startDate = startDate._d;\n      endDate = endDate._d;\n\n      const ranges = {\n        startDate,\n        endDate,\n        key:'selection'\n      };\n\n      this.setState({\n        ranges,\n        quickSelection\n      }, () => {\n        this.closeModal();\n      });\n    }\n  }\n\n  componentDidUpdate = (prevProps) => {\n    if (prevProps.startDate !== this.props.startDate || prevProps.endDate !== this.props.endDate){\n      this.setState({\n        ranges:{\n          startDate: this.props.startDate ? this.props.startDate : new Date(),\n          endDate: this.props.endDate ? this.props.endDate : new Date(),\n          key: 'selection'\n        }\n      });\n    }\n  }\n\n  closeModal(){\n    const newState = this.props.handleSelect(this.state.ranges,this.state.quickSelection);\n    const ranges = {\n      startDate:newState.startTimestampObj ? newState.startTimestampObj._d : new Date(),\n      endDate:newState.endTimestampObj ? newState.endTimestampObj._d : new Date(),\n      key: 'selection'\n    };\n    this.setState({\n      ranges\n    });\n    this.props.closeModal();\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Header title={'Select Date Range'}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} flexDirection={'column'} alignItems={'center'}>\n              <Field label=\"Quick Date Selection\" style={{display:'flex',width:'100%',alignItems:'stretch',justifyContent:'center'}}>\n                <Select\n                  style={{\n                    fontSize:'14px',\n                    height:'2.5em',\n                    boxShadow:'none',\n                    color:this.props.theme.colors.counter,\n                    backgroundColor:this.props.theme.colors.cardBg\n                  }}\n                  width={'100%'}\n                  required={true}\n                  options={this.state.options}\n                  value={this.state.quickSelection}\n                  onChange={this.handleQuickSelect.bind(this)}\n                />\n              </Field>\n              <DateRange\n                ranges={[this.state.ranges]}\n                minDate={this.props.minDate}\n                maxDate={this.props.maxDate}\n                className={this.props.themeMode}\n                onChange={this.handleSelect.bind(this)}\n              />\n            </Flex>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              APPLY\n              </Button>\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n\n}\n\nexport default DateRangeModal;","import moment from 'moment';\nimport StatsChart from '../Stats/StatsChart';\nimport React, { Component } from 'react';\nimport Rebalance from '../Rebalance/Rebalance';\nimport StatsCard from '../StatsCard/StatsCard';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\nimport { Flex, Text, Heading, Box, Icon } from 'rimble-ui';\nclass StatsAsset extends Component {\n\n    state = {\n        aum:null,\n        apr:null,\n        days:'-',\n        delta:null,\n        earning:null,\n        minDate:null,\n        maxDate:null,\n        carouselMax:1,\n        rebalances:'-',\n        buttonGroups:[],\n        apiResults:null,\n        carouselIndex:0,\n        idleVersion:null,\n        statsVersions:{},\n        minStartTime:null,\n        endTimestamp:null,\n        govTokensPool:null,\n        unlentBalance:null,\n        quickSelection:null,\n        startTimestamp:null,\n        endTimestampObj:null,\n        shouldRebalance:null,\n        carouselOffsetLeft:0,\n        startTimestampObj:null,\n        apiResults_unfiltered:null,\n        dateRangeModalOpened:false\n      };\n    \n      quickSelections = {\n        day:{\n          value:1,\n          type:'day',\n          label:'Last day',\n        },\n        week:{\n          value:1,\n          type:'week',\n          label:'Last week',\n        },\n        weeks:{\n          value:2,\n          type:'week',\n          label:'Last 2 weeks',\n        },\n        month:{\n          value:1,\n          type:'month',\n          label:'Last month',\n        },\n        ytd:{\n          type:'day',\n          label:'Year to date',\n          value:moment().diff(moment('01/01/YYYY','DD/MM/YYYY'),'days'),\n        },\n      };\n    \n      // Utils\n      functionsUtil = null;\n      componentUnmounted = null;\n      loadUtils(){\n        if (this.functionsUtil){\n          this.functionsUtil.setProps(this.props);\n        } else {\n          this.functionsUtil = new FunctionsUtil(this.props);\n        }\n      }\n    \n      async componentWillMount() {\n        this.loadUtils();\n        await this.loadParams();\n      }\n    \n      componentWillUnmount(){\n        this.componentUnmounted = true;\n      }\n    \n      async setStateSafe(newState,callback=null) {\n        if (!this.componentUnmounted){\n          return this.setState(newState,callback);\n        }\n        return null;\n      }\n    \n    \n      getLatestAvailableVersion(){\n        const statsVersions = globalConfigs.stats.versions;\n        let latestVersion = null;\n        Object.keys(statsVersions).forEach( version => {\n          const versionInfo = statsVersions[version];\n          if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n            latestVersion = version;\n          }\n        });\n    \n        return latestVersion;\n      }\n    \n      getVersionInfo(version){\n        if (!version){\n          version = this.state.idleVersion;\n        }\n    \n        if (!globalConfigs.stats.versions[version]){\n          return null;\n        }\n    \n        const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n    \n        if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n          const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n          Object.keys(versionInfoExtra).forEach( param => {\n            versionInfo[param] = versionInfoExtra[param];\n          });\n        }\n    \n        return versionInfo;\n      }\n    \n      async loadParams() {\n    \n        if (!this.props.selectedToken || !this.props.tokenConfig){\n          return false;\n        }\n    \n        const newState = {};\n        const { match: { params } } = this.props;\n    \n        const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n    \n        if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n          newState.selectedToken = params.customToken.toUpperCase();\n        } else {\n          newState.selectedToken = this.props.selectedToken.toUpperCase();\n        }\n    \n        newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n        newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp,'YYYY-MM-DD');\n        newState.maxEndDate = moment();\n    \n        newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n    \n        newState.latestVersion = this.getLatestAvailableVersion();\n        newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n    \n        const versionInfo = this.getVersionInfo(newState.idleVersion);\n    \n        // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n    \n        if (newState.idleVersion && versionInfo.endTimestamp){\n          const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n          if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n            newState.endTimestampObj = newEndTimestampObj;\n            newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n          }\n    \n          if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n            newState.maxEndDate = newEndTimestampObj;\n          }\n        }\n    \n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n    \n        // Set start date\n        newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n    \n        if (newState.idleVersion && versionInfo.startTimestamp){\n          const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n          if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n            newState.startTimestampObj = newStartTimestampObj;\n            newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n          }\n    \n          if (newState.minStartTime.isBefore(newStartTimestampObj)){\n            newState.minStartTime = newStartTimestampObj;\n          }\n        }\n    \n        newState.minDate = newState.minStartTime._d;\n        newState.maxDate = newState.maxEndDate._d;\n    \n        if (newState !== this.state){\n          await this.setStateSafe(newState);\n        }\n      }\n    \n      setDateRange = (ranges,quickSelection=null) => {\n    \n        const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken].startTimestamp);\n    \n        let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n        let endTimestampObj = moment(ranges.endDate);\n    \n        if (startTimestampObj.isSame(endTimestampObj)){\n          endTimestampObj.add(1,'day');\n        }\n    \n        endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n    \n        if (startTimestampObj.isBefore(this.state.minStartTime)){\n          startTimestampObj = this.state.minStartTime;\n        }\n    \n        if (endTimestampObj.isAfter(this.state.maxEndDate)){\n          endTimestampObj = this.state.maxEndDate;\n        }\n    \n        const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n        const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n    \n        const newState = {\n          minStartTime,\n          endTimestamp,\n          quickSelection,\n          startTimestamp,\n          endTimestampObj,\n          startTimestampObj\n        };\n    \n        this.setStateSafe(newState);\n    \n        return newState;\n      }\n      \n      setDateRangeModal = (dateRangeModalOpened) => {\n        if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n          this.setStateSafe({\n            dateRangeModalOpened\n          });\n        }\n      }\n    \n      async componentDidMount() {\n    \n        if (!this.props.web3){\n          this.props.initWeb3();\n          return false;\n        }\n    \n        /*\n        const style = document.createElement('style');\n        style.id = 'crisp-custom-style';\n        style.type = 'text/css';\n        style.innerHTML = `\n        .crisp-client{\n          display:none !important;\n        }`;\n        document.body.appendChild(style);\n        */\n    \n        this.loadUtils();\n        await this.loadParams();\n        this.loadApiData();\n        this.loadCarousel();\n      }\n    \n      loadCarousel(){\n        const carouselMax = this.props.isMobile ? 3 : 2;\n        this.setStateSafe({\n          carouselMax\n        });\n      }\n    \n      async componentDidUpdate(prevProps,prevState) {\n        const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n        const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n        const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n        const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n        const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n        const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    \n        if (mobileChanged){\n          this.loadCarousel();\n        }\n    \n        if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n          // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n          await this.componentDidMount();\n        } else if (dateChanged){\n          this.loadApiData();\n        }\n      }\n    \n      filterTokenData = (apiResults) => {\n        return apiResults.filter((r,i) => {\n          return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n        });\n      }\n    \n      setIdleVersion = idleVersion => {\n        this.setStateSafe({\n          idleVersion\n        });\n      }\n    \n      loadApiData = async () => {\n    \n        if (!this.props.selectedToken || !this.props.tokenConfig){\n          return false;\n        }\n    \n        // Get COMP APR\n        // const compAPR = await this.functionsUtil.getCompAPR(this.props.tokenConfig);\n        // console.log('compAPR',compAPR.toString());\n    \n        const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n        const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    \n        const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n        let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n    \n        const apiResults = this.filterTokenData(apiResults_unfiltered);\n    \n        // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n    \n        if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n          return false;\n        }\n    \n        const firstResult = apiResults[0];\n        const lastResult = Object.values(apiResults).pop();\n    \n        let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n        if (days === 0){\n          days = 1;\n        }\n    \n        let apr = null;\n        let delta = 'N/A';\n    \n        const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply, 18);\n        const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice, this.props.tokenConfig.decimals);\n        const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice, this.props.tokenConfig.decimals);\n    \n        // Calculate AUM\n        let aum = idleTokens.times(lastIdlePrice);\n    \n        // Convert Token balance\n        aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken, this.props.tokenConfig,isRisk);\n    \n        const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n        const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n        const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    \n        if (this.state.idleVersion === 'v4') {\n\n          // Clearpool wrong rate FIX\n          if (this.props.selectedToken === 'USDC') {\n            const clearpoolProtocolInfo = this.props.tokenConfig.protocols.find( p => p.name === 'clearpool' );\n            apiResults.forEach((d,i) => {\n              const idleTokens = this.functionsUtil.fixTokenDecimals(d.idleSupply, 18);\n              const idlePrice = this.functionsUtil.fixTokenDecimals(d.idlePrice, this.props.tokenConfig.decimals);\n              const aum = idleTokens.times(idlePrice);\n\n              if (d.blocknumber>=15697787 && d.blocknumber<=15716753){\n                const weightedApr = d.protocolsData.reduce( (apr, pData) => {\n                  if (pData.protocolAddr.toLowerCase() === clearpoolProtocolInfo.address.toLowerCase()){\n                    pData.allocation = this.functionsUtil.fixTokenDecimals(pData.allocation, 12)\n                  }\n                  const protocolRate = this.functionsUtil.fixTokenDecimals(pData.rate, 18);\n                  const protocolAllocation = this.functionsUtil.fixTokenDecimals(pData.allocation, this.props.tokenConfig.decimals);\n                  apr = apr.plus(protocolAllocation.times(protocolRate))\n\n                  return apr\n                }, this.functionsUtil.BNify(0))\n\n                d.idleRate = this.functionsUtil.normalizeTokenAmount(weightedApr.div(aum), 18)\n              }\n            })\n          }\n    \n          apr = apiResults.reduce( (sum,r) => {\n            const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n            return this.functionsUtil.BNify(sum).plus(idleRate);\n          },0);\n          // Calculate average\n          apr = apr.div(apiResults.length);\n    \n          if (compoundInfo){\n            const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n            const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n    \n            let compoundAvgApr = apiResults.reduce( (sum,r) => {\n    \n              const compoundData = r.protocolsData.find((pData,x) => {\n                return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n              });\n    \n              let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n                if (compoundData && compoundData[field]){\n                  return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n                }\n                return this.functionsUtil.BNify(acc);\n              },0) : this.functionsUtil.BNify(compoundData[rateField]);\n    \n              compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n    \n              return this.functionsUtil.BNify(sum).plus(compoundRate);\n            },0);\n    \n            // Calculate average\n            compoundAvgApr = compoundAvgApr.div(apiResults.length);\n    \n            // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n            // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n    \n            delta = apr.minus(compoundAvgApr);\n            if (parseFloat(delta)<0){\n              delta = 0\n            }\n            delta = delta.toFixed(2);\n          }\n    \n          apr = apr.toFixed(2);\n    \n        } else {\n          const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n          apr = earning.times(365).div(days).toFixed(2);\n    \n          if (firstCompoundData && lastCompoundData){\n            const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n            const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n            const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n            delta = earning.minus(compoundApr).times(365).div(days);\n            if (parseFloat(delta)<0){\n              delta = 0\n            }\n            delta = delta.toFixed(2);\n          }\n        }\n    \n        // Count rebalances\n        let rebalances = 0;\n        apiResults.forEach((row,index) => {\n          if (index){\n            const prevRow = apiResults[index-1];\n    \n            const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n              return this.functionsUtil.BNify(accumulator).plus(allocation);\n            },0);\n    \n            const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n              const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n              return this.functionsUtil.BNify(accumulator).plus(allocation);\n            },0);\n    \n            let hasRebalanced = false;\n            row.protocolsData.forEach( p => {\n              if (hasRebalanced){\n                return;\n              }\n              const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n              const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n              const prevAllocation = prevP ? this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n              const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n              const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n              if (allocationPerc!==prevAllocationPerc){\n                rebalances++;\n                hasRebalanced = true;\n              }\n            });\n          }\n        });\n    \n        // Add gov tokens balance to AUM\n        const availableTokens = {};\n        availableTokens[this.props.selectedToken] = this.props.tokenConfig;\n        const govTokensPool = await this.functionsUtil.getGovTokenPool(null,availableTokens,'DAI');\n        if (govTokensPool){\n          aum = aum.plus(govTokensPool);\n        }\n    \n        let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n        if (unlentBalance){\n          unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n        }\n    \n        this.setStateSafe({\n          aum,\n          apr,\n          days,\n          delta,\n          apiResults,\n          rebalances,\n          govTokensPool,\n          unlentBalance,\n          apiResults_unfiltered\n        });\n      }\n    \n      selectToken = async (strategy,token) => {\n        await this.props.setStrategyToken(strategy,token);\n        this.props.changeToken(token);\n      }\n    \n      handleCarousel = action => {\n        let carouselIndex = this.state.carouselIndex;\n        if (action==='next' && carouselIndex<this.state.carouselMax){\n          carouselIndex++;\n        } else if (action==='back' && carouselIndex>0){\n          carouselIndex--;\n        }\n    \n        const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n        const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n    \n        this.setStateSafe({\n          carouselIndex,\n          carouselOffsetLeft\n        });\n      }\n    \n\n    render() { \n      const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n      const valueProps = {\n          lineHeight:1,\n          fontSize:[4,5],\n          fontWeight:[3,4],\n          color:'statValue'\n        };\n    \n        const unitProps = {\n          ml:2,\n          lineHeight:1,\n          fontWeight:[2,3],\n          color:'statValue',\n          fontSize:[3,'23px'],\n        };\n        const tokenConfig = statsTokens[this.props.selectedToken];\n        const versionsOptions = Object.keys(globalConfigs.stats.versions).filter( version => {\n            const versionInfo = this.getVersionInfo(version);\n            return versionInfo.enabledTokens.includes(this.props.selectedToken) && versionInfo.enabledStrategies.includes(this.props.selectedStrategy);\n        }).map( version => {\n            const versionInfo = this.getVersionInfo(version);\n            return {\n            value:version,\n            label:versionInfo.label\n            }\n        });\n    \n        // const disabledCharts = tokenConfig.disabledCharts || [];\n    \n        const versionInfo = this.getVersionInfo(this.state.idleVersion);\n        let performanceTooltip = null;\n        if (this.state.idleVersion && versionInfo){\n            const showPerformanceTooltip = this.functionsUtil.getGlobalConfig(['stats','versions',this.state.idleVersion,'showPerformanceTooltip']);\n            performanceTooltip = showPerformanceTooltip ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'performanceTooltip']) : null;\n        }\n        const versionDefaultValue = versionsOptions.find( v => (v.value === this.state.idleVersion) );\n    \n        return (\n            <Flex\n            p={0}\n            width={1}\n            flexDirection={'column'}\n            >\n            \n            <Box\n                mb={[3,4]}\n            >\n                <Flex\n                flexDirection={['column','row']}\n                >\n                <Flex\n                    width={[1,0.4]}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    showPathMobile={true}\n                    text={'ASSETS OVERVIEW'}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('stats') }\n                    path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n                  />\n                </Flex>\n                <Flex\n                    mt={[3,0]}\n                    width={[1,0.6]}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','space-between']}\n                >\n                    <Flex\n                    width={[1,0.26]}\n                    flexDirection={'column'}\n                    >\n                    <GenericSelector\n                        innerProps={{\n                        p:1,\n                        height:['100%','46px'],\n                        }}\n                        name={'idle-version'}\n                        options={versionsOptions}\n                        defaultValue={versionDefaultValue}\n                        onChange={ v => this.setIdleVersion(v) }\n                    />\n                    </Flex>\n                    <Flex\n                    mt={[3,0]}\n                    width={[1,0.3]}\n                    flexDirection={'column'}\n                    >\n                    <AssetSelector\n                        innerProps={{\n                        p:1\n                        }}\n                        {...this.props}\n                    />\n                    </Flex>\n                    <Flex\n                    mt={[3,0]}\n                    width={[1,0.39]}\n                    flexDirection={'column'}\n                    >\n                    <DashboardCard\n                        cardProps={{\n                        p:1,\n                        display:'flex',\n                        alignItems:'center',\n                        height:['46px','100%'],\n                        justifyContent:'center'\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setDateRangeModal(true) }\n                    >\n                        <Text\n                        fontWeight={3}\n                        color={'copyColor'}\n                        >\n                        {\n                        this.state.quickSelection\n                        ?\n                            this.quickSelections[this.state.quickSelection].label\n                        : this.state.startTimestampObj && this.state.endTimestampObj &&\n                            `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                        }\n                        </Text>\n                    </DashboardCard>\n                    </Flex>\n                </Flex>\n                </Flex>\n            </Box>\n            {\n                !tokenConfig.enabled ? (\n                <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                >\n                    <DashboardCard\n                    cardProps={{\n                        p:3,\n                        width:[1,0.5],\n                    }}\n                    >\n                    <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                    >\n                        <Icon\n                        size={'2.3em'}\n                        color={'cellText'}\n                        name={'DoNotDisturb'}\n                        />\n                        <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                        >\n                        Stats for {this.props.selectedToken} are not available!\n                        </Text>\n                    </Flex>\n                    </DashboardCard>\n                </Flex>\n                ) : this.state.idleVersion && this.functionsUtil.strToMoment(versionInfo.startTimestamp).isAfter(Date.now()) ? (\n                <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                >\n                    <DashboardCard\n                    cardProps={{\n                        p:3,\n                        width:[1,0.5],\n                    }}\n                    >\n                    <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                    >\n                        <Icon\n                        size={'2.3em'}\n                        color={'cellText'}\n                        name={'AccessTime'}\n                        />\n                        <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                        >\n                        Idle Stats {this.state.idleVersion} will be available shortly!\n                        </Text>\n                    </Flex>\n                    </DashboardCard>\n                </Flex>\n                ) : this.functionsUtil.strToMoment(tokenConfig.startTimestamp).isAfter(Date.now()) ? (\n                <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                >\n                    <DashboardCard\n                    cardProps={{\n                        p:3,\n                        width:[1,0.5],\n                    }}\n                    >\n                    <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                    >\n                        <Icon\n                        size={'2.3em'}\n                        color={'cellText'}\n                        name={'AccessTime'}\n                        />\n                        <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                        >\n                        Stats for {this.props.selectedToken} will be available shortly!\n                        </Text>\n                    </Flex>\n                    </DashboardCard>\n                </Flex>\n                ) : (\n                <Box\n                    width={1}\n                >\n                    <Box\n                    mt={[3,0]}\n                    mb={[3,4]}\n                    >\n                    <Flex\n                        width={1}\n                        alignItems={'center'}\n                        justifyContent={'center'}\n                        flexDirection={['column','row']}\n                    >\n                        <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                        >\n                        <StatsCard\n                            title={'Asset Under Management'}\n                            label={ this.state.unlentBalance ? `Unlent funds: ${this.state.unlentBalance} ${this.props.selectedToken}` : this.props.selectedToken }\n                            labelTooltip={ this.state.unlentBalance ? this.functionsUtil.getGlobalConfig(['messages','cheapRedeem']) : null}\n                        >\n                            <SmartNumber\n                            precision={2}\n                            type={'money'}\n                            {...valueProps}\n                            unitProps={unitProps}\n                            number={this.state.aum}\n                            flexProps={{\n                                alignItems:'baseline',\n                                justifyContent:'flex-start'\n                            }}\n                            unit={this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken,'conversionRateField']) ? '$' : null}\n                            />\n                        </StatsCard>\n                        </Flex>\n                        <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                        >\n                        <StatsCard\n                            title={'Avg APY'}\n                            label={'Annualized'}\n                        >\n                            <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            >\n                            <VariationNumber\n                                direction={'up'}\n                                iconPos={'right'}\n                                iconSize={'1.8em'}\n                                justifyContent={'flex-start'}\n                                width={1}\n                                >\n                                <Text\n                                lineHeight={1}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                                fontSize={[4,5]}\n                                >\n                                {this.state.apr}\n                                <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                                </Text>\n                            </VariationNumber>\n                            </Flex>\n                        </StatsCard>\n                        </Flex>\n                        <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                        >\n                        <StatsCard\n                            title={'Overperformance on Compound'}\n                            label={'Annualized'}\n                        >\n                            {\n                            this.state.delta && !isNaN(this.state.delta) ? (\n                                <VariationNumber\n                                direction={'up'}\n                                iconPos={'right'}\n                                iconSize={'1.8em'}\n                                justifyContent={'flex-start'}\n                                >\n                                <Text\n                                    lineHeight={1}\n                                    fontSize={[4,5]}\n                                    fontWeight={[3,4]}\n                                    color={'statValue'}\n                                >\n                                    {this.state.delta}\n                                    <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                                </Text>\n                                </VariationNumber>\n                            ) : (\n                                <Text\n                                lineHeight={1}\n                                fontSize={[4,5]}\n                                fontWeight={[3,4]}\n                                color={'statValue'}\n                                >\n                                {this.state.delta}\n                                </Text>\n                            )\n                            }\n                        </StatsCard>\n                        </Flex>\n                        <Flex\n                        mb={[2,0]}\n                        pr={[0,2]}\n                        width={[1,1/4]}\n                        flexDirection={'column'}\n                        >\n                        <StatsCard\n                            label={' '}\n                            title={'Rebalances'}\n                            value={this.state.rebalances.toString()}\n                        />\n                        </Flex>\n                        {\n                        /*\n                        <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                        <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                            <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                            <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Current APR</Text.span>\n                            <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                                {this.state.currApr}\n                                <Text.span color={'copyColor'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                            </Text>\n                            </Flex>\n                        </Card>\n                        </Flex>\n                        <Flex width={[1,1/4]} flexDirection={'column'} px={[0,2]}>\n                        <Card my={[2,2]} py={3} pl={0} pr={'10px'} borderRadius={'10px'} boxShadow={0}>\n                            <Flex alignItems={'center'} justifyContent={'center'} flexDirection={'column'} width={1}>\n                            <Text.span color={'copyColor'} fontWeight={2} fontSize={'90%'}>Days Live</Text.span>\n                            <Text lineHeight={1} mt={1} color={'copyColor'} fontSize={[4,'26px']} fontWeight={3} textAlign={'center'}>\n                                {this.state.days}\n                            </Text>\n                            </Flex>\n                        </Card>\n                        </Flex>\n                        */\n                        }\n                    </Flex>\n                    </Box>\n    \n                    <DashboardCard\n                    title={'Historical Performance'}\n                    description={performanceTooltip}\n                    cardProps={{\n                        mb:[3,4]\n                    }}\n                    >\n                    <Flex id='chart-PRICE' width={1} mb={3}>\n                        <StatsChart\n                        height={ 350 }\n                        {...this.state}\n                        parentId={'chart-PRICE'}\n                        theme={this.props.theme}\n                        isMobile={this.props.isMobile}\n                        contracts={this.props.contracts}\n                        themeMode={this.props.themeMode}\n                        apiResults={this.state.apiResults}\n                        idleVersion={this.state.idleVersion}\n                        selectedToken={this.props.selectedToken}\n                        apiResults_unfiltered={this.state.apiResults_unfiltered}\n                        chartMode={this.state.idleVersion === this.state.latestVersion ? 'PRICE_V4' : 'PRICE'}\n                        />\n                    </Flex>\n                    </DashboardCard>\n    \n                    <DashboardCard\n                    cardProps={{\n                        pb:3,\n                        mb:[3,4]\n                    }}\n                    >\n                    <Flex\n                        flexDirection={['column','row']}\n                        justifyContent={'space-between'}\n                    >\n                        {\n                        this.state.idleVersion === this.state.latestVersion && \n                        <Flex\n                            pt={2}\n                            width={[1,1/3]}\n                            id={'allocation-chart'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'flex-start'}\n                        >\n                            <AllocationChart\n                            height={310}\n                            {...this.props}\n                            parentId={'allocation-chart'}\n                            />\n                            <Rebalance\n                            {...this.props}\n                            />\n                        </Flex>\n                        }\n                        <Flex\n                        mb={[0,3]}\n                        id={'chart-ALL'}\n                        pl={[0,this.state.idleVersion === this.state.latestVersion ? 0 : 3]}\n                        width={[1, this.state.idleVersion === this.state.latestVersion ? 2/3 : 1]}\n                        >\n                        <Flex alignItems={'flex-start'} justifyContent={'flex-start'} flexDirection={'column'} width={1}>\n                          <Heading.h4\n                            mb={2}\n                            ml={3}\n                            mt={[3,4]}\n                            fontWeight={4}\n                            fontSize={[2,3]}\n                            textAlign={'left'}\n                            color={'dark-gray'}\n                            lineHeight={'initial'}\n                          >\n                            Allocations over time\n                          </Heading.h4>\n                          <StatsChart\n                            height={350}\n                            {...this.state}\n                            chartMode={'ALL'}\n                            parentId={'chart-ALL'}\n                            theme={this.props.theme}\n                            isMobile={this.props.isMobile}\n                            themeMode={this.props.themeMode}\n                            contracts={this.props.contracts}\n                            apiResults={this.state.apiResults}\n                            idleVersion={this.state.idleVersion}\n                            apiResults_unfiltered={this.state.apiResults_unfiltered}\n                          />\n                        </Flex>\n                      </Flex>\n                    </Flex>\n                    </DashboardCard>\n    \n                    <Flex\n                    position={'relative'}\n                    >\n                    <Flex\n                        width={1}\n                        id={'carousel-container'}\n                        justifyContent={'flex-end'}\n                    >\n                        <RoundIconButton\n                        buttonProps={{\n                            mr:3\n                        }}\n                        iconName={'ArrowBack'}\n                        disabled={this.state.carouselIndex === 0}\n                        handleClick={ e => this.handleCarousel('back') }\n                        />\n                        <RoundIconButton\n                        iconName={'ArrowForward'}\n                        handleClick={ e => this.handleCarousel('next') }\n                        disabled={this.state.carouselIndex === this.state.carouselMax}\n                        />\n                    </Flex>\n                    <Flex\n                        mt={5}\n                        height={'400px'}\n                        position={'absolute'}\n                        id={'carousel-cursor'}\n                        width={['444%','200%']}\n                        justifyContent={'flex-start'}\n                        left={this.state.carouselOffsetLeft}\n                        style={{\n                        transition:'left 0.3s ease-in-out'\n                        }}\n                    >\n                        <DashboardCard\n                        cardProps={{\n                            mr:4,\n                            height:'fit-content',\n                            style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                        }}\n                        >\n                        <Flex\n                            width={1}\n                            id='chart-AUM'\n                        >\n                            <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            >\n                            <Heading.h4\n                                ml={3}\n                                mt={3}\n                                mb={2}\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                                color={'dark-gray'}\n                                lineHeight={'initial'}\n                            >\n                                Asset Under Management\n                            </Heading.h4>\n                            <StatsChart\n                                height={300}\n                                {...this.state}\n                                chartMode={'AUM'}\n                                parentId={'chart-AUM'}\n                                theme={this.props.theme}\n                                isMobile={this.props.isMobile}\n                                themeMode={this.props.themeMode}\n                                contracts={this.props.contracts}\n                                apiResults={this.state.apiResults}\n                                idleVersion={this.state.idleVersion}\n                                apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                            </Flex>\n                        </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                        cardProps={{\n                            mr:4,\n                            height:'fit-content',\n                            style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                        }}\n                        >\n                        <Flex id='chart-APR' width={1}>\n                            <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            >\n                            <Heading.h4\n                                mb={2}\n                                ml={3}\n                                mt={3}\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                                color={'dark-gray'}\n                                lineHeight={'initial'}\n                            >\n                                APRs\n                            </Heading.h4>\n                            <StatsChart\n                                height={300}\n                                {...this.state}\n                                chartMode={'APR'}\n                                parentId={'chart-APR'}\n                                theme={this.props.theme}\n                                isMobile={this.props.isMobile}\n                                themeMode={this.props.themeMode}\n                                contracts={this.props.contracts}\n                                apiResults={this.state.apiResults}\n                                idleVersion={this.state.idleVersion}\n                                apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                            </Flex>\n                        </Flex>\n                        </DashboardCard>\n                        {\n                        /*\n                        !disabledCharts.includes('score') &&\n                            <DashboardCard\n                            cardProps={{\n                                mr:4,\n                                height:'fit-content',\n                                style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                            }}\n                            title={'Risk Score'}\n                            description={'Idle Risk Score is a weighted average of the underlying protocols risks assessed by DeFi Score'}\n                            titleParentProps={{\n                                ml:16,\n                                mt:16\n                            }}\n                            >\n                            <Flex id='chart-SCORE' width={1}>\n                                <Flex\n                                mb={3}\n                                width={1}\n                                flexDirection={'column'}\n                                alignItems={'flex-start'}\n                                justifyContent={'center'}\n                                >\n                                <StatsChart\n                                    height={300}\n                                    {...this.state}\n                                    chartMode={'SCORE'}\n                                    parentId={'chart-SCORE'}\n                                    theme={this.props.theme}\n                                    isMobile={this.props.isMobile}\n                                    themeMode={this.props.themeMode}\n                                    contracts={this.props.contracts}\n                                    apiResults={this.state.apiResults}\n                                    idleVersion={this.state.idleVersion}\n                                    apiResults_unfiltered={this.state.apiResults_unfiltered}\n                                />\n                                </Flex>\n                            </Flex>\n                            </DashboardCard>\n                            */\n                        }\n                        <DashboardCard\n                        cardProps={{\n                            mr:4,\n                            height:'fit-content',\n                            style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                        }}\n                        >\n                        <Flex id='chart-VOL' width={1}>\n                            <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            >\n                            <Heading.h4\n                                mb={2}\n                                ml={3}\n                                mt={3}\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                                color={'dark-gray'}\n                                lineHeight={'initial'}\n                            >\n                                Volume\n                            </Heading.h4>\n                            <StatsChart\n                                height={300}\n                                {...this.state}\n                                chartMode={'VOL'}\n                                parentId={'chart-VOL'}\n                                theme={this.props.theme}\n                                isMobile={this.props.isMobile}\n                                themeMode={this.props.themeMode}\n                                contracts={this.props.contracts}\n                                apiResults={this.state.apiResults}\n                                idleVersion={this.state.idleVersion}\n                                apiResults_unfiltered={this.state.apiResults_unfiltered}\n                            />\n                            </Flex>\n                        </Flex>\n                        </DashboardCard>\n                    </Flex>\n                    </Flex>\n                </Box>\n                )\n            }\n            <DateRangeModal\n                {...this.props}\n                minDate={this.state.minDate}\n                maxDate={this.state.maxDate}\n                handleSelect={this.setDateRange}\n                quickSelections={this.quickSelections}\n                isOpen={this.state.dateRangeModalOpened}\n                closeModal={e => this.setDateRangeModal(false)}\n                startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n                endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n            />\n            </Flex>\n        );\n        }\n    \n}\nexport default StatsAsset","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass TrancheSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async onChange(token){\n    let selectedProtocol;\n    Object.keys(this.props.availableTranches).map(protocol=> {\n        Object.keys(this.props.availableTranches[protocol]).map(t => {\n            if(token===t)\n            selectedProtocol=protocol;\n            return 0;\n            });\n            return 0;\n        });\n    await this.props.changeProtocolToken(selectedProtocol,token);\n  }\n  loadComponents(){\n    \n    let opt=[];\n    Object.keys(this.props.availableTranches).map(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).map(t => {\n            const tokenConfig=this.props.availableTranches[protocol][t];\n            opt.push({\n                value:t,\n                label:t,\n                tokenConfig\n                });\n            return 0;\n            });\n            return 0;\n          });\n    const options=opt;\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTranchesChanged = JSON.stringify(Object.keys(prevProps.availableTranches)) !== JSON.stringify(Object.keys(this.props.availableTranches));\n    if (availableTranchesChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTranches || !Object.keys(this.props.availableTranches).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={this.onChange.bind(this)}\n      />\n    );\n  }\n}\n\nexport default TrancheSelector;\n","import moment from 'moment';\nimport StatsChart from '../Stats/StatsChart';\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Heading, Box, Icon  } from 'rimble-ui';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport TrancheSelector from '../TrancheSelector/TrancheSelector';\nimport DateRangeModal from '../utilities/components/DateRangeModal';\n\nclass StatsTranche extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    minStartTime:null,\n    endTimestamp:null,\n    apiResults_aa:null,\n    apiResults_bb:null,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    seniorTrancheApy:null,\n    juniorTrancheApy:null,\n    startTimestampObj:null,\n    dateRangeModalOpened:false,\n    apiResults_unfiltered:null,\n    seniorTrancheConverage:null,\n    apiResults_unfiltered_aa:null,\n    apiResults_unfiltered_bb:null,\n  };\n\n  quickSelections = {\n    day:{\n      value:1,\n      type:'day',\n      label:'Last day',\n    },\n    week:{\n      value:1,\n      type:'week',\n      label:'Last week',\n    },\n    weeks:{\n      value:2,\n      type:'week',\n      label:'Last 2 weeks',\n    },\n    month:{\n      value:1,\n      type:'month',\n      label:'Last month',\n    },\n    ytd:{\n      type:'day',\n      label:'Year to date',\n      value:moment().diff(moment('01/01/YYYY','DD/MM/YYYY'),'days'),\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n    await this.loadApiData();\n  }\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n   \n  async loadParams() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    // console.log('loadParams',params,this.props);\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment('2021-12-01','YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.selectedToken.toUpperCase(),'startTimestamp']);\n\n    let startTimestampObj = minStartTime ? (moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime) : moment(ranges.startDate);\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n  \n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 4 : 3;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n\n    // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedProtocol,this.props.selectedToken,this.props.tokenConfig);\n\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const protocolChanged = prevProps.selectedProtocol !== this.props.selectedProtocol;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || protocolChanged){\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timeStamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timeStamp <= this.state.endTimestamp);\n    });\n  }\n\n  loadApiData = async () => {\n\n    if (!this.props.selectedToken || !this.props.selectedProtocol || !this.props.selectedStrategy || !this.props.tokenConfig){\n     \n      return false;\n    }\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    let apiResults_unfiltered_aa = await this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp);\n    let apiResults_unfiltered_bb = await this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp);\n\n    const apiResults_aa = this.filterTokenData(apiResults_unfiltered_aa);\n    const apiResults_bb = this.filterTokenData(apiResults_unfiltered_bb);\n    if (!apiResults_aa || !apiResults_unfiltered_aa || !apiResults_aa.length || !apiResults_unfiltered_aa.length || !apiResults_bb || !apiResults_unfiltered_bb || !apiResults_bb.length || !apiResults_unfiltered_bb.length){\n      return false;\n    }\n  \n    const firstResult_aa = Object.values(apiResults_aa)[0];\n    const firstResult_bb = Object.values(apiResults_bb)[0];\n    const lastResult_aa = Object.values(apiResults_aa).pop();\n    const lastResult_bb = Object.values(apiResults_bb).pop();\n\n    const aum_aa = this.functionsUtil.fixTokenDecimals(lastResult_aa.contractValue,this.props.tokenConfig.decimals);\n    const aum_bb = this.functionsUtil.fixTokenDecimals(lastResult_bb.contractValue,this.props.tokenConfig.decimals);\n    const aum = await this.functionsUtil.convertTrancheTokenBalance(aum_aa.plus(aum_bb),this.props.tokenConfig);\n\n    const days_aa = (lastResult_aa.timeStamp-firstResult_aa.timeStamp)/86400;\n    const days_bb = (lastResult_bb.timeStamp-firstResult_bb.timeStamp)/86400;\n\n    const firstAAPrice = this.functionsUtil.fixTokenDecimals(firstResult_aa.virtualPrice,this.props.tokenConfig.decimals);\n    const lastAAPrice = this.functionsUtil.fixTokenDecimals(lastResult_aa.virtualPrice,this.props.tokenConfig.decimals);\n    const seniorTrancheApy = lastAAPrice.div(firstAAPrice).minus(1).times(100).times(365).div(days_aa).toFixed(2);\n\n    const firstBBPrice = this.functionsUtil.fixTokenDecimals(firstResult_bb.virtualPrice,this.props.tokenConfig.decimals);\n    const lastBBPrice = this.functionsUtil.fixTokenDecimals(lastResult_bb.virtualPrice,this.props.tokenConfig.decimals);\n    const juniorTrancheApy = lastBBPrice.div(firstBBPrice).minus(1).times(100).times(365).div(days_bb).toFixed(2);\n\n    const seniorTrancheConverage = Math.min(aum_bb.div(aum_aa).times(100),100).toFixed(2);\n\n    /*\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    \n\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    apr = apiResults.reduce( (sum,r) => {\n      const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n      return this.functionsUtil.BNify(sum).plus(idleRate);\n    },0);\n\n    // Calculate average\n    apr = apr.div(apiResults.length);\n    apr = apr.toFixed(2);\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = prevP ? this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const availableTokens = {};\n    availableTokens[this.props.selectedToken] = this.props.tokenConfig;\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,availableTokens,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n    */\n    this.setStateSafe({\n      // apr,\n      // days,\n      // delta,\n      // apiResults,\n      // rebalances,\n      // govTokensPool,\n      // unlentBalance,\n      aum,\n      apiResults_aa,\n      apiResults_bb,\n      seniorTrancheApy,\n      juniorTrancheApy,\n      seniorTrancheConverage,\n      apiResults_unfiltered_aa,\n      apiResults_unfiltered_bb\n    });\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n\nrender() {\n\n  const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n  const valueProps = {\n    lineHeight:1,\n    fontSize:[4,5],\n    fontWeight:[3,4],\n    color:'statValue'\n  };\n\n  const unitProps = {\n    mr:2,\n    lineHeight:1,\n    fontSize:[3,5],\n    fontWeight:[3,4],\n    color:'statValue'\n  };\n\n  const tokenConfig = statsTokens[this.props.selectedToken.toUpperCase()];\n\n  const seniorTrancheName = this.functionsUtil.capitalize(this.functionsUtil.getGlobalConfig(['tranches','AA','baseName']));\n  const juniorTrancheName = this.functionsUtil.capitalize(this.functionsUtil.getGlobalConfig(['tranches','BB','baseName']));\n\n  // const disabledCharts = tokenConfig.disabledCharts || [];\n\n  let performanceTooltip = null;\n\n  return (\n      <Flex\n        p={0}\n        width={1}\n        flexDirection={'column'}\n      >\n        <Box\n          mb={[3,4]}\n        >\n          <Flex\n            flexDirection={['column','row']}\n          >\n            <Flex\n                width={[1,0.4]}\n            >\n              <Breadcrumb\n                {...this.props}\n                showPathMobile={true}\n                text={'ASSETS OVERVIEW'}\n                isMobile={this.props.isMobile}\n                handleClick={ e => this.props.goToSection('stats') }\n                path={[this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])]}\n              />\n            </Flex>\n\n            <Flex\n              mt={[3,0]}\n              width={[1,0.6]}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.26]}\n                flexDirection={'column'}\n              >\n                {\n                  /*\n                  <GenericSelector\n                    innerProps={{\n                    p:1,\n                    height:['100%','46px'],\n                    }}\n                    name={'idle-version'}\n                    options={versionsOptions}\n                    defaultValue={versionDefaultValue}\n                    onChange={ v => this.setIdleVersion(v) }\n                  />\n                  */\n                }\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.3]}\n                flexDirection={'column'}\n              >\n                <TrancheSelector\n                  innerProps={{\n                    p:1\n                  }}\n                  {...this.props}\n                />\n              </Flex>\n              <Flex\n                mt={[3,0]}\n                width={[1,0.39]}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:1,\n                    display:'flex',\n                    alignItems:'center',\n                    height:['46px','100%'],\n                    justifyContent:'center'\n                    }}\n                    isInteractive={true}\n                    handleClick={ e => this.setDateRangeModal(true) }\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'copyColor'}\n                    >\n                      {\n                        this.state.quickSelection ?\n                          this.quickSelections[this.state.quickSelection].label\n                        : this.state.startTimestampObj && this.state.endTimestampObj &&\n                          `${this.state.startTimestampObj.format('DD/MM/YY')} - ${this.state.endTimestampObj.format('DD/MM/YY')}`\n                      }\n                    </Text>\n                </DashboardCard>\n              </Flex>\n            </Flex>\n            </Flex>\n        </Box>\n        {\n          (!tokenConfig || !tokenConfig.enabled) ? (\n            <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                    p:3,\n                    width:[1,0.5],\n                }}\n                >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'DoNotDisturb'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Stats for {this.props.selectedToken} are not available!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) : this.functionsUtil.strToMoment(tokenConfig.startTimestamp).isAfter(Date.now()) ? (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Stats for {this.props.selectedToken} will be available shortly!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n            ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                justifyContent={'flex-start'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,4]}\n                  pr={[0,2]}\n                  width={[1,1/4]}\n                  flexDirection={'row'}\n                >\n                  <StatsCard\n                    title={'Asset Under Management'}\n                    label={`${seniorTrancheName} Tranche AUM + ${juniorTrancheName} Tranche AUM`}\n                  >\n                    <SmartNumber\n                      unit={'$'}\n                      precision={2}\n                      type={'money'}\n                      {...valueProps}\n                      unitPos={'left'}\n                      color={'primary'}\n                      unitProps={unitProps}\n                      number={this.state.aum}\n                      flexProps={{\n                        alignItems:'baseline',\n                        justifyContent:'flex-start'\n                      }}\n                    />\n                  </StatsCard>\n                </Flex>\n                <Flex\n                  mb={[2,4]}\n                  pr={[0,2]}\n                  width={[1,1/4]}\n                  flexDirection={'row'}\n                >\n                  <StatsCard\n                    label={'Annualized'}\n                    title={`${seniorTrancheName} Tranche Avg APY`}\n                  >\n                    <VariationNumber\n                      direction={'up'}\n                      iconPos={'right'}\n                      iconSize={'1.8em'}\n                      justifyContent={'flex-start'}\n                      width={1}\n                    >\n                      <Text\n                        lineHeight={1}\n                        fontWeight={[3,4]}\n                        color={'statValue'}\n                        fontSize={[4,5]}\n                      >\n                        {this.state.seniorTrancheApy}\n                        <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                      </Text>\n                    </VariationNumber>\n                  </StatsCard>\n                </Flex>\n                <Flex\n                  mb={[2,4]}\n                  pr={[0,2]}\n                  width={[1,1/4]}\n                  flexDirection={'row'}\n                >\n                  <StatsCard\n                    label={'Annualized'}\n                    title={`${juniorTrancheName} Tranche Avg APY`}\n                  >\n                    <VariationNumber\n                      direction={'up'}\n                      iconPos={'right'}\n                      iconSize={'1.8em'}\n                      justifyContent={'flex-start'}\n                      width={1}\n                    >\n                      <Text\n                        lineHeight={1}\n                        fontWeight={[3,4]}\n                        color={'statValue'}\n                        fontSize={[4,5]}\n                      >\n                        {this.state.juniorTrancheApy}\n                        <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                      </Text>\n                    </VariationNumber>\n                  </StatsCard>\n                </Flex>\n                <Flex\n                  mb={[2,4]}\n                  pr={[0,2]}\n                  width={[1,1/4]}\n                  flexDirection={'row'}\n                >\n                  <StatsCard\n                    title={`${seniorTrancheName} Tranche coverage`}\n                    label={`Covered by ${juniorTrancheName} Tranche TVL`}\n                  >\n                    <Text\n                      lineHeight={1}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      fontSize={[4,5]}\n                    >\n                      {this.state.seniorTrancheConverage}\n                      <Text.span color={'statValue'} fontWeight={3} fontSize={['90%','70%']}>%</Text.span>\n                    </Text>\n                  </StatsCard>\n                </Flex>\n              </Flex>\n              <DashboardCard\n                cardProps={{\n                  mb:[3,4]\n                }}\n                title={'Historical Performance'}\n                description={performanceTooltip}\n              >\n                <Flex\n                  mb={3}\n                  width={1}\n                  id={'chart-PRICE'}\n                >\n                  <StatsChart\n                    height={ 350 }\n                    {...this.state}\n                    parentId={'chart-PRICE'}\n                    theme={this.props.theme}\n                    chartMode={'PRICE_TRANCHE'}\n                    isMobile={this.props.isMobile}\n                    contracts={this.props.contracts}\n                    themeMode={this.props.themeMode}\n                    tokenConfig={this.props.tokenConfig}\n                    apiResults_aa={this.state.apiResults_aa}\n                    apiResults_bb={this.state.apiResults_bb}\n                    selectedToken={this.props.selectedToken}\n\n                  />\n                </Flex>\n              </DashboardCard>\n              <Flex\n                position={'relative'}\n              >\n                <Flex\n                  width={1}\n                  id={'carousel-container'}\n                  justifyContent={'flex-end'}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:3\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n                <Flex\n                  mt={5}\n                  height={'400px'}\n                  position={'absolute'}\n                  id={'carousel-cursor'}\n                  width={['555%','200%']}\n                  justifyContent={'flex-start'}\n                  left={this.state.carouselOffsetLeft}\n                  style={{\n                    transition:'left 0.3s ease-in-out'\n                  }}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      mr:4,\n                      height:'fit-content',\n                      style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      id={'chart-AUM'}\n                    >\n                      <Flex\n                        mb={3}\n                        width={1}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'center'}\n                      >\n                        <Heading.h4\n                          ml={3}\n                          mt={3}\n                          mb={2}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Asset Under Management\n                        </Heading.h4>\n                        <StatsChart\n                          height={300}\n                          {...this.state}\n                          parentId={'chart-AUM'}\n                          theme={this.props.theme}\n                          chartMode={'AUM_TRANCHE'}\n                          isMobile={this.props.isMobile}\n                          themeMode={this.props.themeMode}\n                          contracts={this.props.contracts}\n                          idleVersion={this.state.idleVersion}\n                          tokenConfig={this.props.tokenConfig}\n                          apiResults_aa={this.state.apiResults_aa}\n                          apiResults_bb={this.state.apiResults_bb}\n                          selectedToken={this.props.selectedToken}\n                        />\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  <DashboardCard\n                    cardProps={{\n                      mr:4,\n                      height:'fit-content',\n                      style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      id={'chart-APR'}\n                    >\n                      <Flex\n                        mb={3}\n                        width={1}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'center'}\n                      >\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={3}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          APRs\n                        </Heading.h4>\n                        <StatsChart\n                          height={300}\n                          {...this.state}\n                          parentId={'chart-APR'}\n                          theme={this.props.theme}\n                          chartMode={'APR_TRANCHE'}\n                          isMobile={this.props.isMobile}\n                          themeMode={this.props.themeMode}\n                          contracts={this.props.contracts}\n                          idleVersion={this.state.idleVersion}\n                          tokenConfig={this.props.tokenConfig}\n                          apiResults_aa={this.state.apiResults_aa}\n                          apiResults_bb={this.state.apiResults_bb}\n                          apiResults_unfiltered_aa={this.state.apiResults_unfiltered_aa}\n                          apiResults_unfiltered_bb={this.state.apiResults_unfiltered_bb}\n                        />\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  <DashboardCard\n                    cardProps={{\n                      mr:4,\n                      height:'fit-content',\n                      style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      id={'chart-VOL'}\n                    >\n                      <Flex\n                        mb={3}\n                        width={1}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'center'}\n                      >\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={3}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          {seniorTrancheName} Tranche Coverage\n                        </Heading.h4>\n                        <StatsChart\n                          height={300}\n                          {...this.state}\n                          parentId={'chart-VOL'}\n                          theme={this.props.theme}\n                          chartMode={'COVERAGE_TRANCHE'}\n                          isMobile={this.props.isMobile}\n                          themeMode={this.props.themeMode}\n                          contracts={this.props.contracts}\n                          apiResults_aa={this.state.apiResults_aa}\n                          apiResults_bb={this.state.apiResults_bb}\n                          idleVersion={this.state.idleVersion}\n                          tokenConfig={this.props.tokenConfig}\n                          apiResults_unfiltered_aa={this.state.apiResults_unfiltered_aa}\n                          apiResults_unfiltered_bb={this.state.apiResults_unfiltered_bb}\n                        />\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  <DashboardCard\n                    cardProps={{\n                      mr:4,\n                      height:'fit-content',\n                      style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      id={'chart-VOL-AA'}\n                    >\n                      <Flex\n                        mb={3}\n                        width={1}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'center'}\n                      >\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={3}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                          Volume {seniorTrancheName} Tranche\n                        </Heading.h4>\n                        <StatsChart\n                          height={300}\n                          {...this.state}\n                          theme={this.props.theme}\n                          parentId={'chart-VOL-AA'}\n                          chartMode={'VOL_TRANCHE'}\n                          isMobile={this.props.isMobile}\n                          themeMode={this.props.themeMode}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults_aa}\n                          idleVersion={this.state.idleVersion}\n                          tokenConfig={this.props.tokenConfig}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered_aa}\n                        />\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  <DashboardCard\n                    cardProps={{\n                      mr:4,\n                      height:'fit-content',\n                      style:this.props.isMobile ? {width:'100%'} : {width:'32vw'}\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      id={'chart-VOL-BB'}\n                    >\n                      <Flex\n                        mb={3}\n                        width={1}\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'center'}\n                      >\n                        <Heading.h4\n                          mb={2}\n                          ml={3}\n                          mt={3}\n                          fontWeight={4}\n                          fontSize={[2,3]}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                        >\n                           Volume {juniorTrancheName} Tranche\n                        </Heading.h4>\n                        <StatsChart\n                          height={300}\n                          {...this.state}\n                          theme={this.props.theme}\n                          chartMode={'VOL_TRANCHE'}\n                          parentId={'chart-VOL-BB'}\n                          isMobile={this.props.isMobile}\n                          themeMode={this.props.themeMode}\n                          contracts={this.props.contracts}\n                          apiResults={this.state.apiResults_bb}\n                          idleVersion={this.state.idleVersion}\n                          tokenConfig={this.props.tokenConfig}\n                          apiResults_unfiltered={this.state.apiResults_unfiltered_bb}\n                        />\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                </Flex>\n              </Flex>\n            </Box>\n          )\n        }\n        <DateRangeModal\n          {...this.props}\n          minDate={this.state.minDate}\n          maxDate={this.state.maxDate}\n          handleSelect={this.setDateRange}\n          quickSelections={this.quickSelections}\n          isOpen={this.state.dateRangeModalOpened}\n          closeModal={e => this.setDateRangeModal(false)}\n          startDate={this.state.startTimestampObj ? this.state.startTimestampObj._d : null}\n          endDate={this.state.endTimestampObj ? this.state.endTimestampObj._d : null}\n        />\n        </Flex>\n    );\n  }\n}\nexport default StatsTranche","import moment from 'moment';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport StatsAsset from '../StatsAsset/StatsAsset';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from \"../TranchesList/TranchesList\";\nimport StatsTranche from '../StatsTranche/StatsTranche';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Box, Icon, Button, Link } from 'rimble-ui';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nclass Stats extends Component {\n  state = {\n    aum:null,\n    apr:null,\n    days:'-',\n    delta:null,\n    earning:null,\n    minDate:null,\n    maxDate:null,\n    carouselMax:1,\n    rebalances:'-',\n    buttonGroups:[],\n    apiResults:null,\n    carouselIndex:0,\n    idleVersion:null,\n    statsVersions:{},\n    minStartTime:null,\n    endTimestamp:null,\n    showAdvanced:true,\n    govTokensPool:null,\n    unlentBalance:null,\n    quickSelection:null,\n    startTimestamp:null,\n    endTimestampObj:null,\n    shouldRebalance:null,\n    carouselOffsetLeft:0,\n    startTimestampObj:null,\n    showRefreshIdleSpeed:false,\n    dateRangeModalOpened:false,\n    apiResults_unfiltered:null\n  };\n\n  quickSelections = {\n    day:{\n      value:1,\n      type:'day',\n      label:'Last day',\n    },\n    week:{\n      value:1,\n      type:'week',\n      label:'Last week',\n    },\n    weeks:{\n      value:2,\n      type:'week',\n      label:'Last 2 weeks',\n    },\n    month:{\n      value:1,\n      type:'month',\n      label:'Last month',\n    },\n    ytd:{\n      type:'day',\n      label:'Year to date',\n      value:moment().diff(moment('01/01/YYYY','DD/MM/YYYY'),'days'),\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadParams();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  showRefreshIdleSpeed(){\n    this.setStateSafe({\n      showRefreshIdleSpeed:true\n    });\n  }\n\n  getLatestAvailableVersion(){\n    const statsVersions = globalConfigs.stats.versions;\n    let latestVersion = null;\n    Object.keys(statsVersions).forEach( version => {\n      const versionInfo = statsVersions[version];\n      if (versionInfo.enabledStrategies.includes(this.props.selectedStrategy)){\n        latestVersion = version;\n      }\n    });\n\n    return latestVersion;\n  }\n\n  getVersionInfo(version){\n    if (!version){\n      version = this.state.idleVersion;\n    }\n\n    if (!globalConfigs.stats.versions[version]){\n      return null;\n    }\n\n    const versionInfo = Object.assign({},globalConfigs.stats.versions[version]);\n\n    if (versionInfo.strategiesParams && versionInfo.strategiesParams[this.props.selectedStrategy]){\n      const versionInfoExtra = versionInfo.strategiesParams[this.props.selectedStrategy];\n      Object.keys(versionInfoExtra).forEach( param => {\n        versionInfo[param] = versionInfoExtra[param];\n      });\n    }\n\n    return versionInfo;\n  }\n\n  async loadParams() {\n\n    if (!this.props.selectedToken){\n      return false;\n    }\n\n    const newState = {};\n    const { match: { params } } = this.props;\n\n    const currentNetworkAvailableTokens = Object.keys(this.props.availableTokens);\n\n    if(this.props.selectedStrategy==='tranches') {\n      newState.selectedToken=this.props.selectedToken\n    } else if (!!params.customToken && currentNetworkAvailableTokens.indexOf(params.customToken.toUpperCase()) !== -1 ){\n      newState.selectedToken = params.customToken.toUpperCase();\n    } else {\n      newState.selectedToken = this.props.selectedToken.toUpperCase();\n    }\n\n    newState.tokenConfig = this.props.availableTokens[newState.selectedToken];\n    newState.minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken.toUpperCase()].startTimestamp,'YYYY-MM-DD');\n    newState.maxEndDate = moment();\n\n    newState.endTimestampObj = moment(moment().format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    newState.latestVersion = this.getLatestAvailableVersion();\n    newState.idleVersion = this.state.idleVersion === null ? newState.latestVersion : this.state.idleVersion;\n\n    const versionInfo = this.getVersionInfo(newState.idleVersion);\n\n    // console.log('loadParams',newState.latestVersion,newState.idleVersion,versionInfo);\n\n    if (newState.idleVersion && versionInfo.endTimestamp){\n      const newEndTimestampObj = moment(moment(versionInfo.endTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.endTimestampObj.isAfter(newEndTimestampObj)){\n        newState.endTimestampObj = newEndTimestampObj;\n        newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n      }\n\n      if (!newState.maxEndDate || newState.maxEndDate.isAfter(newEndTimestampObj)){\n        newState.maxEndDate = newEndTimestampObj;\n      }\n    }\n\n    newState.endTimestamp = parseInt(newState.endTimestampObj._d.getTime()/1000);\n\n    // Set start date\n    newState.startTimestampObj = newState.endTimestampObj.clone().subtract(1,'month');\n    newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n\n    if (newState.idleVersion && versionInfo.startTimestamp){\n      const newStartTimestampObj = moment(moment(versionInfo.startTimestamp*1000).format('YYYY-MM-DD HH:mm'),'YYYY-MM-DD HH:mm');\n      if (newState.startTimestampObj.isBefore(newStartTimestampObj)){\n        newState.startTimestampObj = newStartTimestampObj;\n        newState.startTimestamp = parseInt(newState.startTimestampObj._d.getTime()/1000);\n      }\n\n      if (newState.minStartTime.isBefore(newStartTimestampObj)){\n        newState.minStartTime = newStartTimestampObj;\n      }\n    }\n    newState.minDate = newState.minStartTime._d;\n    newState.maxDate = newState.maxEndDate._d;\n\n    if (newState !== this.state){\n      await this.setStateSafe(newState);\n    }\n  }\n\n  setDateRange = (ranges,quickSelection=null) => {\n\n    const minStartTime = moment(globalConfigs.stats.tokens[this.props.selectedToken.toUpperCase()].startTimestamp);\n\n    let startTimestampObj = moment(ranges.startDate).isSameOrAfter(minStartTime) ? moment(ranges.startDate) : minStartTime;\n    let endTimestampObj = moment(ranges.endDate);\n\n    if (startTimestampObj.isSame(endTimestampObj)){\n      endTimestampObj.add(1,'day');\n    }\n\n    endTimestampObj = moment(endTimestampObj.format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n\n    if (startTimestampObj.isBefore(this.state.minStartTime)){\n      startTimestampObj = this.state.minStartTime;\n    }\n\n    if (endTimestampObj.isAfter(this.state.maxEndDate)){\n      endTimestampObj = this.state.maxEndDate;\n    }\n\n    const startTimestamp = parseInt(startTimestampObj._d.getTime()/1000);\n    const endTimestamp = parseInt(endTimestampObj._d.getTime()/1000);\n\n    const newState = {\n      minStartTime,\n      endTimestamp,\n      quickSelection,\n      startTimestamp,\n      endTimestampObj,\n      startTimestampObj\n    };\n\n    this.setStateSafe(newState);\n\n    return newState;\n  }\n\n  toggleAdvancedCharts = (e) => {\n    e.preventDefault();\n    this.setStateSafe({\n      showAdvanced:!this.state.showAdvanced\n    });\n  }\n\n  setDateRangeModal = (dateRangeModalOpened) => {\n    if (dateRangeModalOpened !== this.state.dateRangeModalOpened){\n      this.setStateSafe({\n        dateRangeModalOpened\n      });\n    }\n  }\n\n  async componentDidMount() {\n\n    if (!this.props.web3){\n      this.props.initWeb3();\n      return false;\n    }\n\n    /*\n    const style = document.createElement('style');\n    style.id = 'crisp-custom-style';\n    style.type = 'text/css';\n    style.innerHTML = `\n    .crisp-client{\n      display:none !important;\n    }`;\n    document.body.appendChild(style);\n    */\n\n    this.loadUtils();\n    await this.loadParams();\n    this.loadApiData();\n    this.loadCarousel();\n  }\n\n  loadCarousel(){\n    const carouselMax = this.props.isMobile ? 3 : 2;\n    this.setStateSafe({\n      carouselMax\n    });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const versionChanged = nextState.idleVersion !== this.state.idleVersion;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const strategyChanged = nextProps.selectedStrategy !== this.props.selectedStrategy;\n    const contractsInitialized = nextProps.contractsInitialized !== this.props.contractsInitialized;\n    const dateChanged = nextState.startTimestamp !== this.state.startTimestamp || nextState.endTimestamp !== this.state.endTimestamp;\n    const tokenChanged = nextProps.selectedToken !== this.props.selectedToken || JSON.stringify(nextProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n\n    return stateChanged || contractsInitialized || tokenChanged || strategyChanged || versionChanged || dateChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const strategyChanged = prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const dateChanged = prevState.startTimestamp !== this.state.startTimestamp || prevState.endTimestamp !== this.state.endTimestamp;\n    const versionChanged = prevState.idleVersion !== this.state.idleVersion;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n\n    if (mobileChanged){\n      this.loadCarousel();\n    }\n\n    if (contractsInitialized || tokenChanged || strategyChanged || versionChanged){\n      // console.log('componentDidUpdate',this.props.selectedStrategy,this.props.selectedToken);\n      await this.componentDidMount();\n    } else if (dateChanged){\n      this.loadApiData();\n    }\n  }\n\n  filterTokenData = (apiResults) => {\n    return apiResults.filter((r,i) => {\n      return (!this.state.startTimestamp || r.timestamp >= this.state.startTimestamp) && (!this.state.endTimestamp || r.timestamp <= this.state.endTimestamp);\n    });\n  }\n\n  setIdleVersion = idleVersion => {\n    this.setStateSafe({\n      idleVersion\n    });\n  }\n\n  loadApiData = async () => {\n\n    /*\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return false;\n    }\n\n    const startTimestamp = this.state.minDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.minDate).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n    const endTimestamp = this.state.maxDate ? parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(this.state.maxDate).format('DD/MM/YYYY 23:59:59'),'DD/MM/YYYY HH:mm:ss')._d.getTime()/1000) : null;\n\n    const isRisk = ['v3','v4'].includes(this.state.idleVersion) && this.props.selectedStrategy === 'risk';\n    let apiResults_unfiltered = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    const apiResults = this.filterTokenData(apiResults_unfiltered);\n\n    // console.log('loadApiData',startTimestamp,endTimestamp,new Date(startTimestamp*1000),new Date(endTimestamp*1000),apiResults,apiResults_unfiltered);\n\n    if (!apiResults || !apiResults_unfiltered || !apiResults.length || !apiResults_unfiltered.length){\n      return false;\n    }\n\n    const firstResult = apiResults[0];\n    const lastResult = Object.values(apiResults).pop();\n\n    window.moment = moment;\n\n    let days = (lastResult.timestamp-firstResult.timestamp)/86400;\n    if (days === 0){\n      days = 1;\n    }\n\n    let apr = null;\n    let delta = 'N/A';\n\n    const idleTokens = this.functionsUtil.fixTokenDecimals(lastResult.idleSupply,18);\n    const firstIdlePrice = this.functionsUtil.fixTokenDecimals(firstResult.idlePrice,this.props.tokenConfig.decimals);\n    const lastIdlePrice = this.functionsUtil.fixTokenDecimals(lastResult.idlePrice,this.props.tokenConfig.decimals);\n\n    // Calculate AUM\n    let aum = idleTokens.times(lastIdlePrice);\n\n    // Convert Token balance\n    aum = await this.functionsUtil.convertTokenBalance(aum,this.props.selectedToken,this.props.tokenConfig,isRisk);\n\n    const compoundInfo = this.props.tokenConfig.protocols.filter((p) => { return p.name === 'compound' })[0];\n    const firstCompoundData = compoundInfo ? firstResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n    const lastCompoundData = compoundInfo ? lastResult.protocolsData.filter((p) => { return p.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase() })[0] : null;\n\n    if (this.state.idleVersion === 'v4') {\n\n      apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.functionsUtil.fixTokenDecimals(r.idleRate,18);\n        return this.functionsUtil.BNify(sum).plus(idleRate);\n      },0);\n\n      // Calculate average\n      apr = apr.div(apiResults.length);\n\n      if (compoundInfo){\n        const compoundWithCOMPInfo = globalConfigs.stats.protocols.compoundWithCOMP;\n        const rateField = compoundWithCOMPInfo.rateField ? compoundWithCOMPInfo.rateField : 'rate';\n\n        let compoundAvgApr = apiResults.reduce( (sum,r) => {\n\n          const compoundData = r.protocolsData.find((pData,x) => {\n            return pData.protocolAddr.toLowerCase() === compoundInfo.address.toLowerCase()\n          });\n\n          let compoundRate = typeof rateField === 'object' && rateField.length ? rateField.reduce((acc,field) => {\n            if (compoundData && compoundData[field]){\n              return this.functionsUtil.BNify(acc).plus(this.functionsUtil.BNify(compoundData[field]));\n            }\n            return this.functionsUtil.BNify(acc);\n          },0) : this.functionsUtil.BNify(compoundData[rateField]);\n\n          compoundRate = this.functionsUtil.fixTokenDecimals(compoundRate,18);\n\n          return this.functionsUtil.BNify(sum).plus(compoundRate);\n        },0);\n\n        // Calculate average\n        compoundAvgApr = compoundAvgApr.div(apiResults.length);\n\n        // compoundAvgApr = this.functionsUtil.apr2apy(compoundAvgApr.div(100)).times(100);\n        // apr = this.functionsUtil.apr2apy(apr.div(100)).times(100);\n\n        delta = apr.minus(compoundAvgApr);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n\n      apr = apr.toFixed(2);\n\n    } else {\n      const earning = lastIdlePrice.div(firstIdlePrice).minus(1).times(100);\n      apr = earning.times(365).div(days).toFixed(2);\n\n      if (firstCompoundData && lastCompoundData){\n        const firstCompoundPrice = this.functionsUtil.fixTokenDecimals(firstCompoundData.price,this.props.tokenConfig.decimals);\n        const lastCompoundPrice = this.functionsUtil.fixTokenDecimals(lastCompoundData.price,this.props.tokenConfig.decimals);\n        const compoundApr = lastCompoundPrice.div(firstCompoundPrice).minus(1).times(100);\n        delta = earning.minus(compoundApr).times(365).div(days);\n        if (parseFloat(delta)<0){\n          delta = 0\n        }\n        delta = delta.toFixed(2);\n      }\n    }\n\n    // Count rebalances\n    let rebalances = 0;\n    apiResults.forEach((row,index) => {\n      if (index){\n        const prevRow = apiResults[index-1];\n\n        const totalAllocation = row.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        const prevTotalAllocation = prevRow.protocolsData.reduce((accumulator,protocolAllocation) => {\n          const allocation = this.functionsUtil.fixTokenDecimals(protocolAllocation.allocation,this.props.tokenConfig.decimals);\n          return this.functionsUtil.BNify(accumulator).plus(allocation);\n        },0);\n\n        let hasRebalanced = false;\n        row.protocolsData.forEach( p => {\n          if (hasRebalanced){\n            return;\n          }\n          const prevP = prevRow.protocolsData.find( prevP => (prevP.protocolAddr.toLowerCase() === p.protocolAddr.toLowerCase()) );\n          const allocation = this.functionsUtil.fixTokenDecimals(p.allocation,this.props.tokenConfig.decimals);\n          const prevAllocation = prevP ? this.functionsUtil.fixTokenDecimals(prevP.allocation,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n          const allocationPerc = parseInt(parseFloat(allocation.div(totalAllocation).times(100)));\n          const prevAllocationPerc = parseInt(parseFloat(prevAllocation.div(prevTotalAllocation).times(100)));\n          if (allocationPerc!==prevAllocationPerc){\n            rebalances++;\n            hasRebalanced = true;\n          }\n        });\n      }\n    });\n\n    // Add gov tokens balance to AUM\n    const availableTokens = {};\n    availableTokens[this.props.selectedToken] = this.props.tokenConfig;\n    const govTokensPool = await this.functionsUtil.getGovTokenPool(null,availableTokens,'DAI');\n    if (govTokensPool){\n      aum = aum.plus(govTokensPool);\n    }\n\n    let unlentBalance = await this.functionsUtil.getUnlentBalance(this.props.tokenConfig);\n    if (unlentBalance){\n      unlentBalance = this.functionsUtil.formatMoney(parseFloat(unlentBalance));\n    }\n\n    this.setStateSafe({\n      aum,\n      apr,\n      days,\n      delta,\n      apiResults,\n      rebalances,\n      govTokensPool,\n      unlentBalance,\n      apiResults_unfiltered\n    });\n    */\n  }\n\n  selectToken = async (strategy,token) => {\n    await this.props.setStrategyToken(strategy,token);\n    this.props.changeToken(token);\n\n  }\n  selectTranche = async (strategy,protocol,token) => {\n    await this.props.setStrategyToken(strategy,token,protocol);\n    this.props.changeProtocolToken(protocol,token);\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left)+'px';\n\n    this.setStateSafe({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  render() {\n\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n    const idleTokenAvailableNetworks = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','availableNetworks']);\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']) && idleTokenAvailableNetworks.includes(networkId);\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    const tranchesEnabled = tranchesConfig.availableNetworks.includes(networkId) && (!tranchesConfig.enabledStatsNetworks || tranchesConfig.enabledStatsNetworks.includes(networkId));\n    \n    const refreshIdleSpeedConfig = this.functionsUtil.getGlobalConfig(['contract','methods','refreshIdleSpeed']);\n    const refreshIdleSpeedEnabled = refreshIdleSpeedConfig.enabled && refreshIdleSpeedConfig.availableNetworks.includes(networkId);\n\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n\n    if (!this.props.availableStrategies){\n      return (\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'40px'\n          }}\n          flexProps={{\n            minHeight:'50vh',\n            flexDirection:'column'\n          }}\n          text={'Loading assets...'}\n        />\n      );\n    }\n\n    const statsTokens = this.functionsUtil.getGlobalConfig(['stats','tokens']);\n\n    if (!this.props.selectedToken){\n      const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n      const enabledTokens = [];\n      const statsProtocols = this.functionsUtil.getGlobalConfig(['stats','protocols']);\n\n      Object.keys(statsTokens).forEach(token => {\n        const tokenInfo = statsTokens[token];\n        if (tokenInfo.enabled){\n          enabledTokens.push(token);\n        }\n      });\n      return (\n        <Flex\n          mb={3}\n          width={1}\n          flexDirection={'column'}\n        >\n          <AssetsUnderManagement\n            {...this.props}\n            loaderAlign={'flex-end'}\n          />\n          {\n            Object.keys(strategies).map(strategy => \n             \n              {\n                if(strategy==='risk')\n                return false;\n\n                const strategyInfo = strategies[strategy];\n                const availableTokens = this.props.availableStrategies[strategy];\n\n                if (!availableTokens || !Object.keys(availableTokens).length){\n                  return false;\n                }\n                \n                // Get available protocols name\n                const availableProtocolsKeys = [];\n                Object.keys(availableTokens).forEach( token => {\n                  availableTokens[token].protocols.forEach( protocolInfo => {\n                    if (availableProtocolsKeys.indexOf(protocolInfo.name)<0 && statsProtocols[protocolInfo.name].enabled && statsProtocols[protocolInfo.name].legend){\n                      availableProtocolsKeys.push(protocolInfo.name);\n                    }\n                  });\n                });\n\n                const availableProtocols = availableProtocolsKeys.map( protocolName => {\n                  return statsProtocols[protocolName];\n                },{});\n\n                return (\n                  <Box\n                    mb={2}\n                    width={1}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    key={`strategy-container-${strategy}`}\n                  >\n                    <Title\n                      mt={3}\n                      mb={[3,4]}\n                    >\n                      <Flex\n                        flexDirection={'row'}\n                        alignItems={'baseline'}\n                        justifyContent={'center'}\n                      >\n                        {strategyInfo.title}\n                        {\n                          strategyInfo.titlePostfix &&\n                            <Text\n                              ml={2}\n                              fontWeight={3}\n                              fontSize={[2,4]}\n                              color={'dark-gray'}\n                            >\n                              {strategyInfo.titlePostfix}\n                            </Text>\n                        }\n                      </Flex>\n                    </Title>\n                    <AssetsList\n                      enabledTokens={enabledTokens}\n                      handleClick={(props) => this.selectToken(strategy,props.token)}\n                      cols={[\n                        {\n                          title:'CURRENCY',\n                          props:{\n                            width:[0.26,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.20,0.14],\n                          },\n                          fields:[\n                            {\n                              name:'allocationChart',\n                              mobile:false,\n                              parentProps:{\n                                width:0.3\n                              },\n                              style:{\n                                overflow:'visible'\n                              },\n                              showLoader:false,\n                            },\n                            {\n                              name:'pool',\n                              props:{\n                                ml:1\n                              },\n                              parentProps:{\n                                width:[1,0.7]\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'APY',\n                          desc:apyLong,\n                          props:{\n                            width: [0.29,0.15],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                            justifyContent:networkId === 1 ? 'flex-start' : 'center',\n                          },\n                          fields:[\n                            {\n                              name:'apy',\n                              showTooltip:true\n                            },\n                            networkId === 1 ? {\n                              name:'idleDistribution',\n                              showLoader:false,\n                              props:{\n                                decimals:this.props.isMobile ? 1 : 2,\n                                fontSize:this.props.isMobile ? '9px' : 0\n                              }\n                            } : null,\n                          ]\n                        },\n                        {\n                          title:'FARMING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','yieldFarming']),\n                          mobile:false,\n                          props:{\n                            width:[0.27,0.14],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        {\n                          title:'APR LAST WEEK',\n                          mobile:false,\n                          props:{\n                            width: 0.25,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'aprChart',\n                              style:{\n                                overflow:'visible',\n                              },\n                            }\n                          ]\n                        },\n                        {\n                          title:'',\n                          props:{\n                            width:[0.29,0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label:this.props.isMobile ? 'View' : 'View stats',\n                              props:{\n                                width:1,\n                                height:'45px',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectToken(strategy,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      selectedStrategy={strategy}\n                      availableTokens={availableTokens}\n                    />\n                    {\n                      !this.props.isMobile &&\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'flex-end'}\n                        >\n                          {\n                            availableProtocols.filter( p => p.legend ).map( (p,index) => (\n                              <Flex\n                                mr={3}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                key={`legend_${index}`}\n                              >\n                                <Box\n                                  mr={1}\n                                  width={'10px'}\n                                  height={'10px'}\n                                  borderRadius={'50%'}\n                                  backgroundColor={`rgb(${p.color.rgb.join(',')})`}\n                                >\n                                </Box>\n                                <Text.span\n                                  fontSize={1}\n                                  color={'cellText'}\n                                >\n                                  {p.label}\n                                </Text.span>\n                              </Flex>\n                            ))\n                          }\n                        </Flex>\n                    }\n                  </Box>\n                );\n              }\n            )\n          }\n\n          {\n            tranchesEnabled && (\n              <Box\n                width={1}\n              >\n                <Title mb={[3,4]}>Tranches</Title>\n                <TranchesList\n                    enabledProtocols={[]}\n                    availableTranches={this.props.availableTranches}\n                    handleClick={(props) => this.selectTranche('tranches',props.protocol,props.token)}\n                    cols={[\n                      {\n                        title:'PROTOCOL',\n                        props:{\n                          width:[0.23, 0.14]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'protocolName'\n                          },\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.17, 0.12],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n\n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.20, 0.12],\n                        },\n                        fields:[\n                          {\n                            name:'poolConverted',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'SENIOR APY',\n                        props:{\n                          width:[0.20, 0.1],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:'JUNIOR APY',\n                        props:{\n                          width:[0.20, 0.1],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR LAST WEEK',\n                        props:{\n                          width:[0.25],\n                        },\n                        parentProps:{\n                          width:1,\n                          pr:[2,4]\n                        },\n                        fields:[\n                          {\n                            name:'aprChart',\n                            style:{\n                              overflow:'visible',\n                            },\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:false,\n                        title:'AUTO-FARMING',\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.14 : 0.14],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                */\n                        /*\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label:this.props.isMobile ? 'View' : 'View stats',\n                            props:{\n                              width:1,\n                              height:'45px',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche('tranches',props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n\n                    ]}\n                    {...this.props}\n                />\n              </Box>\n            )\n          }\n\n          {\n            idleTokenEnabled && refreshIdleSpeedEnabled && !this.state.showRefreshIdleSpeed ? (\n              <Flex\n                mb={4}\n                width={1}\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Link\n                  hoverColor={'primary'}\n                  onClick={this.showRefreshIdleSpeed.bind(this)}\n                >\n                  Refresh Idle Speed\n                </Link>\n              </Flex>\n            ) : idleTokenEnabled && refreshIdleSpeedEnabled && this.state.showRefreshIdleSpeed &&\n              <DashboardCard\n                cardProps={{\n                  p:2,\n                  mb:4,\n                  width:1,\n                  mt:[2,3],\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontWeight={500}\n                    color={'flashColor'}\n                    textAlign={'center'}\n                    fontSize={[1,'15px']}\n                  >\n                    By executing this transaction you can adjust the IDLE distribution speed among the pools.\n                  </Text>\n                  <ExecuteTransaction\n                    action={'Refresh'}\n                    Component={Button}\n                    parentProps={{\n                      mt:1\n                    }}\n                    componentProps={{\n                      size:'small',\n                      mainColor:'blue',\n                      value:'REFRESH IDLE SPEED'\n                    }}\n                    params={[]}\n                    contractName={'IdleController'}\n                    methodName={'refreshIdleSpeeds'}\n                    {...this.props}\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                    >\n                      <Icon\n                        mr={1}\n                        name={'Done'}\n                        size={'1.4em'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      />\n                      <Text\n                        fontWeight={500}\n                        fontSize={'15px'}\n                        color={'copyColor'}\n                        textAlign={'center'}\n                      >\n                        Idle Speed Refreshed\n                      </Text>\n                    </Flex>\n                  </ExecuteTransaction>\n                </Flex>\n              </DashboardCard>\n          }\n        </Flex>\n      );\n    } else {\n      return this.props.selectedStrategy==='best' ? (\n         <StatsAsset\n           {...this.props}\n         />\n      ) : this.props.selectedStrategy==='tranches' && (\n        <StatsTranche\n           {...this.props}\n         />\n      )\n    }\n  }\n}\n\nexport default Stats;","import Title from '../Title/Title';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Icon, Text, Box, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Utils extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const SubComponent = this.props.selectedSubsection && this.props.selectedSubsection.subComponent ? this.props.selectedSubsection.subComponent : null;\n    const viewOnly = this.props.connectorName === 'custom';\n    const showBreadCrumb = typeof this.props.showBreadCrumb !== 'undefined' ? this.props.showBreadCrumb : true;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.props.selectedSubsection ? (\n            <Box\n              width={1}\n            >\n              {\n                showBreadCrumb && (\n                  <Flex\n                    width={1}\n                  >\n                    <Breadcrumb\n                      {...this.props}\n                      showPathMobile={true}\n                      isMobile={this.props.isMobile}\n                      path={[this.props.selectedSubsection.label]}\n                      text={this.props.selectedSection.label.toUpperCase()}\n                      handleClick={ e => this.props.goToSection(this.props.selectedSection.route) }\n                    />\n                  </Flex>\n                )\n              }\n              <Flex\n                my={[2,3]}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Title\n                  mb={2}\n                >\n                  {this.props.selectedSubsection.label}\n                </Title>\n                <Text\n                  textAlign={'center'}\n                  dangerouslySetInnerHTML={{\n                    __html:this.props.selectedSubsection.desc\n                  }}\n                >\n                </Text>\n              </Flex>\n              <SubComponent\n                {...this.props}\n                {...this.props.selectedSubsection.directProps}\n                toolProps={this.props.selectedSubsection.props}\n              />\n            </Box>\n          ) : (\n            <Flex\n              my={[2,3]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                mb={3}\n              >\n                Tools\n              </Title>\n              <Flex\n                width={1}\n                style={{\n                  flexWrap:'wrap'\n                }}\n                justifyContent={viewOnly ? 'center' : 'flex-start'}\n              >\n              {\n                viewOnly ? (\n                  <IconBox\n                    cardProps={{\n                      maxWidth:[1,'35em']\n                    }}\n                    icon={'Visibility'}\n                    text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n                  />\n                ) : this.props.selectedSection.submenu.map( (tool,toolIndex) => (\n                  <DashboardCard\n                    isInteractive={true}\n                    key={`tool_${toolIndex}`}\n                    cardProps={{\n                      p:[3,4],\n                      mb:[3,3],\n                      mr:[0,'2%'],\n                      style:{\n                        flex: this.props.isMobile ? '1 1 100%' : '0 0 31%'\n                      },\n                      alignItems:'center',\n                      flexDirection:'column',\n                      justifyContent:'center'\n                    }}\n                    handleClick={ e => this.props.goToSection(this.props.selectedSection.route+'/'+tool.route) }\n                  >\n                    <Text\n                      fontSize={[3,4]}\n                      textAlign={'center'}\n                    >\n                      {tool.label}\n                    </Text>\n                    <Flex\n                      justifyContent={'center'}\n                    >\n                      {\n                        tool.image ? (\n                          <Image\n                            my={[0,2]}\n                            height={'2.2em'}\n                            src={tool.image}\n                          />\n                        ) : tool.icon && (\n                          <Icon\n                            my={[0,2]}\n                            size={'3em'}\n                            name={tool.icon}\n                          />\n                        )\n                      }\n                    </Flex>\n                    <Text\n                      fontSize={[2,2]}\n                      textAlign={'center'}\n                      dangerouslySetInnerHTML={{\n                        __html:tool.desc\n                      }}\n                    >\n                    </Text>\n                  </DashboardCard>\n                ) )\n              }\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Utils;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n\nclass FundsOverview extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadAssetField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadAssetField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    // console.log(govTokensTotalBalance,govTokensUserBalance,govTokensTotalBalanceTooltip);\n\n    // const govTokensTotalApr = govTokensAprs ? Object.values(govTokensAprs).reduce( (totApr,govTokenApr) => {\n    //   return totApr.plus(this.functionsUtil.BNify(govTokenApr));\n    // },this.functionsUtil.BNify(0)) : null;\n\n    // const govTokensTotalAprTooltip = govTokensAprs ? Object.keys(govTokensAprs).map( govToken => {\n    //   const apr = govTokensAprs[govToken];\n    //   if (apr.gt(0)){\n    //     return `${govToken}: ${apr.toFixed(2)}%`;\n    //   }\n    //   return null;\n    // }).filter(v => (v !== null)) : null;\n\n    /*\n    const govTokensDistributionTooltip = govTokensUserDistribution ? Object.keys(govTokensUserDistribution).map( govToken => {\n      const speed = govTokensUserDistribution[govToken];\n      if (speed.gt(0)){\n        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n        return `+${speed.toFixed(4)} ${govToken}/${distributionFrequency}`;\n      }\n      return null;\n    }).filter(v => (v !== null)) : null;\n    */\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquity\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              chartToken={this.props.selectedToken}\n              enabledTokens={[this.props.selectedToken]}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLent',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )/* : this.state.govTokensUserBalance && Object.keys(this.state.govTokensUserBalance).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + ${this.state.govTokensTotalBalance.toFixed(4)}\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalBalanceTooltip.join(' / ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'apy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n                /*\n                this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length===1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      Object.keys(this.state.govTokensAprs).map((govToken,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          ml={govTokenIndex ? 2 : 0}\n                          key={`govToken_${govToken}`}\n                        >\n                          {this.state.govTokensAprs[govToken].toFixed(2)}% {govToken}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                ) : this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>1 ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      + {this.state.govTokensTotalApr.toFixed(2)}%\n                    </Text>\n                    <Tooltip\n                      placement={'top'}\n                      message={this.state.govTokensTotalAprTooltip.join('; ')}\n                    >\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        color={'cellTitle'}\n                        name={\"InfoOutline\"}\n                      />\n                    </Tooltip>\n                  </Flex>\n                ) : null\n                */\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Risk Score\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'score',\n                    props:{\n                      decimals:1,\n                      fontWeight:300,\n                      fontSize:['1.8em','1.9em'],\n                      color:this.props.theme.colors.counter,\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverview;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Icon, Checkbox, Box, Link, Input, Tooltip } from \"rimble-ui\";\n\nclass CurveRedeem extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    tokenConfig:null,\n    unevenAmounts:null,\n    selectedToken:null,\n    availableTokens:null,\n    buttonDisabled:false,\n    showMaxSlippage:false,\n    redeemUnderlying:true,\n    curveTokenConfig:null,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    curveTokensAmounts:null,\n    fastBalanceSelector:null,\n    redeemUnevenAmounts:false,\n    curveRedeemableIdleTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.initToken();\n  }\n\n  showMaxSlippage(){\n    this.setState({\n      showMaxSlippage:true\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  async calculateSlippage(max_slippage=null){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (!inputValue || inputValue.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    let withdrawSlippage = null;\n    let curveTokensAmounts = null;\n    let curveIdleTokensAmounts = null;\n    if (this.state.redeemUnevenAmounts){\n      [\n        curveTokensAmounts,\n        curveIdleTokensAmounts\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokensAmounts(this.props.account,normalizedAmount,true),\n        this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,normalizedAmount)\n      ]);\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false,curveIdleTokensAmounts);\n    } else {\n      withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,false);\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const redeemableBalance = inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.times(100).plus(this.state.maxSlippage || this.functionsUtil.BNify(0)).div(100)));\n      curveTokensAmounts = {};\n      curveTokensAmounts[this.state.selectedToken] = redeemableBalance;\n    }\n\n    if (withdrawSlippage){\n      withdrawSlippage = withdrawSlippage.times(100);\n    }\n\n    this.setState({\n      withdrawSlippage,\n      curveTokensAmounts,\n      curveIdleTokensAmounts\n    });\n\n    // Add max slippage but don't save in state\n    if (withdrawSlippage && max_slippage){\n      withdrawSlippage = withdrawSlippage.plus(max_slippage);\n    }\n\n    return withdrawSlippage;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.tokenConfig.idle.token !== this.props.tokenConfig.idle.token;\n    if (tokenChanged){\n      await this.initToken();\n    }\n\n    const redeemUnevenAmountsChanged = prevState.redeemUnevenAmounts !== this.state.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    const inputChanged = prevState.inputValue !== this.state.inputValue;\n    const maxSlippageChanged = parseFloat(prevState.maxSlippage) !== parseFloat(this.state.maxSlippage);\n    const tokenConfigChanged = JSON.stringify(prevState.tokenConfig) !== JSON.stringify(this.state.tokenConfig);\n    if (inputChanged || tokenConfigChanged || maxSlippageChanged){\n      this.calculateSlippage();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.loadSelectedTokenConfig();\n    }\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    let buttonDisabled = false;\n\n    // if (this.state.redeemUnevenAmounts){\n      buttonDisabled = !amount || amount.gt(this.state.curveTokenBalance);\n    // } else {\n      // buttonDisabled = !amount || amount.gt(this.state.redeemableBalance);\n    // }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    let inputValue = null;\n\n    // if (this.state.redeemUnevenAmounts){\n    inputValue = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n    // } else {\n      // inputValue = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n    // }\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  selectDestinationToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  async loadSelectedTokenConfig(){\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const tokenConfig = this.state.availableTokens[this.state.selectedToken];\n    const curveTokenConfig = curveConfig.availableTokens[tokenConfig.idle.token];\n    this.setState({\n      tokenConfig,\n      curveTokenConfig\n    });\n  }\n\n  async initToken(){\n    const [curvePoolContract,curveSwapContract] = await Promise.all([\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract()\n    ]);\n\n    const [\n      curveTokenPrice,\n      curveTokenBalance,\n      curveRedeemableIdleTokens,\n    ] = await Promise.all([\n      this.functionsUtil.getCurveTokenPrice(),\n      this.functionsUtil.getCurveTokenBalance(this.props.account),\n      this.functionsUtil.getCurveRedeemableIdleTokens(this.props.account)\n    ]);\n\n    const unevenAmounts = [];\n    const redeemableBalance = curveTokenBalance ? curveTokenBalance.times(curveTokenPrice) : this.functionsUtil.BNify(0);\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const selectedToken = Object.keys(availableTokens)[0];\n\n    this.setState({\n      selectedToken,\n      unevenAmounts,\n      curveTokenPrice,\n      availableTokens,\n      curvePoolContract,\n      curveSwapContract,\n      curveTokenBalance,\n      redeemableBalance,\n      curveRedeemableIdleTokens\n    });\n  }\n\n  async redeem(){\n\n    if (!this.state.curveTokenBalance){\n      return false;\n    }\n\n    const callbackRedeem = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveRedeem`,\n        eventAction: this.props.selectedToken,\n        eventValue: this.state.curveTokenBalance.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackRedeem === 'function' && txSucceeded){\n        this.props.callbackRedeem(tx);\n      }\n    };\n\n    const callbackReceiptRedeem = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.curveSwapContract.name;\n    const withdrawSlippage = await this.calculateSlippage(this.state.maxSlippage);\n    const max_slippage = this.functionsUtil.BNify(this.state.maxSlippage).div(100);\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    // const curveTokenBalance = this.functionsUtil.normalizeTokenAmount(this.state.curveTokenBalance,this.state.curvePoolContract.decimals);\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n    if (this.state.redeemUnevenAmounts){\n      const min_amounts = this.state.redeemUnderlying ? await this.functionsUtil.getCurveTokensAmounts(this.props.account,_amount,false,true) : await this.functionsUtil.getCurveIdleTokensAmounts(this.props.account,_amount,max_slippage);\n      console.log('remove_liquidity',_amount.toString(),min_amounts);\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    } else {\n      const coin_index = this.state.curveTokenConfig.migrationParams.coinIndex;\n      const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n      const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.times(curveTokenPrice).minus(inputValue.times(withdrawSlippage.div(100))),this.state.tokenConfig.decimals);\n      // const min_amount = this.functionsUtil.normalizeTokenAmount(inputValue.minus(inputValue.times(withdrawSlippage.div(100))),this.state.curveTokenConfig.decimals);\n      // let _token_amount = await this.functionsUtil.getCurveTokenAmount(amounts,false);\n      // _token_amount = this.functionsUtil.BNify(_token_amount).isGreaterThan(curveTokenBalance) ? curveTokenBalance : this.functionsUtil.BNify(_token_amount);\n\n      console.log('remove_liquidity_one_coin',_amount, coin_index, min_amount);\n\n      // debugger;\n      this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_one_coin', [_amount, coin_index, min_amount, this.state.redeemUnderlying], null, callbackRedeem, callbackReceiptRedeem);\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  getFastBalanceSelector(){\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n\n  render() {\n\n    const showSlippage = !this.state.buttonDisabled && this.state.withdrawSlippage;\n    const curveTokenName = this.functionsUtil.getGlobalConfig(['curve','poolContract','token']);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            !this.state.curveTokenBalance ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3,\n                  minHeight:'195px',\n                  style:{\n                    display:'flex',\n                    alignItems:'center',\n                    justifyContent:'center'\n                  }\n                }}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Checking Curve Pool...'}\n                />\n              </DashboardCard>\n            ) : this.state.processing.loading ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <TxProgressBar\n                    web3={this.props.web3}\n                    hash={this.state.processing.txHash}\n                    endMessage={`Finalizing redeem request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                    waitText={ this.props.waitText ? this.props.waitText : 'Redeem estimated in'}\n                  />\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    mb:2\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'1.8em'}\n                      color={'cellText'}\n                      name={'FileUpload'}\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      Withdraw from the Curve Pool in a specific token or in uneven amounts of tokens (with no slippage).\n                    </Text>\n                    <Flex\n                      mt={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Checkbox\n                        required={false}\n                        label={`Redeem with no slippage`}\n                        checked={this.state.redeemUnevenAmounts}\n                        onChange={ e => this.toggleUnevenAmounts(e.target.checked) }\n                      />\n                      <Tooltip\n                        placement={'top'}\n                        message={`You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.`}\n                      >\n                        <Icon\n                          size={'1em'}\n                          color={'cellTitle'}\n                          name={\"InfoOutline\"}\n                        />\n                      </Tooltip>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n                {\n                  !this.state.redeemUnevenAmounts/* && (!this.props.selectedToken || (this.state.showMaxSlippage && showSlippage))*/ && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      {\n                        this.state.tokenConfig && \n                          <Box\n                            width={1}\n                          >\n                            <Text\n                              mb={1}\n                            >\n                              Select destination token:\n                            </Text>\n                            <AssetSelector\n                              {...this.props}\n                              id={'token-from'}\n                              showBalance={false}\n                              tokenConfig={this.state.tokenConfig}\n                              selectedToken={this.state.selectedToken}\n                              availableTokens={this.state.availableTokens}\n                              onChange={this.selectDestinationToken.bind(this)}\n                            />\n                          </Box>\n                      }\n                    </Box>\n                  )\n                }\n                {\n                  this.state.curveTokensAmounts && !this.state.buttonDisabled && (\n                    <DashboardCard\n                      cardProps={{\n                        mt:1,\n                        mb:2,\n                        py:2,\n                        px:1\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You will receive:\n                        </Text>\n                        <Flex\n                          mt={2}\n                          width={1}\n                          boxShadow={0}\n                          style={{\n                            flexWrap:'wrap'\n                          }}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                          >\n                            {\n                              Object.keys(this.state.curveTokensAmounts).map( token => {\n                                const balance = this.state.curveTokensAmounts[token];\n                                return (\n                                  <Flex\n                                    mb={1}\n                                    mx={1}\n                                    width={'auto'}\n                                    flexDirection={'row'}\n                                    key={`tokenBalance_${token}`}\n                                    justifyContent={'flex-start'}\n                                  >\n                                    <AssetField\n                                      token={token}\n                                      tokenConfig={{\n                                        token:token\n                                      }}\n                                      fieldInfo={{\n                                        name:'icon',\n                                        props:{\n                                          mr:1,\n                                          width:['1.4em','1.6em'],\n                                          height:['1.4em','1.6em']\n                                        }\n                                      }}\n                                    />\n                                    <SmartNumber\n                                      ml={1}\n                                      fontSize={[0,1]}\n                                      fontWeight={500}\n                                      maxPrecision={4}\n                                      color={'cellText'}\n                                      number={balance.toString()}\n                                    />\n                                  </Flex>\n                                );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.showMaxSlippage && showSlippage && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Text>\n                          Choose max slippage:\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`Max additional slippage on top of the one shown below`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1em'}\n                            color={'cellTitle'}\n                            name={\"InfoOutline\"}\n                          />\n                        </Tooltip>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [0.2,0.5,1,5].map( slippage => (\n                            <FastBalanceSelector\n                              cardProps={{\n                                p:1\n                              }}\n                              textProps={{\n                                fontSize:1\n                              }}\n                              percentage={slippage}\n                              key={`selector_${slippage}`}\n                              onMouseDown={()=>this.setMaxSlippage(slippage)}\n                              isActive={this.state.maxSlippage === parseFloat(slippage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                    </Box>\n                  )\n                }\n                <Flex\n                  mb={3}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    mb={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'flex-end'}\n                  >\n                    {\n                      showSlippage && (\n                        <Flex\n                          width={1}\n                          maxWidth={'40%'}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            textAlign={'right'}\n                            style={{\n                              whiteSpace:'nowrap'\n                            }}\n                            color={ parseFloat(this.state.withdrawSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                          >\n                            {\n                              parseFloat(this.state.withdrawSlippage.toFixed(3)) === 0 ?\n                                'No Slippage'\n                              : `${ this.state.withdrawSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.withdrawSlippage.abs().toFixed(3)}%`\n                            }\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={ this.state.redeemUnevenAmounts ? `You will receive an uneven amounts of ${Object.keys(this.state.availableTokens).join(', ')} proportional to the token availailability in the Curve pool.` : this.state.withdrawSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                          {\n                            !this.state.redeemUnevenAmounts &&\n                              <Link\n                                ml={1}\n                                color={'copyColor'}\n                                hoverColor={'primary'}\n                                onClick={this.showMaxSlippage.bind(this)}\n                              >\n                                change\n                              </Link>\n                          }\n                        </Flex>\n                      )\n                    }\n                    <Flex\n                      width={1}\n                      maxWidth={'60%'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Link\n                        fontSize={1}\n                        fontWeight={3}\n                        color={'dark-gray'}\n                        textAlign={'right'}\n                        hoverColor={'copyColor'}\n                        onClick={ (e) => this.setFastBalanceSelector(100) }\n                        style={{\n                          maxWidth:'100%',\n                          overflow:'hidden',\n                          whiteSpace:'nowrap',\n                          textOverflow:'ellipsis'\n                        }}\n                      >\n                        {this.state.curveTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {curveTokenName}\n                      </Link>\n                    </Flex>\n                  </Flex>\n                  <Input\n                    min={0}\n                    type={\"number\"}\n                    required={true}\n                    height={'3.4em'}\n                    borderRadius={2}\n                    fontWeight={500}\n                    boxShadow={'none !important'}\n                    placeholder={`Insert amount`}\n                    onChange={this.changeInputValue.bind(this)}\n                    border={`1px solid ${this.props.theme.colors.divider}`}\n                    value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                  />\n                  <Flex\n                    mt={2}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    {\n                      [25,50,75,100].map( percentage => (\n                        <FastBalanceSelector\n                          percentage={percentage}\n                          key={`selector_${percentage}`}\n                          onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                          isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  justifyContent={'center'}\n                >\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2],\n                      disabled:this.state.buttonDisabled\n                    }}\n                    handleClick={this.redeem.bind(this)}\n                  >\n                    Redeem\n                  </RoundButton>\n                </Flex>\n              </Flex>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveRedeem;","import Migrate from '../Migrate/Migrate';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\n// import ExtLink from '../ExtLink/ExtLink';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport RoundButton from '../RoundButton/RoundButton';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Text, Input, Box, Icon, Link, Checkbox, Tooltip, Image } from \"rimble-ui\";\n\nclass DepositRedeem extends Component {\n\n  state = {\n    txError: {},\n    tokenAPY: '-',\n    inputValue: {},\n    processing: {},\n    curveAPY: null,\n    totalAUM: null,\n    canRedeem: false,\n    maxSlippage: 0.2,\n    canDeposit: false,\n    action: 'deposit',\n    directMint: false,\n    activeModal: null,\n    tokenGovTokens: {},\n    showBuyFlow: false,\n    maxUnlentPerc: null,\n    unlentBalance: null,\n    tokenApproved: false,\n    skipMigration: false,\n    redeemSkipGov: false,\n    showRedeemFlow: false,\n    contractPaused: false,\n    buttonDisabled: false,\n    canRedeemCurve: false,\n    erc20ForwarderTx: null,\n    signedParameters: null,\n    minAmountForMint: null,\n    showMaxSlippage: false,\n    redeemGovTokens: false,\n    canDepositCurve: false,\n    redeemSkipGovTokens: [],\n    fastBalanceSelector: {},\n    actionProxyContract: {},\n    migrationEnabled: false,\n    componentMounted: false,\n    curveTokenBalance: null,\n    agreeSkipGovTokens: false,\n    redeemCurveEnabled: false,\n    depositCurveBalance: null,\n    depositCurveEnabled: true,\n    showAdvancedOptions: false,\n    skipGovTokensGasSave: null,\n    depositCurveSlippage: null,\n    erc20ForwarderContract: {},\n    erc20ForwarderEnabled: false,\n    showETHWrapperEnabled: false,\n    skipGovTokensGasSaveUSD: null,\n    metaTransactionsEnabled: true,\n    skippedGovTokensBalance: null,\n    minAmountForMintReached: false,\n    loadingErc20ForwarderTx: false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadProxyContracts();\n  }\n\n  async componentDidMount() {\n    this.loadTokenInfo();\n  }\n\n  setShowRedeemFlow = (showRedeemFlow) => {\n    this.setState({\n      showRedeemFlow\n    });\n  }\n\n  setShowBuyFlow = (showBuyFlow) => {\n    this.setState({\n      showBuyFlow\n    });\n  }\n\n  toggleShowAdvancedOptions = showAdvancedOptions => {\n    this.setState((prevState) => ({\n      showAdvancedOptions: !prevState.showAdvancedOptions\n    }));\n  }\n\n  toggleSkipMigration = skipMigration => {\n    this.setState({\n      skipMigration\n    });\n  }\n\n  toggleRedeemCurve = redeemCurveEnabled => {\n    this.setState({\n      redeemCurveEnabled\n    });\n  }\n\n  toggleDepositCurve = depositCurveEnabled => {\n    this.setState({\n      depositCurveEnabled\n    });\n  }\n\n  toggleShowETHWrapper = showETHWrapperEnabled => {\n    this.setState({\n      showETHWrapperEnabled\n    });\n  }\n\n  toggleAgreeSkipGovTokens = agreeSkipGovTokens => {\n    this.setState({\n      agreeSkipGovTokens\n    });\n  }\n\n  toggleSkipMint = (directMint) => {\n    this.setState({\n      directMint\n    });\n  }\n\n  toggleRedeemGovTokens = (redeemGovTokens) => {\n    this.setState({\n      redeemGovTokens,\n      redeemSkipGovTokens: [],\n      agreeSkipGovTokens: false,\n      skippedGovTokensBalance: this.functionsUtil.BNify(0),\n      redeemSkipGov: redeemGovTokens ? false : this.state.redeemSkipGov\n    });\n  }\n\n  toggleRedeemSkipGov = (redeemSkipGov) => {\n    this.setState({\n      redeemSkipGov,\n      redeemSkipGovTokens: [],\n      agreeSkipGovTokens: false,\n      skippedGovTokensBalance: this.functionsUtil.BNify(0),\n      redeemGovTokens: redeemSkipGov ? false : this.state.redeemGovTokens\n    });\n  }\n\n  getSkippedGovTokensFlags = async () => {\n    const govTokensIndexes = await this.functionsUtil.getGovTokensIndexes(this.props.account, this.props.tokenConfig);\n    const govTokensFlags = Object.keys(govTokensIndexes).map(token => {\n      return this.state.redeemSkipGovTokens.includes(token);\n    });\n    // console.log('getSkippedGovTokensFlags',govTokensIndexes,govTokensFlags);\n    return govTokensFlags;\n  }\n\n  calculateSkippedGovTokens = async () => {\n    let skippedGovTokensBalance = this.functionsUtil.BNify(0);\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats', 'tokens', 'DAI']);\n\n    await this.functionsUtil.asyncForEach(this.state.redeemSkipGovTokens, async (govToken) => {\n      const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens', govToken]);\n      const govTokenPrice = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n      const skippedAmount = this.props.govTokensUserBalances[govToken].times(govTokenPrice);\n      skippedGovTokensBalance = skippedGovTokensBalance.plus(skippedAmount);\n    });\n\n    const _skipGovTokenRedeem = await this.getSkippedGovTokensFlags();\n    const WETHTokenConfig = this.functionsUtil.getGlobalConfig(['stats', 'tokens', 'WETH']);\n\n    const [\n      wethPrice,\n      redeemGasUsage,\n      skipGovRedeemGasUsage\n    ] = await Promise.all([\n      this.functionsUtil.getUniswapConversionRate(DAITokenConfig, WETHTokenConfig),\n      this.functionsUtil.estimateMethodGasUsage(this.props.tokenConfig.idle.token, 'redeemIdleToken', [this.functionsUtil.normalizeTokenAmount(this.props.idleTokenBalance, this.props.tokenConfig.decimals)], this.props.account),\n      this.functionsUtil.estimateMethodGasUsage(this.props.tokenConfig.idle.token, 'redeemIdleTokenSkipGov', [this.functionsUtil.normalizeTokenAmount(this.props.idleTokenBalance, this.props.tokenConfig.decimals), _skipGovTokenRedeem], this.props.account)\n    ]);\n\n    const skipGovTokensGasSave = redeemGasUsage && skipGovRedeemGasUsage ? redeemGasUsage.minus(skipGovRedeemGasUsage) : this.functionsUtil.BNify(0);\n    const skipGovTokensGasSaveUSD = skipGovTokensGasSave ? skipGovTokensGasSave.times(wethPrice) : this.functionsUtil.BNify(0);\n\n    this.setState({\n      skipGovTokensGasSave,\n      skipGovTokensGasSaveUSD,\n      skippedGovTokensBalance\n    });\n    return skippedGovTokensBalance;\n  }\n\n  setRedeemSkipGovTokens = (token, checked) => {\n    this.setState((prevState) => {\n      const redeemSkipGovTokens = Object.assign([], prevState.redeemSkipGovTokens);\n      if (!checked && redeemSkipGovTokens.includes(token)) {\n        redeemSkipGovTokens.splice(redeemSkipGovTokens.indexOf(token), 1);\n      } else if (checked && !redeemSkipGovTokens.includes(token)) {\n        redeemSkipGovTokens.push(token);\n      }\n      return {\n        redeemSkipGovTokens\n      };\n    }, () => {\n      this.calculateSkippedGovTokens();\n    });\n  }\n\n  toggleErc20ForwarderEnabled = (erc20ForwarderEnabled) => {\n    const newState = {\n      erc20ForwarderEnabled\n    };\n\n    this.setState(newState, () => {\n      this.cancelTransaction();\n    });\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  async loadProxyContracts() {\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const actions = ['deposit', 'redeem'];\n    const newState = {\n      actionProxyContract: {},\n      erc20ForwarderContract: {}\n    };\n\n    await this.functionsUtil.asyncForEach(actions, async (action) => {\n      let mintProxyContractInfo = null;\n      const depositErc20ForwarderEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', action, 'erc20ForwarderEnabled']);\n\n      if (depositErc20ForwarderEnabled) {\n        mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract', 'methods', action, 'erc20ForwarderProxyContract', 'forwarder']);\n\n        await this.props.initContract(mintProxyContractInfo.name, mintProxyContractInfo.address, mintProxyContractInfo.abi);\n\n        // Init contract for erc20 forwarder\n        const erc20ForwarderContractInfo = this.functionsUtil.getGlobalConfig(['contract', 'methods', action, 'erc20ForwarderProxyContract', 'tokens', this.props.selectedToken]);\n        if (erc20ForwarderContractInfo) {\n          mintProxyContractInfo = erc20ForwarderContractInfo;\n          const erc20ForwarderContract = await this.props.initContract(erc20ForwarderContractInfo.name, erc20ForwarderContractInfo.address, erc20ForwarderContractInfo.abi);\n          if (erc20ForwarderContract){\n            newState.erc20ForwarderContract[action] = erc20ForwarderContractInfo;\n            newState.erc20ForwarderContract[action].contract = erc20ForwarderContract.contract;\n          }\n        }\n      }\n\n      if (!mintProxyContractInfo) {\n        mintProxyContractInfo = this.functionsUtil.getGlobalConfig(['contract', 'methods', action, 'proxyContract']);\n      }\n\n      const hasProxyContract = mintProxyContractInfo && mintProxyContractInfo.enabled;\n      newState.actionProxyContract[action] = hasProxyContract ? mintProxyContractInfo : null;\n      if (hasProxyContract) {\n        const proxyContract = await this.props.initContract(mintProxyContractInfo.name, mintProxyContractInfo.address, mintProxyContractInfo.abi);\n        if (proxyContract){\n          newState.actionProxyContract[action].contract = proxyContract.contract;\n          newState.actionProxyContract[action].approved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken, mintProxyContractInfo.address, this.props.account);\n        }\n      }\n    });\n\n    // console.log('loadProxyContracts',newState);\n\n    return await this.setState(newState);\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadAPY() {\n    const tokenAprs = await this.functionsUtil.getTokenAprs(this.props.tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      const tokenAPY = this.functionsUtil.BNify(tokenAprs.avgApy).toFixed(2);\n\n      let curveAPY = null;\n      if (this.state.canDepositCurve) {\n        curveAPY = await this.functionsUtil.getCurveAPY();\n        // console.log('curveAPY',curveAPY);\n        if (curveAPY) {\n          curveAPY = curveAPY.plus(tokenAPY);\n        }\n      }\n      this.setState({\n        tokenAPY,\n        curveAPY\n      });\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.props.tokenBalance);\n\n    if (this.props.tokenBalance === null) {\n      return false;\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const erc20ForwarderEnabledChanged = prevState.erc20ForwarderEnabled !== this.state.erc20ForwarderEnabled;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance && this.props.tokenBalance !== null;\n\n    if (accountChanged || tokenChanged || tokenBalanceChanged || erc20ForwarderEnabledChanged || contractsInitialized) {\n      await this.loadProxyContracts();\n      this.loadTokenInfo();\n      return false;\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n\n    if (actionChanged || fastBalanceSelectorChanged) {\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputValueChanged) {\n      // this.checkMinAmountForMint();\n    }\n\n    const redeemSkipGovChanged = prevState.redeemSkipGov !== this.state.redeemSkipGov;\n    const redeemGovTokensChanged = prevState.redeemGovTokens !== this.state.redeemGovTokens;\n    const agreeSkipGovTokensChanged = prevState.agreeSkipGovTokens !== this.state.agreeSkipGovTokens;\n    const redeemSkipGovTokensChanged = JSON.stringify(prevState.redeemSkipGovTokens) !== JSON.stringify(this.state.redeemSkipGovTokens);\n\n    if (redeemGovTokensChanged || actionChanged || redeemSkipGovTokensChanged || redeemSkipGovChanged || agreeSkipGovTokensChanged) {\n      this.checkButtonDisabled();\n    }\n\n    const depositCurveChanged = prevState.depositCurveEnabled !== this.state.depositCurveEnabled;\n    const metaTransactionsChanged = prevState.metaTransactionsEnabled !== this.state.metaTransactionsEnabled;\n    if (metaTransactionsChanged || depositCurveChanged) {\n      const tokenApproved = await this.checkTokenApproved();\n      this.setState({\n        tokenApproved\n      });\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged) {\n      this.calculateCurveSlippage();\n    }\n  }\n\n  async checkMinAmountForMint() {\n    let showPoolPerc = false;\n    let totalAUM = this.state.totalAUM;\n    let maxUnlentPerc = this.state.maxUnlentPerc;\n    const isRisk = this.props.selectedStrategy === 'risk';\n    const inputValue = this.functionsUtil.BNify(this.state.inputValue[this.state.action]);\n\n    if (inputValue.gt(this.props.tokenBalance)) {\n      return false;\n    }\n\n    const convertedAmount = await this.functionsUtil.convertTokenBalance(inputValue, this.props.selectedToken, this.props.tokenConfig, isRisk);\n    let minAmountForMint = this.functionsUtil.BNify(this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'minAmountForMint']));\n    let minAmountForMintReached = convertedAmount.gte(minAmountForMint);\n\n    // Check token minAmountForMint\n    if (minAmountForMintReached) {\n      if (this.props.tokenConfig.deposit && this.props.tokenConfig.deposit.minAmountForMint && convertedAmount.lt(this.props.tokenConfig.deposit.minAmountForMint)) {\n        minAmountForMintReached = false;\n      } else {\n        [\n          maxUnlentPerc,\n          totalAUM\n        ] = await Promise.all([\n          maxUnlentPerc || this.functionsUtil.genericContractCall(this.props.tokenConfig.idle.token, 'maxUnlentPerc'),\n          totalAUM || this.functionsUtil.loadAssetField('pool', this.props.selectedToken, this.props.tokenConfig, this.props.account)\n        ]);\n\n        if (maxUnlentPerc && totalAUM) {\n          const depositPerc = inputValue.div(totalAUM).times(100);\n          maxUnlentPerc = this.functionsUtil.BNify(maxUnlentPerc);\n          const maxUnlentPercFormatted = maxUnlentPerc.div(1e3).times(2);\n          if (depositPerc.lt(maxUnlentPercFormatted)) {\n            minAmountForMintReached = false;\n          } else if (totalAUM.times(maxUnlentPercFormatted.div(100)).gt(minAmountForMint)) {\n            showPoolPerc = true;\n            minAmountForMint = totalAUM.times(maxUnlentPercFormatted.div(100));\n          }\n        }\n      }\n    }\n\n    this.setState({\n      totalAUM,\n      showPoolPerc,\n      maxUnlentPerc,\n      minAmountForMint,\n      minAmountForMintReached\n    });\n  }\n\n  async calculateCurveSlippage() {\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)) {\n      return false;\n    }\n\n    const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve', 'poolContract']);\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount, curvePoolContractInfo.decimals);\n    const newState = {};\n\n    switch (this.state.action) {\n      case 'deposit':\n        newState.depositCurveBalance = amount;\n        newState.depositCurveSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token, normalizedAmount, true);\n        break;\n      case 'redeem':\n        // newState.redeemBalance = amount;\n        // newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizedAmount,true);\n        break;\n      default:\n        break;\n    }\n    // console.log('calculateCurveSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  checkUseProxyContract = () => {\n    const proxyContract = this.state.actionProxyContract[this.state.action];\n    const depositErc20ForwarderEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'erc20ForwarderEnabled']) && this.state.erc20ForwarderEnabled;\n    const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'metaTransactionsEnabled']) && this.state.metaTransactionsEnabled;\n    return ((depositErc20ForwarderEnabled || depositMetaTransactionsEnabled) && proxyContract && this.props.biconomy);\n  }\n\n  approveContract = async (callbackApprove, callbackReceiptApprove) => {\n    if (this.state.depositCurveEnabled) {\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve', 'depositContract']);\n      this.functionsUtil.enableERC20(this.props.selectedToken, curveDepositContract.address, callbackApprove, callbackReceiptApprove);\n    } else {\n      // Check Proxy Contract Approved for Deposit with Biconomy\n      const useProxyContract = this.checkUseProxyContract();\n      if (useProxyContract) {\n        const proxyContract = this.state.actionProxyContract[this.state.action];\n        this.functionsUtil.enableERC20(this.props.selectedToken, proxyContract.address, callbackApprove, callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.selectedToken, this.props.tokenConfig.idle.address, callbackApprove, callbackReceiptApprove);\n      }\n    }\n  }\n\n  checkTokenApproved = async () => {\n    let tokenApproved = false;\n    if (this.state.depositCurveEnabled) {\n      const curveDepositContract = this.functionsUtil.getGlobalConfig(['curve', 'depositContract']);\n      tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken, curveDepositContract.address, this.props.account);\n    } else {\n      // Check Proxy Contract Approved for Deposit with Biconomy\n      const useProxyContract = this.checkUseProxyContract();\n      if (useProxyContract) {\n        // Check for Permit Deposit\n        const depositErc20ForwarderEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'erc20ForwarderEnabled']) && this.state.erc20ForwarderEnabled;\n        if (depositErc20ForwarderEnabled) {\n          const permitEnabled = this.functionsUtil.getGlobalConfig(['permit', this.props.selectedToken]);\n          if (permitEnabled) {\n            return true;\n          }\n        }\n        // Check proxy contract approved\n        const proxyContract = this.state.actionProxyContract[this.state.action];\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken, proxyContract.address, this.props.account);\n        // console.log('tokenApproved 1',this.props.selectedToken, proxyContract.address, this.props.account, tokenApproved);\n      } else {\n        tokenApproved = await this.functionsUtil.checkTokenApproved(this.props.selectedToken, this.props.tokenConfig.idle.address, this.props.account);\n        // console.log('tokenApproved 2',this.props.selectedToken, this.props.tokenConfig.idle.address, this.props.account, tokenApproved);\n      }\n    }\n\n    return tokenApproved;\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = await this.checkTokenApproved();\n\n    if (tokenApproved) {\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve: {\n            txHash: null,\n            loading: false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx, error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.props.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error) {\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error') {\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      // console.log('callbackApprove',tx,tx.status === 'success');\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve: {\n            txHash: null,\n            loading: false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve: {\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.approveContract(callbackApprove, callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve: {\n          txHash: null,\n          loading: true\n        }\n      }\n    }));\n  }\n\n  loadTokenInfo = async () => {\n\n    if (this.state.componentMounted) {\n      this.setState({\n        componentMounted: false\n      });\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve', 'availableTokens', this.props.tokenConfig.idle.token]);\n    const curveTokenEnabled = curveConfig.enabled && curveTokenConfig && curveTokenConfig.enabled;\n\n    const [\n      tokenApproved,\n      contractPaused,\n      curveSwapContract,\n      curveDepositContract,\n      unlentBalance,\n      { migrationEnabled },\n      curveTokenBalance,\n    ] = await Promise.all([\n      this.checkTokenApproved(),\n      this.functionsUtil.checkContractPaused(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract(),\n      this.functionsUtil.getUnlentBalance(this.props.tokenConfig),\n      this.functionsUtil.checkMigration(this.props.tokenConfig, this.props.account),\n      curveTokenEnabled ? this.functionsUtil.getCurveTokenBalance(this.props.account) : null\n    ]);\n\n    const canDeposit = this.props.tokenBalance && this.functionsUtil.BNify(this.props.tokenBalance).gt(0);\n    const canRedeem = this.props.idleTokenBalance && this.functionsUtil.BNify(this.props.idleTokenBalance).gt(0);\n\n    const canDepositCurve = curveTokenEnabled && canDeposit;\n    const depositCurveEnabled = canDepositCurve;\n\n    const showETHWrapperEnabled = this.props.selectedToken === 'WETH' && (this.state.showETHWrapperEnabled || !canDeposit);\n\n    const canRedeemCurve = curveTokenEnabled && curveTokenBalance && curveTokenBalance.gt(0);\n    const redeemCurveEnabled = canRedeemCurve;\n\n    const tokenGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n    const newState = { ...this.state };\n\n    // Check curve deposit enabled\n    if (newState.depositCurveEnabled && !curveTokenEnabled) {\n      newState.depositCurveEnabled = false;\n    }\n\n    newState.canRedeem = canRedeem;\n    newState.canDeposit = canDeposit;\n    newState.unlentBalance = unlentBalance;\n    newState.tokenApproved = tokenApproved;\n    newState.tokenGovTokens = tokenGovTokens;\n    newState.contractPaused = contractPaused;\n    newState.canRedeemCurve = canRedeemCurve;\n    newState.canDepositCurve = canDepositCurve;\n    newState.migrationEnabled = migrationEnabled;\n    newState.curveTokenBalance = curveTokenBalance;\n    newState.curveSwapContract = curveSwapContract;\n    newState.redeemCurveEnabled = redeemCurveEnabled;\n    newState.depositCurveEnabled = depositCurveEnabled;\n    newState.curveDepositContract = curveDepositContract;\n    newState.showETHWrapperEnabled = showETHWrapperEnabled;\n\n    newState.txError = {\n      redeem: false,\n      deposit: false\n    };\n    newState.processing = {\n      redeem: {\n        txHash: null,\n        loading: false\n      },\n      deposit: {\n        txHash: null,\n        loading: false\n      },\n      approve: {\n        txHash: null,\n        loading: false\n      },\n      boost: {\n        txHash: null,\n        loading: false\n      }\n    };\n    newState.inputValue = {\n      boost: null,\n      redeem: null,\n      deposit: null\n    };\n    newState.fastBalanceSelector = {\n      boost: null,\n      redeem: null,\n      deposit: null\n    };\n\n    newState.componentMounted = true;\n\n    this.setState(newState, () => {\n      this.checkAction();\n      this.loadAPY();\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      erc20ForwarderTx: null,\n      loadingErc20ForwarderTx: false,\n      processing: {\n        ...prevState.processing,\n        approve: {\n          txHash: null,\n          loading: false\n        },\n        [this.state.action]: {\n          txHash: null,\n          loading: false\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const redeemGovTokens = this.state.redeemGovTokens;\n    const selectedPercentage = this.getFastBalanceSelector();\n    const inputValue = this.state.inputValue[this.state.action];\n    const redeemSkipGov = this.state.redeemSkipGov && this.state.redeemSkipGovTokens.length > 0 && this.state.agreeSkipGovTokens;\n\n    const depositErc20ForwarderEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'erc20ForwarderEnabled']) && this.state.erc20ForwarderEnabled;\n    const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'metaTransactionsEnabled']) && this.state.metaTransactionsEnabled;\n\n    let loading = true;\n\n    switch (this.state.action) {\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)) {\n          return false;\n        }\n\n        if (!this.state.tokenApproved) {\n          return this.approveToken();\n        }\n\n        if (localStorage) {\n          this.functionsUtil.setLocalStorage('redirectToFundsAfterLogged', 0);\n        }\n\n        this.setState({\n          lendingProcessing: this.props.account,\n          lendAmount: '',\n          genericError: '',\n        });\n\n        const callbackDeposit = (tx, error) => {\n\n          if (!tx && error) {\n            tx = {\n              status: 'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error) {\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error') {\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]: {\n                txHash: null,\n                loading: false\n              }\n            }\n          }));\n\n          if (txSucceeded) {\n            this.setState((prevState) => ({\n              activeModal: 'share',\n              inputValue: {\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if ((this.state.metaTransactionsEnabled || this.state.erc20ForwarderEnabled) && txError) {\n            this.setState({\n              erc20ForwarderTx: null,\n              loadingErc20ForwarderTx: false,\n              txError: {\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          // console.log('callbackReceiptDeposit',tx);\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]: {\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n        const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve', 'availableTokens', this.props.tokenConfig.idle.token, 'enabled']);\n\n        // Curve Deposit\n        if (curveTokenEnabled && this.state.depositCurveEnabled) {\n\n          const curvePoolContractInfo = this.functionsUtil.getGlobalConfig(['curve', 'poolContract']);\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue, curvePoolContractInfo.decimals);\n\n          const amounts = await this.functionsUtil.getCurveAmounts(this.props.tokenConfig.idle.token, tokensToDeposit);\n          let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n          if (this.state.maxSlippage) {\n            minMintAmount = this.functionsUtil.BNify(minMintAmount);\n            minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n            minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n          }\n\n          const depositParams = [amounts, minMintAmount];\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, callbackDeposit, callbackReceiptDeposit);\n          // Normal Deposit\n        } else {\n          const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue, this.props.tokenConfig.decimals);\n\n          // const gasLimitDeposit = this.functionsUtil.BNify(1000000);\n          let depositParams = [];\n\n          // Use Proxy Contract if enabled\n          const useProxyContract = this.checkUseProxyContract();\n          if (useProxyContract) {\n            const mintProxyContractInfo = this.state.actionProxyContract[this.state.action];\n            const mintProxyContract = mintProxyContractInfo.contract;\n\n            // Use Meta-Transactions\n            if (depositMetaTransactionsEnabled) {\n              depositParams = [tokensToDeposit, this.props.tokenConfig.idle.address];\n              const functionCall = mintProxyContract.methods[mintProxyContractInfo.function](...depositParams);\n              const functionSignature = functionCall.encodeABI();\n              // console.log('mintProxyContract',mintProxyContractInfo.function,depositParams);\n              // if (this.state.metaTransactionsEnabled){\n              contractSendResult = await this.functionsUtil.sendBiconomyTxWithPersonalSign(mintProxyContractInfo.name, functionSignature, callbackDeposit, callbackReceiptDeposit);\n              // } else {\n              //   contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n              // }\n              // Use Erc20 Forwarder\n            } else if (depositErc20ForwarderEnabled) {\n\n              // Check if the deposit method require the nonce\n              const methodAbi = mintProxyContractInfo.contract._jsonInterface.find(f => f.name === mintProxyContractInfo.function);\n              const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n\n              // Build ERC20 Forwarder Tx\n              if (!this.state.erc20ForwarderTx) {\n                this.setState({\n                  txError: {\n                    [this.state.action]: false\n                  },\n                  loadingErc20ForwarderTx: true\n                }, async () => {\n                  const erc20ForwarderContract = this.state.erc20ForwarderContract[this.state.action];\n                  const signedParameters = await this.functionsUtil.signPermit(this.props.selectedToken, this.props.account, erc20ForwarderContract.name, 0, tokensToDeposit);\n\n                  // console.log('signedParameters_1',signedParameters);\n\n                  if (signedParameters) {\n\n                    const { expiry, nonce, r, s, v } = signedParameters;\n\n                    if (useNonce) {\n                      depositParams = [tokensToDeposit, parseInt(nonce), expiry, v, r, s];\n                    } else {\n                      depositParams = [tokensToDeposit, expiry, v, r, s];\n                    }\n\n                    if (mintProxyContractInfo.function === 'foo') {\n                      depositParams = [];\n                    }\n\n                    // console.log('permitAndDeposit',mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams);\n\n                    // contractSendResult = await this.functionsUtil.contractMethodSendWrapper(mintProxyContractInfo.name, mintProxyContractInfo.function, depositParams, callbackDeposit, callbackReceiptDeposit);\n\n                    const permitType = erc20ForwarderContract.permitType;\n                    const functionCall = erc20ForwarderContract.contract.methods[erc20ForwarderContract.function](...depositParams);\n                    const functionSignature = functionCall.encodeABI();\n\n                    // console.log('functionSignature',permitType, erc20ForwarderContract.function, depositParams);\n\n                    let gasLimit = null;\n                    try {\n                      gasLimit = await functionCall.estimateGas({ from: this.props.account }); // 5000000;\n                      if (gasLimit) {\n                        gasLimit = this.functionsUtil.BNify(gasLimit).times(1.2);\n                      } else {\n                        gasLimit = this.functionsUtil.BNify(1000000);\n                      }\n                    } catch (error) {\n                      // console.log('Gas Estimate - Error: ',error);\n                    }\n\n                    if (!gasLimit) {\n                      gasLimit = this.functionsUtil.BNify(1000000);\n                    }\n\n                    // console.log('gasEstimate',mintProxyContractInfo.name, depositParams, parseFloat(gasLimit));\n\n                    // debugger;\n\n                    const erc20ForwarderTx = await this.functionsUtil.buildBiconomyErc20ForwarderTx(erc20ForwarderContract.name, this.props.tokenConfig.address, permitType, functionSignature, gasLimit);\n                    // console.log('erc20ForwarderTx',erc20ForwarderTx);\n                    return this.setState({\n                      erc20ForwarderTx,\n                      loadingErc20ForwarderTx: false\n                    });\n                  } else {\n                    return this.setState((prevState) => ({\n                      processing: {\n                        ...prevState.processing,\n                        [this.state.action]: {\n                          txHash: null,\n                          loading: false\n                        }\n                      },\n                      signedParameters: null,\n                      erc20ForwarderTx: null,\n                      loadingErc20ForwarderTx: false\n                    }));\n                  }\n                });\n                // Send ERC20 Forwarder Tx\n              } else {\n                this.setState({\n                  txError: {\n                    [this.state.action]: false\n                  },\n                  loadingErc20ForwarderTx: true\n                }, async () => {\n                  const metaInfo = {};\n                  const permitOptions = {};\n                  const erc20ForwarderContract = this.state.erc20ForwarderContract[this.state.action];\n                  const erc20ForwarderBaseContract = this.functionsUtil.getGlobalConfig(['contract', 'methods', this.state.action, 'erc20ForwarderProxyContract', 'forwarder']);\n\n                  const permitValue = `${tokensToDeposit}00`;\n                  const incrementNonce = 1; // useNonce ? 1 : 0;\n                  const signedParameters = await this.functionsUtil.signPermit(this.props.selectedToken, this.props.account, erc20ForwarderBaseContract.name, incrementNonce, permitValue);\n\n                  // console.log('signedParameters_2',signedParameters);\n\n                  if (signedParameters) {\n\n                    this.setState({\n                      signedParameters\n                    });\n\n                    const permitConfig = this.functionsUtil.getGlobalConfig(['permit', this.props.selectedToken]);\n                    const setValue = permitConfig.type.find(t => t.name === 'value');\n\n                    const { expiry, nonce, r, s, v } = signedParameters;\n                    permitOptions.v = v;\n                    permitOptions.r = r;\n                    permitOptions.s = s;\n                    permitOptions.allowed = true;\n                    permitOptions.expiry = parseInt(expiry);\n                    permitOptions.holder = this.props.account;\n                    permitOptions.value = setValue ? permitValue : 0;\n                    permitOptions.nonce = parseInt(nonce.toString());\n                    permitOptions.spender = erc20ForwarderBaseContract.address;\n\n                    metaInfo.permitData = permitOptions;\n                    metaInfo.permitType = erc20ForwarderContract.permitType;\n\n                    // console.log('sendBiconomyTxWithErc20Forwarder',permitOptions,metaInfo);\n\n                    await this.functionsUtil.asyncTimeout(200);\n\n                    contractSendResult = await this.functionsUtil.sendBiconomyTxWithErc20Forwarder(this.state.erc20ForwarderTx.request, metaInfo, callbackDeposit, callbackReceiptDeposit);\n\n                    this.setState({\n                      erc20ForwarderTx: null,\n                      loadingErc20ForwarderTx: false\n                    });\n                  } else {\n                    return this.setState((prevState) => ({\n                      processing: {\n                        ...prevState.processing,\n                        [this.state.action]: {\n                          txHash: null,\n                          loading: false\n                        }\n                      },\n                      signedParameters: null,\n                      erc20ForwarderTx: null,\n                      loadingErc20ForwarderTx: false\n                    }));\n                  }\n                });\n              }\n            }\n            // Use main contract if no proxy contract exists\n          } else {\n            /*\n            let _skipMint = !this.state.directMint && this.functionsUtil.getGlobalConfig(['contract','methods','deposit','skipMint']);\n            _skipMint = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : _skipMint;\n\n            // Check if deposited amount is greated that general lower limit for direct mint\n            if (_skipMint && this.state.minAmountForMintReached){\n              _skipMint = false;\n            }\n            */\n            // Always skip mint\n            let _skipMint = true;\n\n            const _referral = this.getReferralAddress() || '0x0000000000000000000000000000000000000000';\n            depositParams = [tokensToDeposit, _skipMint, _referral];\n            // console.log('depositParams',depositParams);\n            contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'mintIdleToken', depositParams, callbackDeposit, callbackReceiptDeposit);\n          }\n        }\n        break;\n      case 'redeem':\n\n        if (redeemGovTokens) {\n          const callbackRedeem = (tx, error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem_gov`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: 0\n            };\n\n            if (error) {\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error') {\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]: {\n                  txHash: null,\n                  loading: false\n                }\n              }\n            }));\n\n            if (txSucceeded) {\n              this.setState((prevState) => ({\n                inputValue: {\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]: {\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, 'redeemIdleToken', [0], callbackRedeem, callbackReceiptRedeem);\n\n        } else {\n\n          if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)) {\n            return false;\n          }\n\n          const txData = {\n            value: this.functionsUtil.BNify(inputValue)\n          };\n\n          let idleTokenToRedeem = null;\n          if (selectedPercentage) {\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage);\n          } else {\n            const idleTokenPriceWithFee = await this.functionsUtil.getIdleTokenPriceWithFee(this.props.tokenConfig, this.props.account)\n            idleTokenToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue, this.props.tokenConfig.decimals)).div(idleTokenPriceWithFee);\n          }\n\n          // Check if idleTokens to redeem > idleToken balance\n          if (idleTokenToRedeem.gt(this.functionsUtil.BNify(this.props.idleTokenBalance))) {\n            idleTokenToRedeem = this.functionsUtil.BNify(this.props.idleTokenBalance);\n          }\n\n          // Normalize number\n          idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(idleTokenToRedeem, 18);\n\n          if (!idleTokenToRedeem) {\n            return false;\n          }\n\n          const callbackRedeem = (tx, error) => {\n            const txSucceeded = tx.status === 'success';\n\n            // Send Google Analytics event\n            const eventData = {\n              eventCategory: `Redeem`,\n              eventAction: this.props.selectedToken,\n              eventLabel: tx.status,\n              eventValue: parseInt(inputValue)\n            };\n\n            if (error) {\n              eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n            }\n\n            // Send Google Analytics event\n            if (error || eventData.status !== 'error') {\n              this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n            }\n\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]: {\n                  txHash: null,\n                  loading: false\n                }\n              }\n            }));\n\n            if (txSucceeded) {\n              this.setState((prevState) => ({\n                inputValue: {\n                  ...prevState.inputValue,\n                  [this.state.action]: this.functionsUtil.BNify(0)\n                }\n              }));\n            }\n          };\n\n          const callbackReceiptRedeem = (tx) => {\n            const txHash = tx.transactionHash;\n            this.setState((prevState) => ({\n              processing: {\n                ...prevState.processing,\n                [this.state.action]: {\n                  ...prevState.processing[this.state.action],\n                  txHash\n                }\n              }\n            }));\n          };\n\n          let redeemMethod = 'redeemIdleToken';\n          let redeemParams = [idleTokenToRedeem];\n\n          if (redeemSkipGov) {\n            redeemMethod = 'redeemIdleTokenSkipGov';\n            const _skipGovTokenRedeem = await this.getSkippedGovTokensFlags();\n            redeemParams.push(_skipGovTokenRedeem);\n          }\n\n          contractSendResult = await this.functionsUtil.contractMethodSendWrapper(this.props.tokenConfig.idle.token, redeemMethod, redeemParams, callbackRedeem, callbackReceiptRedeem, txData);\n        }\n        break;\n      default: // Reset loading if not handled action\n        loading = false;\n        break;\n    }\n\n    if (contractSendResult !== false || loading !== this.state.processing[this.state.action].loading) {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]: {\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  showMaxSlippage = () => {\n    this.setState({\n      showMaxSlippage: true\n    });\n  }\n\n  checkAction = () => {\n    let action = this.state.action;\n\n    switch (action) {\n      case 'redeem':\n        if (!this.state.canRedeem) {\n          action = 'deposit';\n        }\n        break;\n      default:\n        break;\n    }\n\n    if (action !== this.state.action) {\n      this.setState({\n        action\n      }, () => {\n        this.checkButtonDisabled();\n      });\n    } else {\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled = (amount = null) => {\n\n    if (!this.state.action) {\n      return false;\n    }\n\n    if (!amount) {\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action) {\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && (amount.lte(0) || amount.gt(this.props.tokenBalance)));\n        break;\n      case 'redeem':\n        buttonDisabled = !this.state.canRedeemCurve && !this.state.redeemGovTokens && (buttonDisabled || (!amount || amount.lte(0) || amount.gt(this.props.redeemableBalance)));\n\n        if (!buttonDisabled && this.state.redeemSkipGov && this.state.redeemSkipGovTokens.length > 0 && !this.state.agreeSkipGovTokens) {\n          buttonDisabled = true;\n        }\n        // console.log('checkButtonDisabled',this.state.redeemSkipGov,this.state.redeemSkipGovTokens.length,this.state.agreeSkipGovTokens,buttonDisabled);\n        break;\n      default:\n        break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null) {\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch (this.state.action) {\n      case 'deposit':\n        amount = this.props.tokenBalance ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n        break;\n      case 'redeem':\n        amount = this.props.redeemableBalance ? this.functionsUtil.BNify(this.props.redeemableBalance).times(selectedPercentage) : null;\n        break;\n      default:\n        break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue: {\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null) {\n      return false;\n    }\n\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action) {\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector: {\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  changeInputValue = async (e) => {\n    if (!this.state.action) {\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector: {\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue: {\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()) {\n      case 'deposit':\n\n        break;\n      case 'redeem':\n        if (!this.state.canRedeem && !this.state.canRedeemCurve) {\n          action = null;\n        }\n        break;\n      default:\n        action = null;\n        break;\n    }\n\n    if (action !== null) {\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig) {\n      return null;\n    }\n\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getCurrentNetwork();\n\n    const isDepositDisabled = this.props.tokenConfig.canDeposit && !this.props.tokenConfig.canDeposit.enabled ? true : false;\n    // const depositDisabledMessage1 = isDepositDisabled && this.props.tokenConfig.canDeposit.disabledMessageDepositKey ? this.functionsUtil.getGlobalConfig(['messages', this.props.tokenConfig.canDeposit.disabledMessageDepositKey]) : null;\n    // const depositDisabledMessage2 = this.state.canRedeem ? this.functionsUtil.getGlobalConfig(['messages', this.props.tokenConfig.canDeposit.disabledMessageRedeemKey]) : \"\";\n    const depositDisabledMessage = isDepositDisabled ? (this.state.canRedeem && this.props.tokenConfig.canDeposit.disabledMessageRedeemKey ? this.functionsUtil.getGlobalConfig(['messages', this.props.tokenConfig.canDeposit.disabledMessageRedeemKey]) : (this.props.tokenConfig.canDeposit.disabledMessageDepositKey ? this.functionsUtil.getGlobalConfig(['messages', this.props.tokenConfig.canDeposit.disabledMessageDepositKey]) : null) ) : null;\n\n    const govTokensDisabled = this.props.tokenConfig.govTokensDisabled;\n    const govTokensEnabled = !govTokensDisabled && this.functionsUtil.getGlobalConfig(['strategies', this.props.selectedStrategy, 'govTokensEnabled']) && Object.keys(this.state.tokenGovTokens).length > 0;\n    const skipMintForDepositEnabled = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : true;\n    const skipMintCheckboxEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'skipMintCheckboxEnabled']) && skipMintForDepositEnabled;\n\n    const showRedeemFlow = this.state.canRedeem && (!this.state.redeemCurveEnabled || this.state.showRedeemFlow) && this.state.action === 'redeem';\n\n    const redeemGovTokenEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'redeemGovTokens', 'enabled']) && govTokensEnabled && showRedeemFlow;// && this.props.govTokensBalance.gt(0);\n    const redeemGovTokens = redeemGovTokenEnabled && this.state.redeemGovTokens;\n\n    const redeemSkipGovConfig = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'redeemSkipGov']);\n    const redeemSkipGovEnabled = redeemSkipGovConfig && !redeemSkipGovConfig.disabledTokens.includes(this.props.tokenConfig.idle.token) && govTokensEnabled && showRedeemFlow;\n    const redeemSkipGov = redeemSkipGovEnabled && this.state.redeemSkipGov && Object.keys(this.props.govTokensUserBalances).length > 0 && this.props.govTokensBalance.gt(0);\n    const redeemSkipGovNoTokens = redeemSkipGovEnabled && this.state.redeemSkipGov && (!Object.keys(this.props.govTokensUserBalances).length || this.props.govTokensBalance.lte(0));\n\n\n    const showAdvancedRedeemOptions = redeemGovTokenEnabled || redeemSkipGovEnabled;\n    // console.log('showAdvancedRedeemOptions',showAdvancedRedeemOptions,redeemGovTokenEnabled,redeemSkipGovEnabled,govTokensEnabled,showRedeemFlow);\n\n    const depositErc20ForwarderEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'erc20ForwarderEnabled']);\n    const depositMetaTransactionsEnabled = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'metaTransactionsEnabled']);\n    const depositErc20ForwarderEnabledTokens = this.functionsUtil.getGlobalConfig(['contract', 'methods', 'deposit', 'erc20ForwarderProxyContract', 'tokens']);\n\n    // Biconomy Start\n    const metaTransactionsAvailable = depositMetaTransactionsEnabled && this.props.biconomy && this.state.actionProxyContract[this.state.action];\n    const useMetaTx = metaTransactionsAvailable && this.state.metaTransactionsEnabled;\n\n    const erc20ForwarderEnabled = depositErc20ForwarderEnabled && Object.keys(depositErc20ForwarderEnabledTokens).includes(this.props.selectedToken) && depositErc20ForwarderEnabledTokens[this.props.selectedToken].enabled && this.props.biconomy && this.props.erc20ForwarderClient && this.state.actionProxyContract[this.state.action] && !isDepositDisabled;\n\n    // console.log(erc20ForwarderEnabled,depositErc20ForwarderEnabled,this.props.biconomy,this.props.erc20ForwarderClient,this.state.actionProxyContract[this.state.action]);\n    // Biconomy End\n\n    const totalBalance = this.state.action === 'deposit' ? this.props.tokenBalance : this.props.redeemableBalance;\n    const migrateText = this.state.migrationEnabled && this.props.tokenConfig.migration.message !== undefined ? this.props.tokenConfig.migration.message : null;\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const curveTokenEnabled = curveConfig.enabled && this.functionsUtil.getGlobalConfig(['curve', 'availableTokens', this.props.tokenConfig.idle.token, 'enabled']);\n\n    const depositCurve = curveTokenEnabled && this.state.depositCurveEnabled && this.state.action === 'deposit';\n\n    const showDepositOptions = this.state.action === 'deposit' && !this.state.contractPaused && (curveTokenEnabled || this.state.tokenApproved);\n\n    const showDepositCurve = showDepositOptions && curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canDepositCurve && this.state.action === 'deposit';\n    const showRedeemCurve = curveTokenEnabled && this.state.componentMounted && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.canRedeemCurve && this.state.action === 'redeem';\n\n    const showCurveSlippage = depositCurve && this.state.depositCurveSlippage && this.state.depositCurveBalance && !this.state.buttonDisabled;\n\n    const showRebalanceOption = false && this.state.canDeposit && skipMintCheckboxEnabled && this.state.action === 'deposit';\n    const showAdvancedDepositOptions = showDepositCurve || showRebalanceOption;\n\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    const batchDepositEnabled = batchDepositInfo.enabled && typeof batchDepositInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined' && batchDepositInfo.availableNetworks.includes(currentNetwork.id);\n    \n    const batchDepositDepositEnabled = batchDepositInfo.depositEnabled;\n\n    const showBatchDeposit = !useMetaTx && batchDepositEnabled && batchDepositDepositEnabled && !this.props.isMigrationTool && this.state.action === 'deposit';\n\n    const ethWrapperInfo = this.functionsUtil.getGlobalConfig(['tools', 'ethWrapper']);\n    const ETHWrapperComponent = ethWrapperInfo.subComponent;\n    const showETHWrapper = this.props.selectedToken === 'WETH' && ethWrapperInfo.enabled && ethWrapperInfo.availableNetworks.includes(currentNetwork.id) && !this.props.isMigrationTool && this.state.action === 'deposit';\n\n    const polygonBridgeInfo = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    // const PolygonBridgeComponent = polygonBridgeInfo.subComponent;\n    const polygonNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n    // const polygonNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',polygonNetworkId]);\n\n    const canPerformAction = /*!depositCurve && !this.state.redeemCurveEnabled && */((this.state.action === 'deposit' && this.state.canDeposit && !isDepositDisabled) || (this.state.action === 'redeem' && this.state.canRedeem) || redeemGovTokens) && /*(!this.state.showETHWrapperEnabled || this.state.action === 'redeem') && */(!this.state.showPolygonBridgeEnabled || this.state.action === 'redeem');\n    const showActionFlow = !redeemGovTokens && canPerformAction;\n\n    const showBuyFlow = this.state.componentMounted && currentNetwork.provider === 'infura' && (!showDepositCurve || this.state.showBuyFlow) && !this.state.depositCurveEnabled && this.state.tokenApproved && !this.state.contractPaused && (!this.state.migrationEnabled || this.state.skipMigration) && this.state.action === 'deposit' && !isDepositDisabled && !this.state.canDeposit && !this.state.showETHWrapperEnabled;\n    const showPolygonBridge = this.props.account && this.state.componentMounted && this.state.action === 'deposit' && !this.state.canDeposit && currentNetwork.provider === 'polygon';\n    const showPolygonBridgeBanner = !showPolygonBridge && currentNetwork.provider === 'polygon' && polygonNetworkId && polygonBridgeInfo.enabled && this.state.action === 'deposit';\n\n    const buyToken = this.functionsUtil.BNify(this.props.accountBalance).gt(0) ? this.props.selectedToken : this.functionsUtil.getBaseToken();\n\n    const _referral = this.getReferralAddress();\n    const showReferral = _referral && this.state.action === 'deposit' && showActionFlow && !showBuyFlow;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select your asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n            />\n          </Box>\n          {\n            viewOnly ? (\n              <IconBox\n                cardProps={{\n                  mt: 3\n                }}\n                icon={'Visibility'}\n                text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n              />\n            ) : (\n                <Migrate\n                  {...this.props}\n                  migrateTextBefore={migrateText}\n                  migrateText={migrateText !== null ? '' : null}\n                  toggleSkipMigration={this.toggleSkipMigration.bind(this)}\n                >\n                  {\n                    !this.props.account ? (\n                      <ConnectBox\n                        {...this.props}\n                      />\n                    ) : this.state.componentMounted ? (\n                      this.state.action && (\n                        <Box\n                          width={1}\n                        >\n                          <Flex\n                            mt={2}\n                            flexDirection={'column'}\n                          >\n                            <Text mb={2}>\n                              Choose the action:\n                          </Text>\n\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  width: 0.48\n                                }}\n                                isInteractive={true}\n                                isActive={this.state.action === 'deposit'}\n                                handleClick={() => { this.setAction('deposit') }}\n\n                              >\n                                <Flex\n                                  my={1}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'center'}\n                                >\n                                  <TransactionField\n                                    transaction={{\n                                      action: 'deposit'\n                                    }}\n                                    fieldInfo={{\n                                      name: 'icon',\n                                      props: {\n                                        mr: 3\n                                      }\n                                    }}\n                                  />\n                                  <Text\n                                    fontSize={3}\n                                    fontWeight={3}\n                                  >\n                                    Deposit\n                                </Text>\n                                </Flex>\n                              </DashboardCard>\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  width: 0.48\n                                }}\n                                isInteractive={true}\n                                isActive={this.state.action === 'redeem'}\n                                handleClick={() => { this.setAction('redeem') }}\n                                isDisabled={!this.state.canRedeem && !this.state.canRedeemCurve}\n                              >\n                                <Flex\n                                  my={1}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'center'}\n                                >\n                                  <TransactionField\n                                    transaction={{\n                                      action: 'redeem'\n                                    }}\n                                    fieldInfo={{\n                                      name: 'icon',\n                                      props: {\n                                        mr: 3\n                                      }\n                                    }}\n                                  />\n                                  <Text\n                                    fontSize={3}\n                                    fontWeight={3}\n                                  >\n                                    Redeem\n                                </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </Flex>\n                            {\n                              isDepositDisabled && (\n                                <IconBox\n                                  cardProps={{\n                                    mt: 3\n                                  }}\n                                  iconProps={{\n                                    color:'#ffe000'\n                                  }}\n                                  icon={'Warning'}\n                                  text={depositDisabledMessage}\n                                >\n                                  {\n                                    this.state.action === 'deposit' && this.state.canRedeem && (\n                                      <RoundButton\n                                        buttonProps={{\n                                          mt:3,\n                                          width:[1,1/2]\n                                        }}\n                                        handleClick={e => this.setAction('redeem')}\n                                      >\n                                        Redeem\n                                      </RoundButton>\n                                    )\n                                  }\n                                </IconBox>\n                              )\n                            }\n                          </Flex>\n                          {\n                            (showRedeemFlow && this.state.unlentBalance) &&\n                            <DashboardCard\n                              cardProps={{\n                                py: 2,\n                                px: 2,\n                                mt: 3,\n                                display: 'flex',\n                                alignItems: 'center',\n                                flexDirection: 'column',\n                                justifyContent: 'center',\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'1.8em'}\n                                  color={'cellText'}\n                                  name={'LocalGasStation'}\n                                />\n                                <Text\n                                  px={2}\n                                  fontSize={1}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Available balance for Cheap Redeem\n                                </Text>\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                >\n                                  <Text\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    color={'dark-gray'}\n                                    textAlign={'center'}\n                                    hoverColor={'copyColor'}\n                                  >\n                                    {this.state.unlentBalance.toFixed(4)} {this.props.selectedToken}\n                                  </Text>\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.functionsUtil.getGlobalConfig(['messages', 'cheapRedeem'])}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                </Flex>\n                              </Flex>\n                            </DashboardCard>\n                          }\n                          {\n                            showAdvancedRedeemOptions ? (\n                              <DashboardCard\n                                cardProps={{\n                                  pt: 2,\n                                  px: 2,\n                                  mt: 3,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                  pb: this.state.showAdvancedOptions ? 3 : 2,\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'center'}\n                                >\n                                  <Link\n                                    ml={1}\n                                    mainColor={'primary'}\n                                    hoverColor={'primary'}\n                                    onClick={this.toggleShowAdvancedOptions}\n                                  >\n                                    {this.state.showAdvancedOptions ? 'Hide' : 'Show'} advanced options\n                                </Link>\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                                  />\n                                </Flex>\n                                {\n                                  this.state.showAdvancedOptions &&\n                                  <Flex\n                                    mt={1}\n                                    flexDirection={'column'}\n                                  >\n                                    {\n                                      redeemGovTokenEnabled &&\n                                      <Flex\n                                        alignItems={'center'}\n                                        justifyContent={'row'}\n                                      >\n                                        <Checkbox\n                                          required={false}\n                                          checked={this.state.redeemGovTokens}\n                                          label={`Redeem governance tokens only`}\n                                          onChange={e => this.toggleRedeemGovTokens(e.target.checked)}\n                                        />\n                                        <Link\n                                          color={'link'}\n                                          hoverColor={'link'}\n                                          onClick={e => this.props.openTooltipModal('Redeem governance tokens', `This feature allows you to redeem just the amount of governance tokens accrued${this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~${this.props.govTokensBalance.toFixed(2)}$)` : null} without redeeming the underlying token.`)}\n                                        >\n                                          (read more)\n                                          </Link>\n                                      </Flex>\n                                    }\n                                    {\n                                      redeemSkipGovEnabled &&\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'row'}\n                                      >\n                                        <Checkbox\n                                          required={false}\n                                          checked={this.state.redeemSkipGov}\n                                          label={`Redeem without governance tokens`}\n                                          onChange={e => this.toggleRedeemSkipGov(e.target.checked)}\n                                        />\n                                        <Icon\n                                          mr={1}\n                                          size={'1.2em'}\n                                          name={'Warning'}\n                                          color={'#ffe000'}\n                                        />\n                                        <Link\n                                          color={'link'}\n                                          hoverColor={'link'}\n                                          onClick={e => this.props.openTooltipModal('Redeem without governance tokens', this.functionsUtil.getGlobalConfig(['messages', 'redeemSkipGov']))}\n                                        >\n                                          (read more)\n                                          </Link>\n                                      </Flex>\n                                    }\n                                  </Flex>\n                                }\n                              </DashboardCard>\n                            ) : showAdvancedDepositOptions ? (\n                              <DashboardCard\n                                cardProps={{\n                                  pt: 2,\n                                  px: 2,\n                                  mt: 3,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                  pb: this.state.showAdvancedOptions ? 3 : 2,\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'center'}\n                                >\n                                  <Link\n                                    ml={1}\n                                    mainColor={'primary'}\n                                    hoverColor={'primary'}\n                                    onClick={this.toggleShowAdvancedOptions}\n                                  >\n                                    {this.state.showAdvancedOptions ? 'Hide' : 'Show'} advanced options\n                                </Link>\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={this.state.showAdvancedOptions ? 'ArrowDropUp' : 'ArrowDropDown'}\n                                  />\n                                </Flex>\n                                {\n                                  this.state.showAdvancedOptions &&\n                                  <Flex\n                                    mt={1}\n                                    flexDirection={'column'}\n                                  >\n                                    {\n                                      showDepositCurve &&\n                                      <Flex\n                                        alignItems={'center'}\n                                        justifyContent={'row'}\n                                      >\n                                        <Checkbox\n                                          required={false}\n                                          disabled={this.state.directMint}\n                                          label={`Deposit in the Curve Pool`}\n                                          checked={this.state.depositCurveEnabled}\n                                          onChange={e => this.toggleDepositCurve(e.target.checked)}\n                                        />\n                                        <Link\n                                          mainColor={'primary'}\n                                          hoverColor={'primary'}\n                                          onClick={e => this.props.openTooltipModal('How Curve works', this.functionsUtil.getGlobalConfig(['messages', 'curveInstructions']))}\n                                        >\n                                          (read more)\n                                          </Link>\n                                      </Flex>\n                                    }\n                                    {\n                                      showRebalanceOption &&\n                                      <Flex\n                                        alignItems={'center'}\n                                        justifyContent={'row'}\n                                      >\n                                        <Checkbox\n                                          required={false}\n                                          label={`Rebalance the pool`}\n                                          checked={this.state.directMint}\n                                          disabled={this.state.depositCurveEnabled}\n                                          onChange={e => this.toggleSkipMint(e.target.checked)}\n                                        />\n                                        <Tooltip\n                                          placement={'bottom'}\n                                          message={this.functionsUtil.getGlobalConfig(['messages', 'directMint'])}\n                                        >\n                                          <Icon\n                                            size={'1em'}\n                                            color={'cellTitle'}\n                                            name={\"InfoOutline\"}\n                                          />\n                                        </Tooltip>\n                                      </Flex>\n                                    }\n                                  </Flex>\n                                }\n                              </DashboardCard>\n                            ) : (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    {\n                                      showDepositCurve && (\n                                        <Flex\n                                          width={1}\n                                          flexDirection={'column'}\n                                          justifyContent={'center'}\n                                        >\n                                          <DashboardCard\n                                            isRainbow={true}\n                                            cardProps={{\n                                              py: 3,\n                                              px: 2,\n                                              mt: 3,\n                                              display: 'flex',\n                                              alignItems: 'center',\n                                              flexDirection: 'column',\n                                              justifyContent: 'center',\n                                            }}\n                                          >\n                                            <Flex\n                                              width={1}\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                              justifyContent={'center'}\n                                            >\n                                              <Image\n                                                height={'1.8em'}\n                                                src={curveConfig.params.image}\n                                              />\n                                              <Text\n                                                mt={2}\n                                                px={2}\n                                                fontSize={1}\n                                                color={'dark-gray'}\n                                                textAlign={'center'}\n                                              >\n                                                Deposit your tokens in the Curve Pool and boost your APY up to {this.state.curveAPY ? this.state.curveAPY.toFixed(2) : '-'}%.\n                                          <Link\n                                                  ml={1}\n                                                  mainColor={'primary'}\n                                                  hoverColor={'primary'}\n                                                  onClick={e => this.props.openTooltipModal('How Curve works', this.functionsUtil.getGlobalConfig(['messages', 'curveInstructions']))}\n                                                >\n                                                  Read More\n                                          </Link>\n                                              </Text>\n                                              <Checkbox\n                                                mt={2}\n                                                required={false}\n                                                label={`Deposit in Curve`}\n                                                checked={this.state.depositCurveEnabled}\n                                                onChange={e => this.toggleDepositCurve(e.target.checked)}\n                                              />\n                                            </Flex>\n                                          </DashboardCard>\n                                          {\n                                            (!this.state.showBuyFlow && !this.state.depositCurveEnabled && !this.state.canDeposit) &&\n                                            <Link\n                                              textAlign={'center'}\n                                              hoverColor={'primary'}\n                                              onClick={e => this.setShowBuyFlow(true)}\n                                            >\n                                              I just want to deposit more {this.props.selectedToken}\n                                            </Link>\n                                          }\n                                        </Flex>\n                                      )\n                                    }\n                                    {\n                                      showRebalanceOption && (\n                                        <DashboardCard\n                                          cardProps={{\n                                            py: 3,\n                                            px: 2,\n                                            mt: 3,\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            flexDirection: 'column',\n                                            justifyContent: 'center',\n                                          }}\n                                        >\n                                          <Flex\n                                            width={1}\n                                            alignItems={'center'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <Icon\n                                              size={'1.8em'}\n                                              color={'cellText'}\n                                              name={'InfoOutline'}\n                                            />\n                                            <Text\n                                              mt={1}\n                                              px={2}\n                                              fontSize={1}\n                                              color={'cellText'}\n                                              textAlign={'center'}\n                                            >\n                                              By checking this flag you can rebalance the pool and help all users gain an additional APR\n                                      </Text>\n                                          </Flex>\n                                          <Checkbox\n                                            mt={2}\n                                            required={false}\n                                            label={`Rebalance the pool`}\n                                            checked={this.state.directMint}\n                                            onChange={e => this.toggleSkipMint(e.target.checked)}\n                                          />\n                                        </DashboardCard>\n                                      )\n                                    }\n                                    {\n                                      redeemGovTokenEnabled && (\n                                        <DashboardCard\n                                          cardProps={{\n                                            py: 3,\n                                            px: 2,\n                                            mt: 3,\n                                            display: 'flex',\n                                            alignItems: 'center',\n                                            flexDirection: 'column',\n                                            justifyContent: 'center',\n                                          }}\n                                        >\n                                          <Flex\n                                            width={1}\n                                            alignItems={'center'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <Icon\n                                              size={'1.8em'}\n                                              color={'cellText'}\n                                              name={'InfoOutline'}\n                                            />\n                                            <Text\n                                              mt={1}\n                                              px={2}\n                                              fontSize={1}\n                                              color={'cellText'}\n                                              textAlign={'center'}\n                                            >\n                                              By redeeming your {this.props.selectedToken} you will automatically get also the proportional amount of governance tokens accrued{this.props.govTokensBalance && this.props.govTokensBalance.gt(0) ? ` (~ $${this.props.govTokensBalance.toFixed(2)})` : null}.\n                                      </Text>\n                                          </Flex>\n                                          <Checkbox\n                                            mt={2}\n                                            required={false}\n                                            checked={this.state.redeemGovTokens}\n                                            label={`Redeem governance tokens only`}\n                                            onChange={e => this.toggleRedeemGovTokens(e.target.checked)}\n                                          />\n                                        </DashboardCard>\n                                      )\n                                    }\n                                  </Flex>\n                                )\n                          }\n                          {\n                            redeemSkipGov ? (\n                              <DashboardCard\n                                cardProps={{\n                                  mt: 2,\n                                  mb: 2,\n                                  py: 2,\n                                  px: 1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    Select the gov tokens you want to give away:\n                                  </Text>\n                                  <Flex\n                                    mt={2}\n                                    width={1}\n                                    boxShadow={0}\n                                    style={{\n                                      flexWrap: 'wrap'\n                                    }}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      Object.keys(this.props.govTokensUserBalances).map(token => {\n                                        const balance = this.props.govTokensUserBalances[token];\n                                        const isActive = this.state.redeemSkipGovTokens.includes(token);\n                                        const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens', token]);\n                                        return (\n                                          <Flex\n                                            p={2}\n                                            mb={1}\n                                            mx={1}\n                                            border={1}\n                                            width={'auto'}\n                                            style={{\n                                              cursor: 'pointer'\n                                            }}\n                                            borderRadius={2}\n                                            flexDirection={'row'}\n                                            key={`skipGovToken_${token}`}\n                                            justifyContent={'flex-start'}\n                                            backgroundColor={isActive ? 'cardBgActive' : 'cardBgHover'}\n                                            onClick={e => this.setRedeemSkipGovTokens(token, !this.state.redeemSkipGovTokens.includes(token))}\n                                          >\n                                            <Checkbox\n                                              m={0}\n                                              required={false}\n                                              checked={isActive}\n                                              onChange={e => this.setRedeemSkipGovTokens(token, e.target.checked)}\n                                            />\n                                            <AssetField\n                                              token={token}\n                                              tokenConfig={tokenConfig}\n                                              fieldInfo={{\n                                                name: 'icon',\n                                                props: {\n                                                  mr: 1,\n                                                  width: ['1.4em', '1.6em'],\n                                                  height: ['1.4em', '1.6em']\n                                                }\n                                              }}\n                                            />\n                                            <SmartNumber\n                                              ml={1}\n                                              fontSize={[0, 2]}\n                                              fontWeight={500}\n                                              maxPrecision={4}\n                                              color={'cellText'}\n                                              number={balance.toString()}\n                                            />\n                                          </Flex>\n                                        );\n                                      })\n                                    }\n                                  </Flex>\n                                </Flex>\n                              </DashboardCard>\n                            ) : redeemSkipGovNoTokens && (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 2,\n                                  my: 2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any gov tokens to give away.\n                                </Text>\n                                </Flex>\n                              </DashboardCard>\n                            )\n                          }\n                          {\n                            redeemSkipGov && this.functionsUtil.BNify(this.state.skippedGovTokensBalance).gt(0) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 2,\n                                  my: 2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'#ffe000'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'red'}\n                                    textAlign={'center'}\n                                  >\n                                    You are giving away {this.functionsUtil.formatMoney(this.state.skippedGovTokensBalance)}$ worth of governance tokens!\n                                </Text>\n                                  {\n                                    this.state.skipGovTokensGasSave && this.state.skipGovTokensGasSave.gte(0.0001) && (\n                                      <Text\n                                        mt={1}\n                                        fontSize={1}\n                                        color={'#00b84a'}\n                                        textAlign={'center'}\n                                      >\n                                        This will save you {this.state.skipGovTokensGasSave.toFixed(4)} ETH of gas (~{this.state.skipGovTokensGasSaveUSD.toFixed(2)}$)\n                                    </Text>\n                                    )\n                                  }\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    To proceed with the redeem please give your authorization by checking the following flag:\n                                </Text>\n                                  <Checkbox\n                                    my={1}\n                                    required={false}\n                                    checked={this.state.agreeSkipGovTokens}\n                                    label={`I agree to give away my governance tokens`}\n                                    onChange={e => this.toggleAgreeSkipGovTokens(e.target.checked)}\n                                  />\n                                </Flex>\n                              </DashboardCard>\n                            ) : redeemSkipGov && this.state.redeemSkipGovTokens.length > 0 && (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  my: 2\n                                }}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection: 'row'\n                                  }}\n                                  loaderProps={{\n                                    size: '25px',\n                                  }}\n                                  textProps={{\n                                    ml: 2\n                                  }}\n                                  text={'Loading estimated gas usage...'}\n                                />\n                              </DashboardCard>\n                            )\n                          }\n                          {\n                            showReferral && (\n                              <DashboardCard\n                                cardProps={{\n                                  py: 3,\n                                  px: 2,\n                                  mt: 3,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                }}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Share'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You are depositing with the following referral address:\n                                </Text>\n                                  <Text\n                                    mt={1}\n                                    px={2}\n                                    fontSize={1}\n                                    fontWeight={500}\n                                    textAlign={'center'}\n                                    color={this.props.theme.colors.transactions.status.completed}\n                                  >\n                                    {_referral}\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            )\n                          }\n                          {\n                            (metaTransactionsAvailable && !showBuyFlow && !this.state.contractPaused) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  py: 3,\n                                  px: 2,\n                                  my: 3,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                }}\n                              >\n                                {\n                                  this.state.metaTransactionsEnabled && this.state.txError[this.state.action] && this.state.actionProxyContract[this.state.action].approved ? (\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'Warning'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        fontSize={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        Seems like you are having some trouble with Meta-Transactions... Disable them by unchecking the box below and try again!\n                                    </Text>\n                                    </Flex>\n                                  ) : this.functionsUtil.getWalletProvider() === 'WalletConnect' && this.state.metaTransactionsEnabled ? (\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'Warning'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        fontSize={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        Please disable Meta-Transactions if you are using Argent Wallet to avoid failed transactions!\n                                    </Text>\n                                    </Flex>\n                                  ) : (\n                                        <Text\n                                          mt={1}\n                                          fontSize={1}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          Meta-Transactions are {this.state.metaTransactionsEnabled ? 'enabled' : 'disabled'} for {this.state.action}s!<br />\n                                          {\n                                            this.state.metaTransactionsEnabled && !this.state.actionProxyContract[this.state.action].approved && `Please either enable the Smart-Contract to enjoy gas-less ${this.state.action} or just disable meta-tx.`\n                                          }\n                                        </Text>\n                                      )\n                                }\n                                <Checkbox\n                                  mt={2}\n                                  required={false}\n                                  checked={this.state.metaTransactionsEnabled}\n                                  onChange={e => this.toggleMetaTransactionsEnabled(e.target.checked)}\n                                  label={`${this.functionsUtil.capitalize(this.state.action)} with Meta-Transaction`}\n                                />\n                              </DashboardCard>\n                            ) : (erc20ForwarderEnabled && !showBuyFlow && !this.state.contractPaused) && (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  my: 3,\n                                  display: 'flex',\n                                  alignItems: 'center',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                }}\n                              >\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  How do you prefer to pay gas fees for this {this.state.action}?\n                                </Text>\n                                <Flex\n                                  width={[1, 0.7]}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      py: 2,\n                                      px: [2, 3],\n                                      width: 0.48,\n                                      border:this.state.erc20ForwarderEnabled ? 0 : 1\n                                    }}\n                                    textProps={{\n                                      ml: [1, 2],\n                                    }}\n                                    text={this.props.selectedToken}\n                                    isActive={this.state.erc20ForwarderEnabled}\n                                    imageProps={{\n                                      height: this.props.isMobile ? '1.4em' : '1.8em',\n                                      width: this.props.isMobile ? '1.4em' : '1.8em'\n                                    }}\n                                    image={`/images/tokens/${this.props.selectedToken}.svg`}\n                                    handleClick={e => this.toggleErc20ForwarderEnabled(true)}\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      py: 2,\n                                      px: [2, 3],\n                                      width: 0.48,\n                                      border:!this.state.erc20ForwarderEnabled ? 0 : 1\n                                    }}\n                                    textProps={{\n                                      ml: [1, 2],\n                                    }}\n                                    text={'ETH'}\n                                    isActive={!this.state.erc20ForwarderEnabled}\n                                    imageProps={{\n                                      height: this.props.isMobile ? '1.4em' : '1.8em',\n                                      width: this.props.isMobile ? '1.4em' : '1.8em'\n                                    }}\n                                    image={`/images/tokens/ETH.svg`}\n                                    handleClick={e => this.toggleErc20ForwarderEnabled(false)}\n                                  />\n                                </Flex>\n                                {\n                                  this.state.erc20ForwarderEnabled && this.state.txError[this.state.action] && (\n                                    <Text\n                                      mt={2}\n                                      fontSize={1}\n                                      color={'red'}\n                                      textAlign={'center'}\n                                    >\n                                      The meta-transaction cannot be executed due to insufficient funds, fund your wallet or select ETH and try again.\n                                  </Text>\n                                  )\n                                }\n                                {\n                                  /*\n                                  <Text\n                                    mt={2}\n                                    fontSize={'11px'}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    Powered by <ExtLink fontSize={'11px'} href={'https://biconomy.io'}>Biconomy</ExtLink>\n                                  </Text>\n                                  */\n                                }\n                              </DashboardCard>\n                            )\n                          }\n                          {\n                            (this.state.minAmountForMintReached && this.state.action === 'deposit') && (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  mt: 3\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    color={'cellText'}\n                                    name={'InfoOutline'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    By depositing more than {this.functionsUtil.formatMoney(this.state.minAmountForMint)}$ {this.state.showPoolPerc ? `(${this.state.minAmountForMint.div(this.state.totalAUM).times(100).toFixed(0)}% of the pool)` : null} the pool will be automatically rebalanced, gas cost may be higher.\n                                </Text>\n                                </Flex>\n                              </DashboardCard>\n                            )\n                          }\n                          {\n                            showBatchDeposit ? (\n                              <Flex\n                                p={2}\n                                mt={3}\n                                width={1}\n                                borderRadius={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'center'}\n                                backgroundColor={'DashboardCard'}\n                                border={`1px solid ${this.props.theme.colors.primary}`}\n                              >\n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  href={`/tools/${batchDepositInfo.route}/${this.props.tokenConfig.idle.token}`}\n                                >\n                                  Gas fees too high? Save gas with our Batch Deposit!\n                                </Link>\n                                <Icon\n                                  ml={1}\n                                  size={'1em'}\n                                  color={'primary'}\n                                  name={'LocalGasStation'}\n                                />\n                              </Flex>\n                            ) : showETHWrapper ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  cardProps={{\n                                    py: 3,\n                                    px: 2,\n                                    mt: 3,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    justifyContent: 'center',\n                                    pb: this.state.showAdvancedOptions ? 3 : 2,\n                                  }}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    justifyContent={'row'}\n                                  >\n                                    <Checkbox\n                                      required={false}\n                                      checked={this.state.showETHWrapperEnabled}\n                                      label={`Convert your ETH to WETH`}\n                                      onChange={e => this.toggleShowETHWrapper(e.target.checked)}\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  this.state.showETHWrapperEnabled &&\n                                  <ETHWrapperComponent\n                                    {...this.props}\n                                    action={'wrap'}\n                                    fullWidth={true}\n                                    toolProps={ethWrapperInfo.props}\n                                  />\n                                }\n                              </Flex>\n                            ) : showPolygonBridgeBanner && (\n                              <Flex\n                                p={2}\n                                mt={3}\n                                width={1}\n                                borderRadius={2}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                backgroundColor={'DashboardCard'}\n                                border={`1px solid ${this.props.theme.colors.primary}`}\n                              >\n                                <Image\n                                  height={'1.2em'}\n                                  src={polygonBridgeInfo.image}\n                                />\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'center'}\n                                >\n                                  <Link\n                                    textAlign={'center'}\n                                    hoverColor={'primary'}\n                                    href={`/tools/${polygonBridgeInfo.route}/${this.props.selectedToken}`}\n                                  >\n                                    Use the {polygonBridgeInfo.label} to deposit your {this.props.selectedToken}\n                                  </Link>\n                                  <Icon\n                                    ml={1}\n                                    size={'1em'}\n                                    color={'primary'}\n                                    name={'ArrowForward'}\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                          {\n                            showRedeemCurve && this.state.canRedeem && (\n                              <Flex\n                                width={1}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <DashboardCard\n                                  isRainbow={true}\n                                  cardProps={{\n                                    py: 3,\n                                    px: 2,\n                                    mt: 3,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    justifyContent: 'center',\n                                  }}\n                                >\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Image\n                                      height={'1.8em'}\n                                      src={curveConfig.params.image}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      px={2}\n                                      fontSize={1}\n                                      color={'dark-gray'}\n                                      textAlign={'center'}\n                                    >\n                                      Redeem your tokens from the Curve Pool.\n                                    <Link\n                                        ml={1}\n                                        mainColor={'primary'}\n                                        hoverColor={'primary'}\n                                        onClick={e => this.props.openTooltipModal('How Curve works', this.functionsUtil.getGlobalConfig(['messages', 'curveInstructions']))}\n                                      >\n                                        Read More\n                                    </Link>\n                                    </Text>\n                                    {\n                                      this.state.canRedeem &&\n                                      <Checkbox\n                                        mt={2}\n                                        required={false}\n                                        label={`Redeem from Curve`}\n                                        checked={this.state.redeemCurveEnabled}\n                                        onChange={e => this.toggleRedeemCurve(e.target.checked)}\n                                      />\n                                    }\n                                  </Flex>\n                                </DashboardCard>\n                                {\n                                  this.canRedeem &&\n                                  <Link\n                                    textAlign={'center'}\n                                    hoverColor={'primary'}\n                                    onClick={e => this.setShowRedeemFlow(true)}\n                                  >\n                                    I just want to redeem my {this.props.selectedToken}\n                                  </Link>\n                                }\n                              </Flex>\n                            )\n                          }\n                          {\n                            (this.state.contractPaused && this.state.action === 'deposit') ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p: 3,\n                                  mt: 3\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    Deposits for {this.props.selectedToken} are temporarily unavailable due to Smart-Contract maintenance. Redeems are always available.\n                                </Text>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (!this.state.tokenApproved && this.state.action === 'deposit' && !this.state.showETHWrapperEnabled && !isDepositDisabled) ? (\n                              <DashboardCard\n                                isDisabled={isDepositDisabled}\n                                cardProps={{\n                                  p: 3,\n                                  mt: 3\n                                }}\n                              >\n                                {\n                                  this.state.processing['approve'] && this.state.processing['approve'].loading ? (\n                                    <Flex\n                                      flexDirection={'column'}\n                                    >\n                                      <TxProgressBar\n                                        {...this.props}\n                                        waitText={`Approve estimated in`}\n                                        endMessage={`Finalizing approve request...`}\n                                        hash={this.state.processing['approve'].txHash}\n                                        cancelTransaction={this.cancelTransaction.bind(this)}\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'LockOpen'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={3}\n                                        fontSize={2}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        {\n                                          this.state.depositCurveEnabled ?\n                                            `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.`\n                                            : useMetaTx ?\n                                              `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle using Meta-Transaction you need to approve our Smart-Contract first.`\n                                            :\n                                              `To ${this.functionsUtil.capitalize(this.state.action)} your ${this.props.selectedToken} into Idle you need to approve our Smart-Contract first.`\n                                        }\n                                      </Text>\n                                      <RoundButton\n                                        buttonProps={{\n                                          mt: 3,\n                                          width: [1, 1 / 2]\n                                        }}\n                                        handleClick={this.approveToken.bind(this)}\n                                      >\n                                        Approve\n                                      </RoundButton>\n                                    </Flex>\n                                  )\n                                }\n                              </DashboardCard>\n                            ) : (!showBuyFlow && canPerformAction) && (\n                              !this.state.processing[this.state.action].loading ? (\n                                <Flex\n                                  mt={2}\n                                  flexDirection={'column'}\n                                >\n                                  {\n                                    showActionFlow && (\n                                      <Flex\n                                        mb={3}\n                                        width={1}\n                                        flexDirection={'column'}\n                                      >\n                                        {\n                                          (totalBalance || this.props.tokenFeesPercentage) && (\n                                            <Box\n                                              mb={1}\n                                              width={1}\n                                            >\n                                              {\n                                                this.state.showMaxSlippage && showCurveSlippage && (\n                                                  <Box\n                                                    mb={2}\n                                                    width={1}\n                                                  >\n                                                    <Flex\n                                                      alignItems={'center'}\n                                                      flexDirection={'row'}\n                                                    >\n                                                      <Text>\n                                                        Choose max slippage:\n                                                    </Text>\n                                                      <Tooltip\n                                                        placement={'top'}\n                                                        message={`Max additional slippage on top of the one shown below`}\n                                                      >\n                                                        <Icon\n                                                          ml={1}\n                                                          size={'1em'}\n                                                          color={'cellTitle'}\n                                                          name={\"InfoOutline\"}\n                                                        />\n                                                      </Tooltip>\n                                                    </Flex>\n                                                    <Flex\n                                                      mt={2}\n                                                      alignItems={'center'}\n                                                      flexDirection={'row'}\n                                                      justifyContent={'space-between'}\n                                                    >\n                                                      {\n                                                        [0.2, 0.5, 1, 5].map(slippage => (\n                                                          <FastBalanceSelector\n                                                            cardProps={{\n                                                              p: 1\n                                                            }}\n                                                            textProps={{\n                                                              fontSize: 1\n                                                            }}\n                                                            percentage={slippage}\n                                                            key={`selector_${slippage}`}\n                                                            handleClick={() => this.setMaxSlippage(slippage)}\n                                                            isActive={this.state.maxSlippage === parseFloat(slippage)}\n                                                          />\n                                                        ))\n                                                      }\n                                                    </Flex>\n                                                  </Box>\n                                                )\n                                              }\n                                              <Flex\n                                                width={1}\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                                justifyContent={'space-between'}\n                                              >\n                                                {\n                                                  showCurveSlippage ? (\n                                                    <Flex\n                                                      width={1}\n                                                      maxWidth={'50%'}\n                                                      alignItems={'center'}\n                                                      flexDirection={'row'}\n                                                    >\n                                                      <Text\n                                                        fontSize={1}\n                                                        fontWeight={3}\n                                                        textAlign={'right'}\n                                                        style={{\n                                                          whiteSpace: 'nowrap'\n                                                        }}\n                                                        color={this.state.depositCurveSlippage.gt(0) ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed}\n                                                      >\n                                                        {\n                                                          parseFloat(this.state.depositCurveSlippage.times(100).toFixed(2)) === 0 ?\n                                                            'No Slippage'\n                                                            : `${this.state.depositCurveSlippage.gt(0) ? 'Slippage: ' : 'Bonus: '} ${this.state.depositCurveSlippage.times(100).abs().toFixed(2)}%`\n                                                        }\n                                                      </Text>\n                                                      <Tooltip\n                                                        placement={'top'}\n                                                        message={this.functionsUtil.getGlobalConfig(['messages', 'curveBonusSlippage'])}\n                                                      >\n                                                        <Icon\n                                                          ml={1}\n                                                          size={'1em'}\n                                                          color={'cellTitle'}\n                                                          name={\"InfoOutline\"}\n                                                        />\n                                                      </Tooltip>\n                                                      <Link\n                                                        ml={1}\n                                                        color={'copyColor'}\n                                                        hoverColor={'primary'}\n                                                        onClick={this.showMaxSlippage}\n                                                      >\n                                                        change\n                                                    </Link>\n                                                    </Flex>\n                                                  ) : this.props.tokenFeesPercentage && (\n                                                    <Flex\n                                                      alignItems={'center'}\n                                                      flexDirection={'row'}\n                                                    >\n                                                      <Text\n                                                        fontSize={1}\n                                                        fontWeight={3}\n                                                        color={'dark-gray'}\n                                                        textAlign={'right'}\n                                                        hoverColor={'copyColor'}\n                                                      >\n                                                        Performance fee: {this.props.tokenFeesPercentage.times(100).toFixed(2)}%\n                                                    </Text>\n                                                      <Tooltip\n                                                        placement={'top'}\n                                                        message={this.functionsUtil.getGlobalConfig(['messages', 'performanceFee'])}\n                                                      >\n                                                        <Icon\n                                                          ml={1}\n                                                          size={'1em'}\n                                                          color={'cellTitle'}\n                                                          name={\"InfoOutline\"}\n                                                        />\n                                                      </Tooltip>\n                                                    </Flex>\n                                                  )\n                                                }\n                                                {\n                                                  totalBalance && (\n                                                    <Link\n                                                      fontSize={1}\n                                                      fontWeight={3}\n                                                      color={'dark-gray'}\n                                                      textAlign={'right'}\n                                                      hoverColor={'copyColor'}\n                                                      onClick={(e) => this.setFastBalanceSelector(100)}\n                                                    >\n                                                      {totalBalance.toFixed(6)} {this.props.selectedToken}\n                                                    </Link>\n                                                  )\n                                                }\n                                              </Flex>\n                                            </Box>\n                                          )\n                                        }\n                                        <Input\n                                          min={0}\n                                          border={0}\n                                          type={\"number\"}\n                                          required={true}\n                                          height={'3.4em'}\n                                          fontWeight={500}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          boxShadow={'none !important'}\n                                          placeholder={`Insert amount`}\n                                          onChange={this.changeInputValue.bind(this)}\n                                          value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                                        />\n                                        <Flex\n                                          mt={2}\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                          justifyContent={'space-between'}\n                                        >\n                                          {\n                                            [25, 50, 75, 100].map(percentage => (\n                                              <FastBalanceSelector\n                                                percentage={percentage}\n                                                key={`selector_${percentage}`}\n                                                onMouseDown={() => this.setFastBalanceSelector(percentage)}\n                                                isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                              />\n                                            ))\n                                          }\n                                        </Flex>\n                                      </Flex>\n                                    )\n                                  }\n                                  {\n                                    canPerformAction && (\n                                      <Flex\n                                        justifyContent={'center'}\n                                        mt={redeemGovTokens ? 2 : 0}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            width: 'auto',\n                                            minWidth: [1, 1 / 2],\n                                            style: {\n                                              textTransform: 'capitalize'\n                                            },\n                                            disabled: this.state.buttonDisabled\n                                          }}\n                                          handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this)}\n                                        >\n                                          {this.state.action}{redeemGovTokens ? ' Gov Tokens' : '' /*(depositCurve ? ' in Curve' : '')*/}\n                                        </RoundButton>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              ) : this.state.loadingErc20ForwarderTx ? (\n                                <Flex\n                                  mt={3}\n                                  flexDirection={'column'}\n                                >\n                                  <FlexLoader\n                                    flexProps={{\n                                      flexDirection: 'row'\n                                    }}\n                                    loaderProps={{\n                                      size: '25px',\n                                    }}\n                                    textProps={{\n                                      ml: 2\n                                    }}\n                                    text={this.state.erc20ForwarderTx ? (this.state.signedParameters ? 'Please Sign the Transaction...' : 'Please Sign the Permit...') : 'Calculating transaction fees...'}\n                                  />\n                                </Flex>\n                              ) : this.state.erc20ForwarderTx ? (\n                                <DashboardCard\n                                  cardProps={{\n                                    p: 3,\n                                    mt: 3,\n                                    display: 'flex',\n                                    alignItems: 'center',\n                                    flexDirection: 'column',\n                                    justifyContent: 'center',\n                                  }}\n                                >\n                                  <Text\n                                    mb={2}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The required gas fee to perform the {this.state.action} is <strong>{this.state.erc20ForwarderTx.cost} {this.props.selectedToken}</strong>\n                                  </Text>\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        mx: 2,\n                                        py: 2,\n                                        px: [2, 3],\n                                        width: 0.40,\n                                        onMouseDown: () => {\n                                          this.executeAction()\n                                        }\n                                      }}\n                                      isInteractive={true}\n                                    >\n                                      <Flex\n                                        my={1}\n                                        alignItems={'center'}\n                                        flexDirection={'row'}\n                                        justifyContent={'center'}\n                                      >\n                                        <Flex\n                                          mr={2}\n                                          alignItems={'center'}\n                                          justifyContent={'center'}\n                                        >\n                                          <Icon\n                                            align={'center'}\n                                            color={'#00b84a'}\n                                            name={'CheckCircle'}\n                                            size={this.props.isMobile ? '1em' : '1.8em'}\n                                          />\n                                        </Flex>\n                                        <Text\n                                          fontWeight={3}\n                                          fontSize={[2, 3]}\n                                        >\n                                          Confirm\n                                      </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                    <DashboardCard\n                                      cardProps={{\n                                        mx: 2,\n                                        py: 2,\n                                        px: [2, 3],\n                                        width: 0.40,\n                                        onMouseDown: () => {\n                                          this.cancelTransaction();\n                                        }\n                                      }}\n                                      isInteractive={true}\n                                    >\n                                      <Flex\n                                        my={1}\n                                        alignItems={'center'}\n                                        flexDirection={'row'}\n                                        justifyContent={'center'}\n                                      >\n                                        <Flex\n                                          mr={2}\n                                          alignItems={'center'}\n                                          justifyContent={'center'}\n                                        >\n                                          <Icon\n                                            name={'Cancel'}\n                                            align={'center'}\n                                            color={'#e13636'}\n                                            size={this.props.isMobile ? '1em' : '1.8em'}\n                                          />\n                                        </Flex>\n                                        <Text\n                                          fontWeight={3}\n                                          fontSize={[2, 3]}\n                                        >\n                                          Decline\n                                      </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </Flex>\n                                </DashboardCard>\n                              ) : (\n                                <Flex\n                                  mt={3}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TxProgressBar\n                                    {...this.props}\n                                    cancelTransaction={this.cancelTransaction.bind(this)}\n                                    hash={this.state.processing[this.state.action].txHash}\n                                    endMessage={`Finalizing ${this.state.action} request...`}\n                                    waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                                  />\n                                </Flex>\n                              )\n                            )\n                          }\n                        </Box>\n                      )\n                    ) : (\n                      <Flex\n                        mt={4}\n                        flexDirection={'column'}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection: 'row'\n                          }}\n                          loaderProps={{\n                            size: '30px'\n                          }}\n                          textProps={{\n                            ml: 2\n                          }}\n                          text={'Loading asset info...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Migrate>\n              )\n          }\n        </Flex>\n        {\n          /*\n          showDepositCurve && this.state.depositCurveEnabled ? (\n            <CurveDeposit\n              {...this.props}\n            />\n          ) :\n          */\n          showRedeemCurve && this.state.redeemCurveEnabled && (\n            <Box\n              mt={3}\n              width={1}\n            >\n              <CurveRedeem\n                {...this.props}\n              />\n            </Box>\n          )\n        }\n        {\n          showBuyFlow ? (\n            <Flex\n              mt={3}\n              width={[1,0.5]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <BuyModal\n                {...this.props}\n                showInline={true}\n                availableMethods={[]}\n                buyToken={this.props.tokenConfig.token}\n              />\n            </Flex>\n          ) : showPolygonBridge && (\n            <Flex\n              mt={3}\n              width={[1,'35em']}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Image\n                    height={'2em'}\n                    src={polygonBridgeInfo.image}\n                  />\n                  <Text\n                    mt={1}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    <strong>You don't have enough {buyToken} in your wallet!</strong><br />Use the {polygonBridgeInfo.label} to transfer your {buyToken} in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={ e => this.props.goToSection(`tools/${polygonBridgeInfo.route}/${buyToken}`)}\n                  >\n                    Deposit {buyToken}\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n        }\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.tokenAPY}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.tokenAPY}% APY on my ${this.props.selectedToken} with @idlefinance! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default DepositRedeem;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        height:'45px',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import theme from '../theme';\nimport { Bar } from '@nivo/bar';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Input, Icon, Tooltip } from \"rimble-ui\";\n\nclass EstimatedEarnings extends Component {\n\n  state = {\n    chartData:null,\n    chartProps:null,\n    inputValue:1000,\n    maxInputValue:999999999999999\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadChart();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.loadChart();\n    }\n  }\n\n  async loadChart(){\n\n    const tokenApy = await this.functionsUtil.getTokenApy(this.props.tokenConfig);\n\n    if (!tokenApy){\n      return false;\n    }\n\n    const amount = this.functionsUtil.BNify(this.state.inputValue);\n    const earningsYear = amount.times(this.props.tokenApy.div(100));\n\n    const amountMonth = parseFloat(earningsYear.div(12));\n    const amount3Months = parseFloat(earningsYear.div(4));\n    const amount6Months = parseFloat(earningsYear.div(2));\n    const amountYear = parseFloat(earningsYear.div(1));\n\n    const tokenConfig = this.functionsUtil.getTokenConfig(this.props.tokenConfig.token);\n    const color = tokenConfig ? tokenConfig.color.rgb.join(',') : '95, 115, 244';\n    const hslColor = tokenConfig ? `hsl(${tokenConfig.color.hsl.join(',')})` : \"hsl(232, 87%, 66%)\";\n\n    const chartData = [\n      {\n        perc:1/12,\n        label:'MONTH',\n        value:amountMonth,\n        month:amountMonth,\n        color,\n        monthColor: hslColor,\n      },\n      {\n        perc:3/12,\n        label:'3 MONTHS',\n        value:amount3Months,\n        month3:amount3Months,\n        color,\n        month3Color: hslColor,\n      },\n      {\n        perc:6/12,\n        label:'6 MONTHS',\n        value:amount6Months,\n        month6:amount6Months,\n        color,\n        month6Color: hslColor,\n      },\n      {\n        perc:1,\n        label:'YEAR',\n        year:amountYear,\n        value:amountYear,\n        color:color,\n        yearColor: hslColor,\n      }\n    ];\n\n    let labelTextColorModifiers = tokenConfig ? this.functionsUtil.getArrayPath(['chart','labelTextColorModifiers'], tokenConfig) : null\n\n    const maxGridLines = 4;\n    const gridYStep = amountYear/maxGridLines;\n    const gridYValues = [0];\n    for (let i=1;i<=maxGridLines;i++){\n      const gridYValue = i*gridYStep;\n      gridYValues.push(gridYValue);\n    }\n\n    const chartProps = {\n      padding: 0.2,\n      animate: false,\n      indexBy: 'label',\n      // enableLabel: false,\n      labelSkipWidth: 16,\n      labelSkipHeight: 16,\n      keys: ['month','month3','month6','year'],\n      colors: ({ id, data }) => data[`${id}Color`],\n      label: d => this.functionsUtil.abbreviateNumber(d.value,2,4)+' '+this.props.selectedToken,\n      labelTextColor: labelTextColorModifiers ? { from: 'color', modifiers: [ labelTextColorModifiers ] } : null,\n      isInteractive:false,\n      minValue:0,\n      gridYValues,\n      // maxValue:amountYear,\n      axisLeft:{\n        format: v => this.functionsUtil.abbreviateNumber(v,1,3),\n        tickValues:gridYValues,\n        orient: 'left',\n        tickSize: 0,\n        tickPadding: 5,\n        tickRotation: 0,\n        legend: '',\n        legendPosition: 'middle'\n      },\n      axisBottom:{\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n      },\n      theme:{\n        labels:{\n          text:{\n            fontSize:15,\n            fontWeight:600,\n            fill:theme.colors.counter,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        axis: {\n          ticks: {\n            text: {\n              fontSize:14,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '9 5'\n          }\n        },\n      },\n      margin: this.props.isMobile ? { top: 0, right: 0, bottom: 30, left: 0 } : { top: 10, right: 0, bottom: 50, left: 65 }\n    }\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  changeInputValue(e){\n    let inputValue = e.target.value.length && !isNaN(e.target.value) ? Math.min(this.state.maxInputValue,parseFloat(e.target.value)) : 0;\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken || !this.props.tokenConfig){\n      return null;\n    }\n\n    const idleTokenEnabled = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','enabled']);\n    const showAPYDisclaimer = idleTokenEnabled && this.functionsUtil.getGlobalConfig(['govTokens','IDLE','showAPR']);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          p:[3,4]\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            width={[1,0.3]}\n            flexDirection={'column'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetField\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                fieldInfo={{\n                  name:'icon',\n                  props:{\n                    mb:2,\n                    height:'2.5em'\n                  }\n                }}\n              />\n              <Text\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n              >\n                Set the amount and see your estimated earnings on time based on the current APY: { this.props.tokenApy ? `${this.props.tokenApy.toFixed(2)}%` : null}\n                {\n                  showAPYDisclaimer && \n                    <Flex\n                      style={{\n                        display:'inline-flex',\n                        verticalAlign:'middle'\n                      }}\n                    >\n                      <Tooltip\n                        placement={'top'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                      >\n                        <Icon\n                          ml={1}\n                          name={\"Info\"}\n                          size={'1em'}\n                          color={'cellTitle'}\n                        />\n                      </Tooltip>\n                    </Flex>\n                }\n              </Text>\n            </Flex>\n            <Flex\n              mt={3}\n              flexDirection={'column'}\n            >\n              <Input\n                min={0}\n                border={0}\n                type={\"number\"}\n                required={true}\n                fontWeight={500}\n                textAlign={'center'}\n                height={['3em','3.4em']}\n                boxShadow={'none !important'}\n                max={this.state.maxInputValue}\n                backgroundColor={'cardBgHover'}\n                onChange={this.changeInputValue.bind(this)}\n                placeholder={`Insert ${this.props.selectedToken.toUpperCase()} amount`}\n                value={this.state.inputValue && !isNaN(this.state.inputValue) ? this.state.inputValue : ''}\n              />\n            </Flex>\n            <Flex\n              mt={3}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                buttonProps={{\n                  width:[1,1/2],\n                }}\n                handleClick={this.loadChart.bind(this)}\n              >\n                CALCULATE\n              </RoundButton>\n            </Flex>\n          </Flex>\n          <Flex\n            mt={[3,0]}\n            width={[1,0.7]}\n            id={'estimated-earnings-chart'}\n          >\n            {\n              this.props.isMobile ? (\n                <Flex\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  {\n                    this.state.chartData !== null && this.state.chartData.map((v,index) => (\n                      <Flex\n                        py={2}\n                        my={2}\n                        width={1}\n                        flexDirection={'row'}\n                        key={`earnings_${index}`}\n                      >\n                        <Flex\n                          width={0.35}\n                          alignItems={'center'}\n                          justifyContent={'flex-start'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'legend'}\n                          >\n                            {v.label}\n                          </Text>\n                        </Flex>\n                        <Flex\n                          width={0.65}\n                          position={'relative'}\n                          alignItems={'center'}\n                          minHeight={['20px','35px']}\n                          justifyContent={'center'}\n                        >\n                          <Flex\n                            zIndex={1}\n                            position={'relative'}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontSize={1}\n                              fontWeight={3}\n                              color={'counter'}\n                            >\n                              {this.functionsUtil.abbreviateNumber(v.value,2,4)} {this.props.selectedToken}\n                            </Text>\n                          </Flex>\n                          <Flex\n                            right={0}\n                            width={v.perc}\n                            position={'absolute'}\n                            height={['20px','35px']}\n                            borderRadius={['20px 0 0 20px','35px 0 0 35px']}\n                            style={{background:`linear-gradient(-90deg, rgba(${v.color},0) 0%, rgba(${v.color},1) 100%)`}}\n                          ></Flex>\n                        </Flex>\n                      </Flex>\n                    ))\n                  }\n                </Flex>\n              ) : (\n                <GenericChart\n                  type={Bar}\n                  height={250}\n                  showLoader={true}\n                  {...this.state.chartProps}\n                  data={this.state.chartData}\n                  parentId={'estimated-earnings-chart'}\n                />\n              )\n            }\n          </Flex>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default EstimatedEarnings;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Box, Flex, Icon, Text } from \"rimble-ui\";\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport AssetsList from '../AssetsList/AssetsList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport FundsOverview from '../FundsOverview/FundsOverview';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport DepositRedeem from '../DepositRedeem/DepositRedeem';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EstimatedEarnings from '../EstimatedEarnings/EstimatedEarnings';\n\nclass AssetPage extends Component {\n\n  state = {\n    tokenApy:{},\n    tokenFees:{},\n    tokenBalance:{},\n    tokenApproved:{},\n    activeModal:null,\n    idleTokenPrice:{},\n    userHasFunds:false,\n    govTokensBalance:{},\n    idleTokenBalance:{},\n    redeemableBalance:{},\n    govTokensDisabled:{},\n    availableGovTokens:{},\n    tokenFeesPercentage:{},\n    componentMounted:false,\n    govTokensUserBalances:{}\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadTokensInfo(){\n\n    if (!this.props.account || !this.props.contractsInitialized){\n      return this.setState({\n        userHasFunds:false\n      });\n    }\n\n    const newState = {...this.state};\n    // await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n    const token = this.props.selectedToken;\n    const tokenConfig = this.props.availableTokens[token];\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[token] = tokenConfig;\n\n    const [\n      tokenFeesPercentage,\n      idleTokenPrice,\n      tokenApy,\n      tokenBalance,\n      tokenFees,\n      idleTokenBalance,\n      tokenApproved,\n      govTokensUserBalances,\n      govTokensBalance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenFees(tokenConfig),\n      this.functionsUtil.getIdleTokenPrice(tokenConfig),\n      this.functionsUtil.getTokenApy(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(token,this.props.account),\n      this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n      this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(token,tokenConfig.idle.address,this.props.account),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null,null),\n      this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,govTokenAvailableTokens,'DAI',false)\n    ]);\n\n    newState.tokenFees[token] = tokenFees;\n    newState.tokenBalance[token] = tokenBalance;\n    newState.tokenApproved[token] = tokenApproved;\n    newState.idleTokenPrice[token] = idleTokenPrice;\n    newState.idleTokenBalance[token] = idleTokenBalance;\n    newState.govTokensBalance[token] = govTokensBalance;\n    newState.tokenFeesPercentage[token] = tokenFeesPercentage;\n    newState.govTokensUserBalances[token] = govTokensUserBalances;\n    newState.govTokensDisabled[token] = tokenConfig.govTokensDisabled;\n    newState.tokenApy[token] = tokenApy && !tokenApy.isNaN() ? tokenApy : null;\n    newState.redeemableBalance[token] = idleTokenBalance && idleTokenPrice ? idleTokenBalance.times(idleTokenPrice) : this.functionsUtil.BNify(0);\n    // });\n\n    newState.availableGovTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n\n    // console.log('govTokensBalance',newState.govTokensBalance);\n    // console.log('availableGovTokens',newState.availableGovTokens);\n    // console.log('govTokensUserBalances',govTokenAvailableTokens,newState.govTokensUserBalances);\n\n    newState.componentMounted = true;\n    newState.userHasFunds = this.props.account && newState.idleTokenBalance[token] && this.functionsUtil.BNify(newState.idleTokenBalance[token]).gt(0);\n\n    // console.log('loadTokensInfo',this.props.account,this.props.contractsInitialized,newState);\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n    window.loadTokensInfo = this.loadTokensInfo.bind(this);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n    if (accountChanged || transactionsChanged || availableTokensChanged || selectedTokenChanged){\n      // console.log('AssetPage - availableTokensChanged',availableTokensChanged);\n      this.loadTokensInfo();\n    }\n  }\n\n  render() {\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const tokenConfig = this.functionsUtil.getTokenConfig(this.props.selectedToken)\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n\n    const tokenLabel = tokenConfig ? tokenConfig.label || tokenConfig.token : this.props.selectedToken;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            <Breadcrumb\n              {...this.props}\n              isMobile={this.props.isMobile}\n              path={[tokenLabel]}\n              handleClick={ e => this.props.goToSection(this.props.selectedStrategy) }\n              text={this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])}\n            />\n          </Flex>\n          <Flex\n            width={0.5}\n            justifyContent={'flex-end'}\n          >\n            <CardIconButton\n              icon={'Add'}\n              {...this.props}\n              text={'Add funds'}\n              handleClick={ e => this.setActiveModal('buy') }\n            />\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Deposit / Redeem\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          (\n            <>\n              <Flex\n                width={1}\n              >\n                <DepositRedeem\n                  {...this.props}\n                  tokenFees={this.state.tokenFees[this.props.selectedToken]}\n                  tokenBalance={this.state.tokenBalance[this.props.selectedToken]}\n                  tokenApproved={this.state.tokenApproved[this.props.selectedToken]}\n                  govTokensBalance={this.state.govTokensBalance[this.props.selectedToken]}\n                  idleTokenBalance={this.state.idleTokenBalance[this.props.selectedToken]}\n                  redeemableBalance={this.state.redeemableBalance[this.props.selectedToken]}\n                  tokenFeesPercentage={this.state.tokenFeesPercentage[this.props.selectedToken]}\n                  govTokensUserBalances={this.state.govTokensUserBalances[this.props.selectedToken]}\n                />\n              </Flex>\n              {\n                this.state.userHasFunds && nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && Object.keys(nexusMutualConfig.props.availableTokens).includes(this.props.tokenConfig.idle.token) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      titleProps={{\n                        mb:3,\n                        mt:[3,4],\n                      }}\n                      title={'Coverage'}\n                      availableTokens={[this.props.tokenConfig.idle.token]}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        id={'no-active-cover'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:[3,4],\n                            width:[1,'auto'],\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              my={[0,2]}\n                              size={'3em'}\n                              name={nexusMutualConfig.icon}\n                            />\n                            <Text\n                              mb={1}\n                              fontSize={[2,3]}\n                              fontWeight={500}\n                              textAlign={'center'}\n                            >\n                              You don't have an active coverage\n                            </Text>\n                            <Text\n                              mb={2}\n                              color={'link'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                              textAlign={'center'}\n                            >\n                              {nexusMutualConfig.desc}\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:1,\n                                width:'auto',\n                                minHeight:'40px',\n                                size:this.props.isMobile ? 'small' : 'medium'\n                              }}\n                              handleClick={ e => this.props.goToSection(`tools/${nexusMutualConfig.route}/deposit/${this.props.tokenConfig.idle.token}`) }\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'center'}\n                              >\n                                <Text\n                                  color={'white'}\n                                  fontSize={[1,2]}\n                                  fontWeight={500}\n                                >\n                                  Get Covered\n                                </Text>\n                                <Icon\n                                  ml={1}\n                                  size={'1.3em'}\n                                  name={'KeyboardArrowRight'}\n                                />\n                              </Flex>\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </ActiveCoverages>\n                  </Flex>\n                )\n              }\n              {\n                this.state.userHasFunds && this.props.account && (\n                  <Flex\n                    mb={[0,4]}\n                    width={1}\n                    flexDirection={'column'}\n                    id={'funds-overview-container'}\n                  >\n                    <Title my={[3,4]}>Funds Overview</Title>\n                    <FundsOverview\n                      {...this.props}\n                      tokenFees={this.state.tokenFees[this.props.selectedToken]}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.userHasFunds && this.props.account && !this.state.govTokensDisabled[this.props.selectedToken] && Object.keys(this.state.availableGovTokens).length>0 && \n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.state.availableGovTokens)}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.30,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={this.state.availableGovTokens}\n                    />\n                  </Flex>\n              }\n              {\n              this.props.account && this.state.tokenApy[this.props.selectedToken] && \n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  flexDirection={'column'}\n                  id={'estimated-earnings-container'}\n                >\n                  <Title my={[3,4]}>Estimated earnings</Title>\n                  <EstimatedEarnings\n                    {...this.props}\n                    tokenApy={this.state.tokenApy[this.props.selectedToken]}\n                  />\n                </Flex>\n              }\n              {\n              this.props.account && \n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  flexDirection={'column'}\n                  id={'transactions-container'}\n                >\n                  <Title my={[3,4]}>Transactions</Title>\n                  <TransactionsList\n                    {...this.props}\n                    enabledTokens={[this.props.selectedToken]}\n                    cols={[\n                      {\n                        title: this.props.isMobile ? '' : 'HASH',\n                        props:{\n                          width:[0.15,0.24]\n                        },\n                        fields:[\n                          {\n                            name:'icon',\n                            props:{\n                              mr:[0,2]\n                            }\n                          },\n                          {\n                            name:'hash',\n                            mobile:false\n                          }\n                        ]\n                      },\n                      {\n                        title:'ACTION',\n                        mobile:false,\n                        props:{\n                          width:0.15,\n                        },\n                        fields:[\n                          {\n                            name:'action'\n                          }\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        props:{\n                          width:[0.32,0.23],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.18,0.22],\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2]\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                      {\n                        title:'AMOUNT',\n                        props:{\n                          width:0.19,\n                        },\n                        fields:[\n                          {\n                            name:'amount'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ASSET',\n                        props:{\n                          width:[0.15,0.20],\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:[0,2],\n                              height:['1.4em','1.6em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          },\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              }\n            </>\n          )\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex, Link } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass BetaModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.functionsUtil.setLocalStorage('betaApproved',true);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Beta Version'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                You're about to enter Idle Finance Beta Dashboard – this is the place where several un-audited and risky features are being tested!<br />Please use at your own risk, or visit the official website at <Link fontSize={2} mainColor={'primary'} hoverColor={'primary'} href={this.functionsUtil.getGlobalConfig(['baseURL'])}>{this.functionsUtil.getGlobalConfig(['baseURL'])}</Link>.\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Continue Anyway\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BetaModal;","import React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Tooltip, Link, Input } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass CurveDeposit extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    maxSlippage:0.2,\n    depositSlippage:null,\n    redeemableBalance:null,\n    migrationContract:null,\n    curveTokensBalance:null,\n    migrationSucceeded:false,\n    fastBalanceSelector:null,\n    migrationContractApproved:false,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.initToken();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const idleTokenBalanceChanged = prevProps.idleTokenBalance !== this.props.idleTokenBalance;\n    if (accountChanged || idleTokenBalanceChanged){\n      await this.initToken();\n    }\n    \n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = this.state.inputValue !== prevState.inputValue;\n    if (inputValueChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  changeInputValue = (e) => {\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(inputValue);\n\n    const fastBalanceSelector = null;\n\n    this.setState((prevState) => ({\n      inputValue,\n      fastBalanceSelector,\n    }));\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.idleTokenBalance ? this.functionsUtil.BNify(this.props.idleTokenBalance).times(selectedPercentage) : null;\n\n    this.checkButtonDisabled(inputValue);\n\n    this.setState({\n      inputValue\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n\n    const buttonDisabled = !amount || amount.gt(this.state.idleTokenBalance);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    const migrationContract = this.state.migrationContract;\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventAction: 'approve',\n            eventCategory: 'CurveDeposit',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              txHash:null,\n              loading:false\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              txHash\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.selectedToken,migrationContract.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:true\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  deposit = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const callbackDeposit = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventAction: this.props.selectedToken,\n        eventValue: inputValue.toFixed()\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      }));\n\n      if (typeof this.props.callbackDeposit === 'function' && txSucceeded){\n        this.props.callbackDeposit(tx);\n      }\n    };\n\n    const callbackReceiptDeposit = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.state.migrationContract.name;\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n    const depositParams = await this.getMigrationParams(_amount);\n\n    this.props.contractMethodSendWrapper(contractName, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setMaxSlippage = (maxSlippage) => {\n    this.setState({\n      maxSlippage\n    });\n  }\n\n  async getMigrationParams(toMigrate){\n    const migrationParams = [];\n    const curveTokenConfig = this.functionsUtil.getGlobalConfig(['curve','availableTokens',this.props.selectedToken]);\n\n    if (!curveTokenConfig){\n      return false;\n    }\n    \n    const migrationContractParams = curveTokenConfig.migrationParams;\n    if (migrationContractParams.n_coins){\n      const amounts = await this.functionsUtil.getCurveAmounts(this.props.selectedToken,toMigrate,true);\n      let minMintAmount = await this.functionsUtil.getCurveTokenAmount(amounts);\n\n      if (this.state.maxSlippage){\n        minMintAmount = this.functionsUtil.BNify(minMintAmount);\n        minMintAmount = minMintAmount.minus(minMintAmount.times(this.functionsUtil.BNify(this.state.maxSlippage).div(100)));\n        minMintAmount = this.functionsUtil.integerValue(minMintAmount);\n      }\n\n      migrationParams.push(amounts);\n      migrationParams.push(minMintAmount);\n    }\n\n    return migrationParams;\n  }\n\n  async calculateSlippage(){\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n\n    if (inputValue){\n      let underlyingBalanceToDeposit = inputValue;\n      if (underlyingBalanceToDeposit){\n        const idleTokenPrice = await this.functionsUtil.getIdleTokenPrice(this.props.tokenConfig);\n        if (idleTokenPrice){\n          underlyingBalanceToDeposit = underlyingBalanceToDeposit.times(idleTokenPrice);\n        }\n      } else {\n        underlyingBalanceToDeposit = this.functionsUtil.BNify(0);\n      }\n\n      const normalizeIdleTokenBalance = this.functionsUtil.normalizeTokenAmount(underlyingBalanceToDeposit,this.props.tokenConfig.decimals);\n      let depositSlippage = await this.functionsUtil.getCurveSlippage(this.props.tokenConfig.idle.token,normalizeIdleTokenBalance);\n      if (depositSlippage){\n        depositSlippage = depositSlippage.times(100);\n      }\n\n      this.setState({\n        depositSlippage\n      });\n    }\n  }\n\n  async checkMigrationContractApproved(){\n    const migrationContract = this.state.migrationContract || await this.functionsUtil.getCurveSwapContract();\n    if (migrationContract){\n      return await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.idle.token,migrationContract.address,this.props.account);\n    }\n    return false;\n  }\n\n  async initToken(){\n\n    // Init and check migration contract\n    const migrationContract = await this.functionsUtil.getCurveSwapContract();\n    const migrationContractApproved = await this.checkMigrationContractApproved();\n\n    this.setState({\n      migrationContract,\n      migrationContractApproved\n    });\n  }\n\n  approveCallback = () => {\n    this.initToken();\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.props.selectedToken){\n      return null;\n    }\n\n    // const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    const hasCurveTokens = this.state.curveTokensBalance && this.state.curveTokensBalance.gt(0);\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n            {\n              this.props.idleTokenBalance && this.props.idleTokenBalance.gt(0) && (\n                <Box\n                  width={1}\n                >\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                          color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Approve the Curve contract\n                        </Text>\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <Icon\n                          size={'1.5em'}\n                          name={ hasCurveTokens ? 'CheckBox' : 'LooksTwo'}\n                          color={ hasCurveTokens ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                        />\n                        <Text\n                          ml={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Deposit your {this.props.tokenConfig.idle.token}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </DashboardCard>\n                  {\n                    !this.state.migrationContractApproved ?\n                      this.state.processing.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            web3={this.props.web3}\n                            waitText={`Approve estimated in`}\n                            hash={this.state.processing.txHash}\n                            endMessage={`Finalizing approve request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                          />\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'LockOpen'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              To deposit your {this.props.selectedToken} in the Curve Pool you need to approve the Smart-Contract first.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={this.approve.bind(this)}\n                            >\n                              Approve\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    : this.state.processing.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          waitText={`Deposit estimated in`}\n                          hash={this.state.processing.txHash}\n                          endMessage={`Finalizing deposit request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Choose max slippage:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`Max additional slippage on top of the one shown below`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              color={'cellTitle'}\n                              name={\"InfoOutline\"}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          {\n                            [0.2,0.5,1,5].map( slippage => (\n                              <FastBalanceSelector\n                                cardProps={{\n                                  p:1\n                                }}\n                                textProps={{\n                                  fontSize:1\n                                }}\n                                percentage={slippage}\n                                key={`selector_${slippage}`}\n                                onMouseDown={()=>this.setMaxSlippage(slippage)}\n                                isActive={this.state.maxSlippage === parseFloat(slippage)}\n                              />\n                            ))\n                          }\n                        </Flex>\n                        <Flex\n                          mt={2}\n                          mb={3}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={this.state.depositSlippage ? 'space-between' : 'flex-end'}\n                          >\n                            {\n                              this.state.depositSlippage && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                >\n                                  <Text\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    textAlign={'right'}\n                                    style={{\n                                      whiteSpace:'nowrap'\n                                    }}\n                                    color={ parseFloat(this.state.depositSlippage.toFixed(3))>0 ? this.props.theme.colors.transactions.status.failed : this.props.theme.colors.transactions.status.completed }\n                                  >\n                                    {\n                                      parseFloat(this.state.depositSlippage.toFixed(3)) === 0 ?\n                                        'No Slippage'\n                                      : `${ this.state.depositSlippage.gt(0) ? 'Slippage: ' : 'Bonus: ' } ${this.state.depositSlippage.abs().toFixed(3)}%`\n                                    }\n                                  </Text>\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.state.depositSlippage.gt(0) ? 'Slippage comes from depositing too many coins not in balance, and current coin prices are additionally accounted for' : 'Bonus comes as an advantage from current coin prices which usually appears for coins which are high in balance'}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                </Flex>\n                              )\n                            }\n                            {\n                              this.props.idleTokenBalance && (\n                                <Flex\n                                  width={1}\n                                  maxWidth={'50%'}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'flex-end'}\n                                >\n                                  <Link\n                                    fontSize={1}\n                                    fontWeight={3}\n                                    color={'dark-gray'}\n                                    textAlign={'right'}\n                                    hoverColor={'copyColor'}\n                                    onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    style={{\n                                      maxWidth:'100%',\n                                      overflow:'hidden',\n                                      whiteSpace:'nowrap',\n                                      textOverflow:'ellipsis'\n                                    }}\n                                  >\n                                    {this.props.idleTokenBalance.toFixed(this.props.isMobile ? 2 : 4)} {this.props.selectedToken}\n                                  </Link>\n                                </Flex>\n                              )\n                            }\n                          </Flex>\n                          <Input\n                            min={0}\n                            type={\"number\"}\n                            required={true}\n                            height={'3.4em'}\n                            borderRadius={2}\n                            fontWeight={500}\n                            boxShadow={'none !important'}\n                            placeholder={`Insert amount`}\n                            onChange={this.changeInputValue.bind(this)}\n                            border={`1px solid ${this.props.theme.colors.divider}`}\n                            value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                          />\n                          <Flex\n                            mt={2}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              [25,50,75,100].map( percentage => (\n                                <FastBalanceSelector\n                                  percentage={percentage}\n                                  key={`selector_${percentage}`}\n                                  onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                  isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                                />\n                              ))\n                            }\n                          </Flex>\n                          <Flex\n                            mt={2}\n                            justifyContent={'center'}\n                          >\n                            <RoundButton\n                              buttonProps={{\n                                mt:2,\n                                width:[1,1/2],\n                                disabled:this.state.buttonDisabled\n                              }}\n                              handleClick={this.deposit.bind(this)}\n                            >\n                              Deposit\n                            </RoundButton>\n                          </Flex>\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                </Box>\n              )\n            }\n          {\n            /*\n            this.state.tokenConfig && this.state.redeemableBalance ? (\n              <Box width={1}>\n                <Migrate\n                  {...this.props}\n                  showActions={false}\n                  getTokenPrice={false}\n                  migrationTextProps={{\n                    fontWeight:500\n                  }}\n                  isMigrationTool={true}\n                  migrationImage={{\n                    mb:1,\n                    height:'1.8em',\n                    src:curveConfig.params.image\n                  }}\n                  showBalanceSelector={true}\n                  waitText={'Deposit estimated in'}\n                  tokenConfig={this.state.tokenConfig}\n                  callbackApprove={this.approveCallback.bind(this)}\n                  migrationParams={this.getMigrationParams.bind(this)}\n                  migrationCallback={this.migrationCallback.bind(this)}\n                  approveText={`To deposit your ${this.props.tokenConfig.idle.token} you need to approve Curve smart-contract first.`}\n                  migrationText={`You can deposit ${this.state.redeemableBalance.toFixed(4)} ${this.props.tokenConfig.idle.token} in the Curve Pool${ this.state.depositSlippage ? (this.state.depositSlippage.gte(0) ? ` with <span style=\"color:${this.props.theme.colors.transactions.status.failed}\">${this.state.depositSlippage.times(100).toFixed(2)}% of slippage</span>` : ` with <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${Math.abs(parseFloat(this.state.depositSlippage.times(100).toFixed(2)))}% of bonus</span>`) : '' }.`}\n                >\n                  {\n                    !this.props.account ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'Input'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Please connect with your wallet interact with Idle.\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:2,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.props.connectAndValidateAccount}\n                          >\n                            Connect\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.migrationSucceeded ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'DoneAll'}\n                                color={this.props.theme.colors.transactions.status.completed}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You have successfully deposited your {this.props.tokenConfig.idle.token} in the Curve Pool!\n                              </Text>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                size={'2.3em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={2}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.tokenConfig.idle.token} in your wallet.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                </Migrate>\n              </Box>\n            ) : null\n            */\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CurveDeposit;","import theme from '../theme';\nimport { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityCurve extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const curveTxs = await this.functionsUtil.getCurveTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = [];\n    const processedTxs = {};\n    let firstTxTimestamp = null;\n    let totalBalance = this.functionsUtil.BNify(0);\n    const curvePoolContract = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n        \n        firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n        const curveTokens = this.functionsUtil.BNify(tx.curveTokens);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            totalBalance = totalBalance.plus(curveTokens);\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          case 'CurveTransferOut':\n            totalBalance = totalBalance.minus(curveTokens);\n          break;\n          default:\n          break;\n        }\n\n        // Reset totalBalance if below zero\n        if (totalBalance.lt(0)){\n          totalBalance = this.functionsUtil.BNify(0);\n        }\n\n        const action = tx.action;\n        const balance = totalBalance;\n        const timeStamp = parseInt(tx.timeStamp);\n        const curveTokenPrice = this.functionsUtil.fixTokenDecimals(tx.curveTokenPrice,curvePoolContract.decimals);\n\n        // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY/MM/DD HH:mm'),tx.hash,tx.action,curveTokens.toString(),totalBalance.toString());\n\n        if (!curveTokenPrice.isNaN() && !curveTokenPrice.isNaN()){\n          tokensBalance.push({\n            action,\n            balance,\n            timeStamp,\n            curveTokens,\n            curveTokenPrice\n          });\n\n          processedTxs[tx.hash].push(action);\n        }\n      });\n    }\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    let aggregatedBalance = this.functionsUtil.BNify(0);\n    // let curveTokenBalance = this.functionsUtil.BNify(0);\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = await this.functionsUtil.getTokenApiData(Object.values(this.props.availableTokens)[0].address,false,firstTxTimestamp,null,false,3600);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      let foundBalances = {};\n      let tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      // eslint-disable-next-line\n      const filteredTokenData = tokensData.filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n\n      // eslint-disable-next-line\n      let filteredBalances = tokensBalance.filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n      \n      if (!filteredBalances.length){\n        if (prevBalances){\n          filteredBalances = prevBalances;\n          const lastFilteredTx = Object.values(filteredBalances).pop();\n          const currentBalance = parseFloat(lastFilteredTx.balance);\n\n          const lastTokenData = Object.values(filteredTokenData).pop();\n          let curveTokenPrice = null;\n          if (lastTokenData){\n            curveTokenPrice = await this.functionsUtil.getCurveTokenPrice(lastTokenData.blocknumber);\n          }\n\n          // Take idleToken price from API and calculate new balance\n          if (currentBalance>0 && timeStamp>firstTxTimestamp && curveTokenPrice){\n            // Set new curveTokenPrice\n            lastFilteredTx.curveTokenPrice = curveTokenPrice;\n            filteredBalances = [lastFilteredTx];\n          }\n        } else {\n          filteredBalances = [{\n            balance:this.functionsUtil.BNify(0),\n            curveTokenPrice:this.functionsUtil.BNify(0)\n          }];\n        }\n      }\n\n      const lastTx = Object.assign([],filteredBalances).pop();\n      let lastTxBalance = this.functionsUtil.BNify(lastTx.balance).times(lastTx.curveTokenPrice);\n\n      tokensBalances[curvePoolContract.token] = this.functionsUtil.BNify(lastTx.balance);\n      aggregatedBalance = lastTxBalance;\n\n      foundBalances = filteredBalances;\n\n      // console.log(momentDate.format('YYYY/MM/DD 00:00'),lastTx.balance.toString(),lastTx.curveTokenPrice.toString(),lastTxBalance.toString());\n\n      if (startDate === null || momentDate.isSameOrAfter(startDate)){\n        \n        if (momentDate.isAfter(new Date(),'day')){\n          momentDate = this.functionsUtil.strToMoment(new Date());\n        }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        const aggregatedBalanceParsed = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalanceParsed;\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalanceParsed : Math.min(minChartValue,aggregatedBalanceParsed);\n        maxChartValue = maxChartValue === null ? aggregatedBalanceParsed : Math.max(maxChartValue,aggregatedBalanceParsed);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    // Add token Data\n    chartData.push({\n      id:'USD',\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens','USD','color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      areaOpacity:0.1,\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:theme.colors.legend,\n              fontFamily: theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: '#dbdbdb', strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 50 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0 &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const tokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n                if (tokenInfo){\n                  const tokenName = tokenInfo.name ? tokenInfo.name : token;\n                  const color = tokenInfo.color.hex;\n                  const balance = point.data.balances[token];\n                  let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                  if (parseFloat(balance)>=0.01){\n                    return (\n                      <ChartCustomTooltipRow\n                        label={tokenName}\n                        color={color}\n                        key={`row_${token}`}\n                        value={`${formattedBalance}`}\n                      />\n                    );\n                  }\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityCurve;","import theme from '../theme';\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Heading, Text } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioEquityCurve from '../PortfolioEquityCurve/PortfolioEquityCurve';\n\nclass FundsOverviewCurve extends Component {\n\n  state = {\n    compAPR:null,\n    aggregatedValues:[],\n    govTokensUserBalance:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    await this.functionsUtil.getCurveAvgBuyPrice();\n\n    // debugger;\n\n    await this.functionsUtil.getCurveAvgSlippage();\n\n    // debugger;\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const [govTokensUserBalance,avgAPY,days] = await Promise.all([\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,'DAI'),\n      this.functionsUtil.loadAssetField('avgAPY',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadAssetField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '-') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <AssetField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    let [tokenAllocation,compAPR] = await Promise.all([\n      this.functionsUtil.getTokenAllocation(this.props.tokenConfig,false,false),\n      this.functionsUtil.getCompAPR(this.props.selectedToken,this.props.tokenConfig)\n    ]);\n\n    if (tokenAllocation){\n      const compoundInfo = this.props.tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (compoundInfo){\n        if (tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()]){\n          const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[compoundInfo.address.toLowerCase()];\n          compAPR = compAPR.times(compoundAllocationPerc);\n        }\n      }\n    }\n\n    this.setState({\n      compAPR,\n      aggregatedValues,\n      govTokensUserBalance\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Text\n                          mt={2}\n                          fontWeight={2}\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                        >\n                          {v.props.title}\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          <Flex\n            width={1}\n            ml={[0,3]}\n            id={\"funds-overview\"}\n          >\n            <PortfolioEquityCurve\n              {...this.props}\n              chartHeight={350}\n              parentId={'funds-overview'}\n              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n            />\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'amountLentCurve',\n                  props:{\n                    decimals:4,\n                    maxPrecision:8,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'redeemableBalanceCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-9px'}\n              >\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'earningsPercCurve',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'earningsCounterCurve',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              /*\n              <Flex\n                mb={[2,0]}\n                width={[1,1/5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'flex-start'}\n              >\n                <Title\n                  mb={2}\n                  fontSize={[3,4]}\n                  component={Heading.h3}\n                >\n                  Fees\n                </Title>\n                <AssetField\n                  {...this.props}\n                  token={this.props.selectedToken}\n                  fieldInfo={{\n                    name:'feesCounter',\n                    props:{\n                      decimals:7,\n                      maxPrecision:8,\n                      style:{\n                        fontWeight:300,\n                        fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                        color:theme.colors.counter\n                      },\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n              */\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Current APY\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/5]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Avg Slippage\n              </Title>\n              <AssetField\n                {...this.props}\n                token={this.props.selectedToken}\n                fieldInfo={{\n                  name:'curveAvgSlippage',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewCurve;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport CurveRedeem from '../CurveRedeem/CurveRedeem';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport CurveDeposit from '../CurveDeposit/CurveDeposit';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewCurve from '../FundsOverviewCurve/FundsOverviewCurve';\n\nclass AssetPage extends Component {\n\n  state = {\n    inputValue:{},\n    processing:{},\n    tokenFees:null,\n    canRedeem:null,\n    canDeposit:null,\n    action:'deposit',\n    activeModal:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    tokenApproved:null,\n    selectedToken:null,\n    availableTokens:{},\n    redeemBalance:null,\n    depositBalance:null,\n    buttonDisabled:false,\n    curveTokenPrice:null,\n    depositSlippage:null,\n    idleTokenBalance:null,\n    withdrawSlippage:null,\n    govTokensBalance:null,\n    curveZapContract:null,\n    curveTokenConfig:null,\n    curveTokensAmounts:{},\n    govTokensDisabled:null,\n    componentMounted:false,\n    curvePoolContract:null,\n    curveSwapContract:null,\n    curveTokenBalance:null,\n    redeemableBalance:null,\n    fastBalanceSelector:{},\n    curveAvailableTokens:{},\n    tokenFeesPercentage:null,\n    redeemUnevenAmounts:false,\n    curveDepositContract:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  toggleUnevenAmounts = (redeemUnevenAmounts) => {\n    this.setState({\n      redeemUnevenAmounts\n    });\n  }\n\n  changeFromToken = (selectedToken) => {\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n    this.props.goToSection(`${curveConfig.params.route}/${selectedToken}`);\n  }\n\n  getSelectedToken(){\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    return this.props.urlParams.param1 && curveAvailableTokens[this.props.urlParams.param1] ? this.props.urlParams.param1 : Object.keys(curveAvailableTokens)[0];\n  }\n\n  setSelectedToken = async (selectedToken) => {\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      availableTokens,\n      curveTokenConfig\n    });\n  }\n\n  loadTokensInfo = async () => {\n\n    const curveAvailableTokens = this.functionsUtil.getGlobalConfig(['curve','availableTokens']);\n    this.setState({\n      curveAvailableTokens\n    });\n\n    const selectedToken = this.getSelectedToken();\n    // Check if token is set the query params\n    if (selectedToken && selectedToken !== this.props.urlParams.param1){\n      this.changeFromToken(selectedToken);\n      return await this.setSelectedToken(selectedToken);\n    } else if (selectedToken !== this.state.selectedToken){\n      await this.setSelectedToken(selectedToken);\n    }\n\n    const newState = {...this.state};\n\n    const availableTokens = this.functionsUtil.getCurveAvailableTokens();\n\n    if (newState.selectedToken !== selectedToken){\n      newState.selectedToken = selectedToken;\n    }\n\n    const curveTokenConfig = curveAvailableTokens[selectedToken];\n    const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n\n    const [\n      curveZapContract,\n      curvePoolContract,\n      curveSwapContract,\n      curveDepositContract\n    ] = await Promise.all([\n      this.functionsUtil.getCurveZapContract(),\n      this.functionsUtil.getCurvePoolContract(),\n      this.functionsUtil.getCurveSwapContract(),\n      this.functionsUtil.getCurveDepositContract()\n    ]);\n\n    newState.curveZapContract = curveZapContract;\n    newState.curvePoolContract = curvePoolContract;\n    newState.curveSwapContract = curveSwapContract;\n    newState.curveDepositContract = curveDepositContract;\n\n    newState.availableTokens = availableTokens;\n\n\n    // console.log('curveTokenPrice',newState.curveTokenPrice.toFixed(6),'curveTokenBalance',newState.curveTokenBalance.toFixed(6),'redeemableBalance',newState.redeemableBalance.toFixed(20),'tokenBalance',newState.tokenBalance.toFixed(20));\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[selectedToken] = tokenConfig;\n\n    newState.tokenConfig = tokenConfig;\n    newState.curveTokenConfig = curveTokenConfig;\n\n    if (this.props.account){\n      [\n        newState.curveTokenPrice,\n        newState.curveTokenBalance,\n        newState.tokenFeesPercentage,\n        newState.tokenFees,\n        newState.tokenBalance,\n        newState.idleTokenBalance,\n        newState.tokenApproved,\n      ] = await Promise.all([\n        this.functionsUtil.getCurveTokenPrice(),\n        this.functionsUtil.getCurveTokenBalance(),\n        this.functionsUtil.getTokenFees(tokenConfig),\n        this.functionsUtil.getUserTokenFees(tokenConfig,this.props.account),\n        this.functionsUtil.getTokenBalance(selectedToken,this.props.account),\n        this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account),\n        this.functionsUtil.checkTokenApproved(selectedToken,curveDepositContract.address,this.props.account),\n      ]);\n\n\n      newState.processing = {\n        redeem:{\n          txHash:null,\n          loading:false\n        },\n        deposit:{\n          txHash:null,\n          loading:false\n        },\n        approve:{\n          txHash:null,\n          loading:false\n        },\n      };\n      newState.inputValue = {\n        redeem:null,\n        deposit:null\n      };\n      newState.fastBalanceSelector = {\n        redeem:null,\n        deposit:null\n      };\n\n      newState.componentMounted = true;\n      newState.depositBalance = newState.tokenBalance;\n      newState.redeemBalance = newState.redeemableBalance;\n      newState.govTokensDisabled = tokenConfig.govTokensDisabled;\n      newState.canRedeem = newState.curveTokenBalance && newState.curveTokenBalance.gt(0);\n      newState.canDeposit = newState.idleTokenBalance && newState.idleTokenBalance.gt(0);\n      newState.redeemableBalance = newState.curveTokenBalance ? newState.curveTokenBalance.times(newState.curveTokenPrice) : this.functionsUtil.BNify(0);\n    }\n\n    this.setState(newState);\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokensInfo();\n  }\n\n  async calculateSlippage(){\n    const amount = this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]) : null;\n\n    if (!amount || amount.lte(0)){\n      return false;\n    }\n\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.curvePoolContract.decimals);\n    const newState = {};\n\n    switch (this.state.action){\n      case 'deposit':\n        newState.depositBalance = amount;\n        newState.depositSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      case 'redeem':\n        newState.redeemBalance = amount;\n        newState.withdrawSlippage = await this.functionsUtil.getCurveSlippage(this.state.tokenConfig.idle.token,normalizedAmount,true);\n      break;\n      default:\n      break;\n    }\n    // console.log('calculateSlippage',newState);\n\n    this.setState(newState);\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenChanged = prevProps.urlParams.param1 !== this.props.urlParams.param1;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || transactionsChanged || tokenChanged){\n      await this.loadTokensInfo();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const redeemUnevenAmountsChanged = this.state.redeemUnevenAmounts !== prevState.redeemUnevenAmounts;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged || redeemUnevenAmountsChanged){\n      this.setInputValue();\n    }\n\n    if (actionChanged){\n      this.updateAssetSelector();\n    }\n\n    const inputChanged = prevState.inputValue[this.state.action] !== this.state.inputValue[this.state.action];\n    if (inputChanged){\n      this.calculateSlippage();\n    }\n  }\n\n  updateAssetSelector = async () => {\n    const newState = {};\n    switch (this.state.action){\n      case 'deposit':\n        this.loadTokensInfo();\n      break;\n      case 'redeem':\n        // this.loadTokensInfo();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['curve','poolContract']);\n        newState.curveAvailableTokens = {};\n        newState.curveTokenConfig = tokenConfig;\n        newState.selectedToken = tokenConfig.token;\n        newState.curveAvailableTokens[tokenConfig.token] = tokenConfig;\n      break;\n      default:\n      break;\n    }\n\n    this.setState(newState);\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n    let amount = null;\n\n    switch(this.state.action){\n      case 'deposit':\n        amount = this.state.tokenBalance ? this.functionsUtil.BNify(this.state.tokenBalance).times(selectedPercentage) : null;\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          amount = this.state.curveTokenBalance ? this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage) : null;\n        } else {\n          amount = this.state.redeemableBalance ? this.functionsUtil.BNify(this.state.redeemableBalance).times(selectedPercentage) : null;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    this.checkButtonDisabled(amount);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n\n    if (!this.state.action){\n      return false;\n    }\n\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n\n    let buttonDisabled = false;\n\n    switch (this.state.action){\n      case 'deposit':\n        buttonDisabled = buttonDisabled || (amount && amount.gt(this.state.tokenBalance));\n      break;\n      case 'redeem':\n        if (this.state.redeemUnevenAmounts){\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.curveTokenBalance)) );\n        } else {\n          buttonDisabled = !this.state.canRedeem || (buttonDisabled || (amount && amount.gt(this.state.redeemableBalance)) );\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  cancelTransaction = async () => {\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        [this.state.action]:{\n          txHash:null,\n          loading:false\n        }\n      }\n    }));\n  }\n\n  approveToken = async () => {\n\n    // Check if the token is already approved\n    const tokenApproved = this.state.tokenApproved;\n\n    if (tokenApproved){\n      return this.setState((prevState) => ({\n        tokenApproved,\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    }\n\n    const callbackApprove = (tx,error)=>{\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Approve',\n        eventAction: this.state.selectedToken,\n        eventLabel: tx.status,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        tokenApproved: (tx.status === 'success'), // True\n        processing: {\n          ...prevState.processing,\n          approve:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptApprove = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          approve:{\n            ...prevState.processing['approve'],\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.functionsUtil.enableERC20(this.state.selectedToken,this.state.curveDepositContract.address,callbackApprove,callbackReceiptApprove);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        approve:{\n          txHash:null,\n          loading:true\n        }\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    let contractSendResult = null;\n    const inputValue = this.state.inputValue[this.state.action];\n    const selectedPercentage = this.getFastBalanceSelector();\n\n    let loading = true;\n\n    switch (this.state.action){\n      // Handle deposit in curve\n      case 'deposit':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        const tokensToDeposit = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals);\n\n        const callbackDeposit = (tx,error) => {\n\n          if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txError = tx.status === 'error';\n          const txSucceeded = tx.status === 'success';\n\n          const eventData = {\n            eventCategory: 'Deposit',\n            eventAction: this.state.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              activeModal:'share',\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          } else if (this.state.metaTransactionsEnabled && txError){\n            this.setState({\n              txError:{\n                [this.state.action]: true\n              }\n            });\n          }\n        };\n\n        const callbackReceiptDeposit = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,tokensToDeposit);\n        const minMintAmount = await this.functionsUtil.genericContractCall(this.state.curveSwapContract.name,'calc_token_amount',[amounts,true]);\n        const depositParams = [amounts,minMintAmount];\n\n        // No need for callback atm\n        contractSendResult = await this.props.contractMethodSendWrapper(this.state.curveDepositContract.name, 'add_liquidity', depositParams, null, callbackDeposit, callbackReceiptDeposit);\n      break;\n      case 'redeem':\n\n        if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n          return false;\n        }\n\n        let curveTokensToRedeem = null;\n        if (selectedPercentage){\n          curveTokensToRedeem = this.functionsUtil.BNify(this.state.curveTokenBalance).times(selectedPercentage);\n        } else {\n          curveTokensToRedeem = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(inputValue,this.state.curvePoolContract.decimals));\n          if (!this.state.redeemUnevenAmounts){\n            const curveTokenPrice = await this.functionsUtil.getCurveTokenPrice();\n            curveTokensToRedeem = curveTokensToRedeem.div(curveTokenPrice);\n          }\n        }\n\n        if (!curveTokensToRedeem){\n          return false;\n        }\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: `CurveRedeem`,\n            eventAction: this.state.selectedToken,\n            eventValue: curveTokensToRedeem.toFixed()\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        const _amount = this.functionsUtil.normalizeTokenAmount(curveTokensToRedeem,this.state.curvePoolContract.decimals).toString();\n        let min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,0);\n\n        const contractName = this.state.curveDepositContract.name;\n        if (this.state.redeemUnevenAmounts){\n          console.log('remove_liquidity_imbalance',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity_imbalance', [min_amounts, _amount], null, callbackRedeem, callbackReceiptRedeem);\n        } else {\n          min_amounts = await this.functionsUtil.getCurveAmounts(this.state.tokenConfig.idle.token,_amount);\n          console.log('remove_liquidity',this.functionsUtil.BNify(inputValue).toString(),_amount.toString(),min_amounts);\n          this.props.contractMethodSendWrapper(contractName, 'remove_liquidity', [_amount, min_amounts], null, callbackRedeem, callbackReceiptRedeem);\n        }\n      break;\n      default: // Reset loading if not handled action\n        loading = false;\n      break;\n    }\n\n    // console.log('contractSendResult',contractSendResult);\n\n    if (contractSendResult !== false){\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          [this.state.action]:{\n            ...prevState.processing[this.state.action],\n            loading\n          }\n        }\n      }));\n    }\n  }\n\n  setAction = (action) => {\n    switch (action.toLowerCase()){\n      case 'deposit':\n        \n      break;\n      case 'redeem':\n        if (!this.state.canRedeem){\n          action = null;\n        }\n      break;\n      default:\n        action = null;\n      break;\n    }\n\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  render(){\n\n    const userHasFunds = this.props.account && this.state.curveTokenBalance && this.functionsUtil.BNify(this.state.curveTokenBalance).gt(0);\n    const canPerformAction = true;\n\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          width={1}\n          mb={[3,4]}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Flex\n            width={0.5}\n          >\n            {\n              <Breadcrumb\n                {...this.props}\n                isMobile={this.props.isMobile}\n                path={['Boost',this.state.selectedToken]}\n                handleClick={ e => this.props.goToSection('best') }\n                text={this.functionsUtil.getGlobalConfig(['strategies','best','title'])}\n              />\n            }\n          </Flex>\n        </Flex>\n        <Title\n          mb={[3,4]}\n        >\n          Curve Pool\n        </Title>\n        <Flex\n          width={1}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Flex\n              width={[1,0.36]}\n              alignItems={'stretch'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select your asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  onChange={this.changeFromToken}\n                  selectedToken={this.state.selectedToken}\n                  tokenConfig={this.state.curveTokenConfig}\n                  showBalance={this.state.action === 'deposit'}\n                  availableTokens={this.state.curveAvailableTokens}\n                />\n              </Box>\n              <Box\n                width={1}\n              >\n                {\n                  canPerformAction ? (\n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('deposit');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setAction('redeem');\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canRedeem }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:[1,3]\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Redeem\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        size={'2.3em'}\n                        name={'MoneyOff'}\n                        color={'cellText'}\n                      />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You don't have any {this.state.tokenConfig.idle.token} in your wallet.\n                      </Text>\n                    </Flex>\n                  )\n                }\n              </Box>\n            </Flex>\n            <Flex\n              width={1}\n              mt={ this.props.account ? 3 : 0 }\n            >\n            {\n              this.state.action === 'deposit' ? (\n                <CurveDeposit\n                  {...this.props}\n                  {...this.state}\n                />\n              ) : this.state.action === 'redeem' && (\n                <CurveRedeem\n                  {...this.props}\n                  {...this.state}\n                />\n              )\n            }\n            </Flex>\n          </Flex>\n        </Flex>\n        {\n          userHasFunds &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewCurve\n                {...this.props}\n                tokenFees={this.state.tokenFees}\n                tokenConfig={this.state.tokenConfig}\n                selectedToken={this.state.selectedToken}\n                availableTokens={this.state.availableTokens}\n                enabledTokens={Object.keys(this.state.availableTokens)}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.props.account && !this.state.govTokensDisabled[this.state.selectedToken] && Object.keys(availableGovTokens).length>0 && \n            <Flex\n              width={1}\n              id=\"earnings-estimation\"\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Yield Farming</Title>\n              <AssetsList\n                enabledTokens={Object.keys(availableGovTokens)}\n                handleClick={(props) => {}}\n                cols={[\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.33,0.22]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2.3em']\n                        }\n                      },\n                      {\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    title:'BALANCE',\n                    props:{\n                      width:[0.33, 0.26],\n                    },\n                    fields:[\n                      {\n                        name:'tokenBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'REDEEMABLE',\n                    props:{\n                      width:[0.33,0.26],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'redeemableBalance',\n                        props:{\n                          decimals: this.props.isMobile ? 6 : 8\n                        }\n                      },\n                      {\n                        name:'tooltip',\n                        props:{\n                          placement:'bottom',\n                          message:'The shown balance may be lower than the real one.',\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN PRICE',\n                    mobile:false,\n                    props:{\n                      width: 0.26,\n                    },\n                    parentProps:{\n                      width:1,\n                      pr:[2,4]\n                    },\n                    fields:[\n                      {\n                        name:'tokenPrice',\n                        props:{\n                          unit:'$',\n                          unitPos:'left',\n                          unitProps:{\n                            mr:1,\n                            fontWeight:3,\n                            fontSize:[0,2],\n                            color:'cellText'\n                          }\n                        }\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTokens={availableGovTokens}\n              />\n            </Flex>\n          */\n        }\n        {\n          /*\n          this.props.account && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'estimated-earnings-container'}\n            >\n              <Title my={[3,4]}>Estimated earnings</Title>\n              <EstimatedEarnings\n                {...this.props}\n              />\n            </Flex>\n          */\n        }\n        {\n        this.props.account && \n          <Flex\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'transactions-container'}\n          >\n            <Title my={[3,4]}>Transactions</Title>\n            <TransactionsList\n              {...this.props}\n              availableTokens={this.state.availableTokens}\n              enabledTokens={Object.keys(this.state.availableTokens)}\n              enabledActions={['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut']}\n              cols={[\n                {\n                  title: this.props.isMobile ? '' : 'HASH',\n                  props:{\n                    width:[0.15,0.24]\n                  },\n                  fields:[\n                    {\n                      name:'icon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      name:'hash',\n                      mobile:false\n                    }\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  mobile:false,\n                  props:{\n                    width:0.15,\n                  },\n                  fields:[\n                    {\n                      name:'action'\n                    }\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.32,0.23],\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.18,0.22],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:0.19,\n                  },\n                  fields:[\n                    {\n                      name:'amount'\n                    },\n                  ]\n                },\n                {\n                  title:'ASSET',\n                  props:{\n                    width:[0.15,0.20],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'tokenIcon',\n                      props:{\n                        mr:[0,2],\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'tokenName'\n                    },\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        }\n\n        <BuyModal\n          {...this.props}\n          closeModal={this.resetModal}\n          buyToken={this.state.selectedToken}\n          isOpen={this.state.activeModal === 'buy'}\n        />\n      </Box>\n    );\n  }\n}\n\nexport default AssetPage;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport ExtLink from '../../ExtLink/ExtLink.js';\nimport { Text, Modal, Flex, Link } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass PolygonModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.functionsUtil.setLocalStorage('polygonApproved',true);\n    this.props.closeModal();\n  }\n\n  render() {\n    const polygonBridgeInfo = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'2em'}\n            title={'Welcome to Idle <> Polygon'}\n            icon={'images/protocols/polygon.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                You're about to enter Idle Finance in the Polygon Network, make sure to have some <ExtLink color={'link'} fontSize={2} href={this.functionsUtil.getEtherscanAddressUrl(this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.currentNetwork.baseToken,'address']))}>{this.props.currentNetwork.baseToken}</ExtLink> tokens in your wallet to send your transactions! Also you can use our <Link color={'link'} fontSize={2} mainColor={'link'} onClick={ e => this.props.goToSection(`tools/${polygonBridgeInfo.route}/${this.props.currentNetwork.baseToken}`)}>{polygonBridgeInfo.label}</Link> to transfer your tokens from Mainnet to Polygon.<br />If you are not confident with this just switch to Mainnet using your wallet provider.\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Let Me In\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default PolygonModal;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Button,\n  Form,\n  Icon,\n  Flex,\n  Link\n} from \"rimble-ui\";\nimport axios from 'axios';\nimport colors from '../../colors';\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass WelcomeModal extends React.Component {\n\n  state = {\n    email:null,\n    error:false,\n    subscribed:false,\n    sendingForm:false\n  };\n\n  functionsUtil = null;\n\n  constructor(props) {\n    super(props);\n    this.functionsUtil = new FunctionsUtil(props);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  componentDidUpdate = async () => {\n    this.functionsUtil.setProps(this.props);\n  }\n\n  sendUserInfo = (sendEmail=true) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const userInfo = {\n      address: this.props.account,\n      provider: walletProvider\n    };\n\n    if (sendEmail && this.state.email !== null){\n      userInfo.email = this.state.email;\n    }\n\n    this.functionsUtil.simpleIDPassUserInfo(userInfo);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.email){\n      return false;\n    }\n\n    const callback = () => {\n      this.setState({\n        sendingForm:false,\n        subscribed:true\n      });\n      window.setTimeout(this.props.closeModal,2500);\n    };\n\n    this.sendUserInfo();\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'send_email',\n      eventLabel: 'WelcomeModal'\n    });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      callback();\n    })\n    .catch(err => {\n      callback();\n    });\n\n    // Set signedUp in the localStorage\n    if (localStorage){\n      const walletAddress = this.props.account.toLowerCase();\n      let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : null;\n      if (lastLogin && lastLogin[walletAddress] && !lastLogin[walletAddress].signedUp){\n        lastLogin[walletAddress].signedUp = true;\n        this.functionsUtil.setLocalStorage('lastLogin',JSON.stringify(lastLogin));\n      }\n    }\n\n    this.setState({\n      sendingForm:true\n    })\n  };\n\n  closeModal = async () => {\n\n    const closeModal = () => {\n      this.props.closeModal();\n    };\n\n    try{\n      // Prevent sending email\n      this.sendUserInfo(false);\n\n      // Send Google Analytics event\n      if (globalConfigs.analytics.google.events.enabled){\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'UI',\n          eventAction: 'continue_without_email',\n          eventLabel: 'WelcomeModal'\n        },closeModal);\n\n        // Call callback after 1 second if stuck\n        setTimeout(closeModal,1000);\n      } else {\n        closeModal();\n      }\n    } catch (err) {\n      closeModal();\n    }\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        {\n          this.state.subscribed ? (\n            <ModalCard\n              closeFunc={this.closeModal}\n            >\n              <ModalCard.Header title={'All done'} icon={`images/done.svg`}></ModalCard.Header>\n              <ModalCard.Body>\n                <Flex width={1} flexDirection={'column'} mb={3}>\n                  <Text color={'dark-gray'} textAlign={'center'} fontSize={3} my={0}>\n                    Thanks for subscribing!\n                  </Text>\n                  <Button\n                    my={3}\n                    width={'100%'}\n                    borderRadius={4}\n                    onClick={this.closeModal}\n                  >\n                    CLOSE\n                  </Button>\n                </Flex>\n              </ModalCard.Body>\n            </ModalCard>\n          ) : (\n            <ModalCard closeFunc={this.closeModal}>\n              <ModalCard.Header title={'Stay up-to-date!'} icon={`images/notification.svg`}>\n              </ModalCard.Header>\n              <ModalCard.Body>\n                <Form onSubmit={this.handleSubmit}>\n                  <Flex width={1} flexDirection={'column'} mb={3}>\n                    <Text color={'mid-gray'} textAlign={'left'} fontSize={3} my={0}>\n                      Add your e-mail to receive updates about:\n                    </Text>\n                  </Flex>\n                  <Flex width={1} flexDirection={'column'} mt={2}>\n                    <Flex my={2} flexDirection={'row'} alignItems={'center'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Performance reports\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        New Protocols & Tokens\n                      </Text>\n                    </Flex>\n                    <Flex my={2} flexDirection={'row'}>\n                      <Icon\n                        name={'CheckCircle'}\n                        color={colors.green}\n                        size={'32'}\n                      />\n                      <Text color={'dark-gray'} textAlign={'left'} fontSize={3} fontWeight={2} my={0} ml={2}>\n                        Latest updates\n                      </Text>\n                    </Flex>\n                    <Form.Field width={1} label={''}>\n                      <Form.Input\n                        px={3}\n                        py={4}\n                        required\n                        width={1}\n                        border={0}\n                        fontSize={3}\n                        type={\"email\"}\n                        name={\"EMAIL\"}\n                        outline={'none'}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        textAlign={['center','left']}\n                        className={header_styles.input}\n                        placeholder={'Enter your e-mail'}\n                        onChange={this.handleValidation}\n                      />\n                    </Form.Field>\n                    <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n                      <ButtonLoader\n                        buttonText={'SUBMIT'}\n                        isLoading={this.state.sendingForm}\n                        buttonProps={{className:header_styles.gradientButton,width:'100%',type:'submit'}}\n                      >\n                      </ButtonLoader>\n                      <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without e-mail</Link>\n                    </Flex>\n                  </Flex>\n                </Form>\n              </ModalCard.Body>\n            </ModalCard>\n          )\n        }\n      </Modal>\n    );\n  }\n}\n\nexport default WelcomeModal;\n","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ButtonLoader from '../../ButtonLoader/ButtonLoader.js';\n\nclass MigrateModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'continue_without_migrate',\n        eventLabel: 'MigrateModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowMigrateModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowMigrateModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = () => {\n    const tokenMigrationRoute = this.functionsUtil.getGlobalConfig(['tools','tokenMigration','route']);\n    this.props.goToSection('tools/'+tokenMigrationRoute);\n    this.props.closeModal();\n  }\n\n  render() {\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            iconHeight={'40px'}\n            title={'Migrate to Idle'}\n            icon={`images/migrate.svg`}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={3}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                You can migrate your funds from Compound, Aave, Fulcrum, Yearn and Idle V2 with just one transaction.\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                my={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.protocolsTokensBalances && Object.keys(this.props.protocolsTokensBalances).map( token => (\n                    <Flex\n                      mb={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      key={`token_${token}`}\n                      justifyContent={'space-between'}\n                    >\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:2,\n                            height:'2.3em'\n                          }\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                      <SmartNumber\n                        mr={2}\n                        {...fieldProps}\n                        minPrecision={5}\n                        number={this.props.protocolsTokensBalances[token].balance} \n                      />\n                      <AssetField\n                        token={token}\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:fieldProps\n                        }}\n                        tokenConfig={this.props.protocolsTokensBalances[token].tokenConfig}\n                      />\n                    </Flex>\n                  ) )\n                }\n                <Text\n                  mb={0}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Please be aware that by migrating your tokens from other protocols, your open positions might be liquidated if collateralized with migrated tokens.\n                </Text>\n              </Flex>\n              <Flex\n                mb={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <ButtonLoader\n                  buttonText={'MIGRATE'}\n                  handleClick={this.migrate}\n                  isLoading={this.state.sendingForm}\n                  buttonProps={{\n                    width:['100%','50%'],\n                    className:header_styles.gradientButton\n                  }}\n                >\n                </ButtonLoader>\n                {\n                /*\n                <Link mt={2} onClick={this.closeModal} hoverColor={'blue'}>continue without migrate</Link>\n                */\n                }\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default MigrateModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport header_styles from './Header.module.scss';\nimport AssetField from '../../AssetField/AssetField';\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass UpgradeModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UI',\n        eventAction: 'close_upgrade_modal',\n        eventLabel: 'UpgradeModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage('dontShowUpgradeModal','true');\n    } else {\n      this.functionsUtil.removeStoredItem('dontShowUpgradeModal');\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  migrate = async (token,strategy=null) => {\n\n    if (!strategy){\n      strategy = this.props.selectedStrategy;\n    }\n\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`${strategy}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  convert = async (token) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    const gaEventsEnabled = this.functionsUtil.getGlobalConfig(['globalConfigs','analytics','google','events','enabled']);\n    // Send Google Analytics event\n    if (gaEventsEnabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'UpgradeModal',\n        eventAction: 'migrate',\n        eventLabel: `${this.props.selectedStrategy}_${token}`\n      });\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    } else {\n      this.props.goToSection(`tools/${convertTool.route}/${token}`);\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n\n    if (!this.props.availableStrategies || !this.props.availableTokens){\n      return null;\n    }\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[2,3],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','750px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            icon={`images/migrate.svg`}\n            title={'Upgrade Available'}\n            iconHeight={['35px','40px']}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              mb={0}\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                my={0}\n                fontSize={[2,3]}\n                color={'mid-gray'}\n                textAlign={'center'}\n              >\n                Idle now supports yield farming and governance tokens distribution, migrate now your portfolio with just one click!\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Flex\n                mt={[2,3]}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Flex\n                  fontSize={[2,3]}\n                  width={[0.5,0.28]}\n                  fontWeight={[4,5]}\n                  color={'copyColor'}\n                >\n                  {\n                    this.props.isMobile ? 'ASSET' : 'ASSET TO MIGRATE'\n                  }\n                </Flex>\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      BALANCE\n                    </Flex>\n                  )\n                }\n                {\n                  !this.props.isMobile && (\n                    <Flex\n                      width={0.19}\n                      fontWeight={[4,5]}\n                      color={'copyColor'}\n                      justifyContent={'center'}\n                    >\n                      OLD APY\n                    </Flex>\n                  )\n                }\n                <Flex\n                  fontSize={[2,3]}\n                  fontWeight={[4,5]}\n                  width={[0.25,0.19]}\n                  color={'copyColor'}\n                  justifyContent={'center'}\n                >\n                  {\n                    this.props.isMobile ? 'APY' : 'NEW APY'\n                  }\n                </Flex>\n                <Flex\n                  width={[0.25,0.15]}\n                >\n                  \n                </Flex>\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.tokensToMigrate && Object.keys(this.props.tokensToMigrate).map( tokenKey => {\n                    const token = this.props.tokensToMigrate[tokenKey].token;\n                    const strategy = this.props.tokensToMigrate[tokenKey].strategy;\n                    const tokenConfig = this.props.tokensToMigrate[tokenKey].tokenConfig;\n                    const balance = this.props.tokensToMigrate[tokenKey].oldContractBalanceFormatted;\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${tokenKey}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={[0.5,0.28]}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.8em','2.3em']\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={tokenConfig.idle.token}\n                          />\n                        </Flex>\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <SmartNumber\n                                {...fieldProps}\n                                minPrecision={5}\n                                number={balance}\n                                flexProps={{\n                                  justifyContent:'center'\n                                }}\n                              />\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.props.isMobile && (\n                            <Flex\n                              width={0.19}\n                              alignItems={'center'}\n                              justifyContent={'center'}\n                            >\n                              <AssetField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'oldApy',\n                                  props:fieldProps\n                                }}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                        <Flex\n                          width={[0.25,0.19]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={token}\n                            tokenConfig={tokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={[0.25,0.15]}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            type={'primary'}\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                            }}\n                            handleClick={ e => this.migrate(token,strategy) }\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                {\n                  this.props.oldIdleTokensToMigrate && Object.keys(this.props.oldIdleTokensToMigrate).map( token => {\n                    const tokenConfig = this.props.oldIdleTokensToMigrate[token].tokenConfig;\n\n                    if (!tokenConfig){\n                      return null;\n                    }\n\n                    const balance = this.props.oldIdleTokensToMigrate[token].balance;\n                    let newTokenConfig = null;\n\n                    if (tokenConfig.availableStrategies && !this.props.availableTokens[tokenConfig.baseToken]){\n                      newTokenConfig = this.props.availableStrategies[tokenConfig.availableStrategies[0]][tokenConfig.baseToken];\n                    } else {\n                      newTokenConfig = this.props.availableTokens[tokenConfig.baseToken];\n                    }\n                    return (\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        key={`token_${token}`}\n                        justifyContent={'space-between'}\n                      >\n                        <Flex\n                          width={0.28}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <AssetField\n                            fieldInfo={{\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:'2.3em'\n                              }\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                          <AssetField\n                            fieldInfo={{\n                              name:'tokenName',\n                              props:fieldProps\n                            }}\n                            tokenConfig={tokenConfig}\n                            token={token}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <SmartNumber\n                            {...fieldProps}\n                            minPrecision={5}\n                            number={balance}\n                            flexProps={{\n                              justifyContent:'center'\n                            }}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'oldApy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.19}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <AssetField\n                            {...this.props}\n                            fieldInfo={{\n                              name:'apy',\n                              props:fieldProps\n                            }}\n                            token={newTokenConfig.token}\n                            tokenConfig={newTokenConfig}\n                          />\n                        </Flex>\n                        <Flex\n                          width={0.15}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <RoundButton\n                            handleClick={ e => this.convert(token) }\n                            buttonProps={{\n                              size:'small',\n                              width:'100%',\n                              className:header_styles.gradientButton\n                            }}\n                          >\n                            MIGRATE\n                          </RoundButton>\n                        </Flex>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n              <Flex\n                my={3}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <RoundButton\n                  handleClick={this.closeModal}\n                  buttonProps={{\n                    width:['100%','40%'],\n                  }}\n                >\n                  MIGRATE LATER\n                </RoundButton>\n                <Checkbox\n                  mt={2}\n                  required={false}\n                  color={'mid-gray'}\n                  checked={this.state.dontShowAgain}\n                  label={`Don't show this popup again`}\n                  onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                />\n              </Flex>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UpgradeModal;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport ExtLink from '../../ExtLink/ExtLink.js';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass RiskAdjustedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            icon={'images/warning.svg'}\n            title={'Risk Adjusted Dismissed'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The Risk Adjusted strategy has been dismissed after the execution of <ExtLink fontSize={2} href={this.functionsUtil.getAppUrl('#/governance/proposals/14')}>IIP-14</ExtLink> on the 13th October 2021. An incentive program has been released to let users migrate their funds in the <ExtLink fontSize={2} href={'https://beta.idle.finance/#/dashboard/tranches/senior/idle'}>Senior Tranche</ExtLink> in order to keep a similar risk profile as the Risk-Adjusted strategy. Read the <ExtLink fontSize={2} href={'https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673'}>Governance Forum Post</ExtLink> for further information about the migration program.\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default RiskAdjustedModal;","import React, { Component } from 'react';\nimport styles from './Dashboard.module.scss';\nimport FlashNews from '../FlashNews/FlashNews';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Card, Icon, Text } from 'rimble-ui';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardMenu from '../DashboardMenu/DashboardMenu';\n\n// Import page components\nimport Stats from '../Stats/Stats';\nimport Utils from '../Utils/Utils';\nimport AssetPage from '../AssetPage/AssetPage';\nimport RoundButton from '../RoundButton/RoundButton';\nimport Swipeable from '../utilities/components/Swipeable';\nimport BetaModal from \"../utilities/components/BetaModal\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CurveStrategy from '../CurveStrategy/CurveStrategy';\nimport PolygonModal from \"../utilities/components/PolygonModal\";\nimport WelcomeModal from \"../utilities/components/WelcomeModal\";\nimport GenericModal from \"../utilities/components/GenericModal\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport MigrateModal from \"../utilities/components/MigrateModal\";\nimport UpgradeModal from \"../utilities/components/UpgradeModal\";\nimport DashboardHeader from '../DashboardHeader/DashboardHeader';\nimport RiskAdjustedModal from \"../utilities/components/RiskAdjustedModal\";\n\nclass Dashboard extends Component {\n  state = {\n    menu: [],\n    baseRoute: null,\n    clickEvent: null,\n    activeModal: null,\n    menuOpened: false,\n    currentRoute: null,\n    pageComponent: null,\n    currentSection: null,\n    currentNetwork: null,\n    selectedSection: null,\n    tokensToMigrate: null,\n    showResetButton: false,\n    selectedSubsection: null,\n    pageComponentProps: null,\n    oldIdleTokensToMigrate: null,\n    protocolsTokensBalances: null,\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  async loadMenu() {\n    const extraicons = this.functionsUtil.getGlobalConfig(['extraicons']);\n    const baseRoute = this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']);\n\n    const menu = [];\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    const strategies = this.functionsUtil.getGlobalConfig(['strategies']);\n    Object.keys(strategies).filter( s => (!strategies[s].comingSoon && (!strategies[s].availableNetworks || strategies[s].availableNetworks.includes(currentNetwork.id)) && (!strategies[s].enabledEnvs.length || strategies[s].enabledEnvs.includes(this.props.currentEnv)))).forEach(strategy => {\n      const strategyInfo = strategies[strategy];\n      const imageInfo = extraicons[strategy];\n      menu.push({\n        submenu: [],\n        color: '#fff',\n        selected: false,\n        image: imageInfo.icon,\n        label: strategyInfo.title,\n        bgColor: strategyInfo.color,\n        route: baseRoute + '/' + strategy,\n        visible: strategyInfo.visible,\n        imageDark: imageInfo.iconDark,\n        component: strategyInfo.component,\n        imageInactive: imageInfo.iconInactive,\n        imageInactiveDark: imageInfo.iconInactiveDark\n      });\n    });\n\n    // Add Stake Polygon\n    const stakePolygonConfig = this.functionsUtil.getGlobalConfig(['tools', 'stakePolygon']);\n    if (stakePolygonConfig.enabled && (!stakePolygonConfig.availableNetworks || stakePolygonConfig.availableNetworks.includes(currentNetwork.id))) {\n      menu.push(\n        {\n          submenu: [],\n          label: 'Stake',\n          selected: false,\n          component: Utils,\n          color: 'dark-gray',\n          route: `${baseRoute}/stake`,\n          image: extraicons['stake'].icon,\n          componentProps: {\n            showBreadCrumb: false,\n            toolProps: stakePolygonConfig.props,\n            selectedSubsection: stakePolygonConfig\n          },\n          imageDark: extraicons['stake'].iconDark,\n          bgColor: this.props.theme.colors.primary,\n          imageInactive: extraicons['stake'].iconInactive,\n          imageInactiveDark: extraicons['stake'].iconInactiveDark,\n        }\n      );\n    }\n\n    const curveConfig = this.functionsUtil.getGlobalConfig(['curve']);\n\n    // Add Curve\n    if (curveConfig.enabled) {\n      const curveParams = Object.assign({\n        submenu: [],\n        selected: false,\n        component: CurveStrategy,\n      }, curveConfig.params);\n\n      menu.push(curveParams);\n    }\n\n    // Add Stake\n    const stakeConfig = this.functionsUtil.getGlobalConfig(['tools', 'stake']);\n    if (stakeConfig.enabled && (!stakeConfig.availableNetworks || stakeConfig.availableNetworks.includes(currentNetwork.id))) {\n      menu.push(\n        {\n          submenu: [],\n          label: 'Stake',\n          selected: false,\n          color: 'dark-gray',\n          route: `${baseRoute}/stake`,\n          image: extraicons['stake'].icon,\n          imageDark: extraicons['stake'].iconDark,\n          bgColor: this.props.theme.colors.primary,\n          imageInactive: extraicons['stake'].iconInactive,\n          imageInactiveDark: extraicons['stake'].iconInactiveDark,\n          component: Utils,\n          componentProps: {\n            showBreadCrumb: false,\n            toolProps: stakeConfig.props,\n            selectedSubsection: stakeConfig\n          },\n        }\n      );\n    }\n\n    // Add Gauges\n    const gaugesConfig = this.functionsUtil.getGlobalConfig(['tools', 'gauges']);\n    if (gaugesConfig.enabled && (!gaugesConfig.availableNetworks || gaugesConfig.availableNetworks.includes(currentNetwork.id))) {\n      menu.push(\n        {\n          submenu: [],\n          label: 'Gauges',\n          selected: false,\n          color: 'dark-gray',\n          route: `${baseRoute}/gauges`,\n          image: extraicons['gauges'].icon,\n          bgColor: this.props.theme.colors.primary,\n          imageDark: extraicons['gauges'].iconDark,\n          imageInactive: extraicons['gauges'].iconInactive,\n          imageInactiveDark: extraicons['gauges'].iconInactiveDark,\n          component: Utils,\n          componentProps: {\n            showBreadCrumb: false,\n            toolProps: gaugesConfig.props,\n            selectedSubsection: gaugesConfig\n          },\n        }\n      );\n    }\n\n    const statsInfo = this.functionsUtil.getGlobalConfig(['stats']);\n    if (!statsInfo.availableNetworks || statsInfo.availableNetworks.includes(currentNetwork.id)) {\n      menu.push(\n        {\n          submenu: [],\n          label: 'Stats',\n          selected: false,\n          component: Stats,\n          bgColor: '#21f36b',\n          color: 'dark-gray',\n          route: `${baseRoute}/stats`,\n          image: extraicons['stats'].icon,\n          imageDark: extraicons['stats'].iconDark,\n          imageInactive: extraicons['stats'].iconInactive,\n          imageInactiveDark: extraicons['stats'].iconInactiveDark,\n        }\n      );\n    }\n\n    // Add tools\n    menu.push(\n      {\n        label: 'Tools',\n        selected: false,\n        component: Utils,\n        color: 'dark-gray',\n        route: `${baseRoute}/tools`,\n        image: extraicons['tools'].icon,\n        imageDark: extraicons['tools'].iconDark,\n        bgColor: this.props.theme.colors.primary,\n        imageInactive: extraicons['tools'].iconInactive,\n        imageInactiveDark: extraicons['tools'].iconInactiveDark,\n        submenu: Object.values(this.functionsUtil.getGlobalConfig(['tools'])).filter(tool => (tool.enabled && (!tool.availableNetworks || tool.availableNetworks.includes(currentNetwork.id))))\n      }\n    );\n\n    // Add Forum\n    menu.push(\n      {\n        submenu: [],\n        mobile: false,\n        label: 'Forum',\n        selected: false,\n        component: null,\n        color: 'dark-gray',\n        bgColor: '#ff0000',\n        isExternalLink: true,\n        image: extraicons['forum'].icon,\n        imageDark: extraicons['forum'].iconDark,\n        imageInactive: extraicons['forum'].iconInactive,\n        imageInactiveDark: extraicons['forum'].iconInactiveDark,\n        route: this.functionsUtil.getGlobalConfig(['forumURL'])\n      }\n    );\n\n    await this.setState({\n      menu,\n      baseRoute,\n      currentNetwork\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  openTooltipModal = (modalTitle, modalContent) => {\n\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: modalTitle,\n      eventLabel: 'TooltipModal'\n    });\n\n    this.setState({\n      modalTitle,\n      modalContent\n    }, () => {\n      this.setActiveModal('tooltip');\n    })\n  }\n\n  setActiveModal = (activeModal) => {\n    this.setState({\n      activeModal\n    });\n  }\n\n  async loadParams() {\n\n    if (!this.props.networkInitialized) {\n      return;\n    }\n\n    const { match: { params } } = this.props;\n\n    const baseRoute = this.state.baseRoute;// this.functionsUtil.getGlobalConfig(['dashboard', 'baseRoute']);\n    let currentRoute = baseRoute;\n\n    let pageComponent = null;\n    let selectedToken = null;\n    let currentSection = null;\n    let selectedStrategy = null;\n    let pageComponentProps = null;\n\n    // Set strategy\n    if (params.section) {\n      currentSection = params.section;\n      const param1 = params.param1;\n      const param2 = params.param2;\n      const param3 = params.param3;\n\n      const section_is_strategy = Object.keys(this.props.availableStrategies).includes(currentSection.toLowerCase());\n      const param1_is_strategy = param1 && (Object.keys(this.props.availableStrategies).includes(param1.toLowerCase()) || param1==='tranches');\n\n      if (section_is_strategy || param1_is_strategy) {\n\n        if (!section_is_strategy) {\n          currentRoute += '/' + currentSection;\n        }\n\n        selectedStrategy = section_is_strategy ? currentSection : param1;\n        currentRoute += '/' + selectedStrategy;\n        \n        // Set token\n        const param1_is_token = param1 === \"tranches\" ? null : param1 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param1.toUpperCase());\n        const param2_is_token = param1 === \"tranches\" ? null : param2 && Object.keys(this.props.availableStrategies[selectedStrategy]).includes(param2.toUpperCase());\n\n        if (param1_is_token || param2_is_token) {\n          selectedToken = param1_is_token ? param1.toUpperCase() : param2.toUpperCase();\n          currentRoute += '/' + selectedToken;\n\n          if (section_is_strategy) {\n            pageComponent = AssetPage;\n          }\n        } else if (param1===\"tranches\") {\n          selectedToken=params.param3\n          currentRoute+='/'+param2+'/'+param3;\n        }\n      } else {\n        currentRoute += '/' + params.section;\n\n        if (params.param1 && params.param1.length) {\n          currentRoute += '/' + params.param1;\n        }\n\n        // if (params.param2 && params.param2.length){\n        //   currentRoute += '/'+params.param2;\n        // }\n      }\n    }\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute + '/' + params.section;\n      if (currentRoute.toLowerCase() === m.route.toLowerCase() || (!m.submenu.length && m.route.toLowerCase() === sectionRoute.toLowerCase())) {\n        m.selected = true;\n        if (pageComponent === null) {\n          pageComponent = m.component;\n          pageComponentProps = m.componentProps;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route + '/' + subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()) {\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null) {\n              if (subm.component) {\n                pageComponent = subm.component;\n                pageComponentProps = m.componentProps;\n              } else {\n                pageComponent = m.component;\n                pageComponentProps = m.componentProps;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected) {\n            selectedSubsection = subm;\n          }\n\n        });\n      }\n\n      // Set selected section\n      if (m.selected) {\n        selectedSection = m;\n      }\n    });\n\n    // console.log('pageComponent',params,pageComponent);\n\n    // Exit if no strategy and token selected\n    if (!pageComponent){\n      return this.goToSection(menu[0].route);\n    }\n\n    // console.log('loadParams',selectedStrategy,selectedToken);\n    if(selectedStrategy===\"tranches\" && currentSection===\"stats\") {\n      // console.log(\"Argss\",selectedStrategy,selectedToken,params.param2)\n      await this.props.setStrategyToken(selectedStrategy,selectedToken,params.param2);\n    } else {\n      await this.props.setStrategyToken(selectedStrategy, selectedToken);\n    }\n\n    // Send GA pageview\n    this.functionsUtil.sendGoogleAnalyticsPageview(currentRoute);\n\n    const newState = {\n      menu,\n      params,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      pageComponentProps,\n      selectedSubsection\n    };\n\n    await this.setState(newState);\n\n    return newState;\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.props.setCurrentSection('dashboard');\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized) {\n        this.setState({\n          showResetButton: true\n        });\n      }\n    }, 60000);\n\n    if (!this.props.web3) {\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized) {\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized) {\n      return this.props.initializeContracts();\n    }\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n\n    const viewOnly = this.props.connectorName === 'custom';\n    if (!viewOnly) {\n      this.checkModals();\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const networkInitializedChanged = this.props.networkInitialized !== nextProps.networkInitialized;\n    const networkChanged = JSON.stringify(this.props.network) !== JSON.stringify(nextProps.network)\n    const paramsChanged = JSON.stringify(this.props.match.params) !== JSON.stringify(nextProps.match.params);\n    const strategyChanged = nextProps.selectedStrategy && nextProps.selectedStrategy !== this.props.selectedStrategy;\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    const requiredNetworkChanged = JSON.stringify(nextProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = nextProps.accountInizialized && nextProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = nextProps.contractsInitialized && nextProps.contractsInitialized !== this.props.contractsInitialized;\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || contractsChanged || paramsChanged || accountChanged || networkInitializedChanged || networkChanged || strategyChanged || availableTokensChanged || requiredNetworkChanged || accountInizialized || contractsInitialized;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    const isMobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (isMobileChanged) {\n      this.setState({\n        menuOpened: false\n      });\n    }\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)) {\n      await this.setState({\n        pageComponent: null\n      }, () => {\n        this.loadParams();\n      });\n    }\n\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const networkChanged = (!prevProps.networkInitialized && this.props.networkInitialized) || requiredNetworkChanged;\n    if (networkChanged) {\n      await this.loadMenu();\n      this.loadParams();\n    }\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const accountChanged = prevProps.account !== this.props.account;\n    const strategyChanged = this.props.selectedStrategy && prevProps.selectedStrategy !== this.props.selectedStrategy;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (!viewOnly && (networkChanged || accountChanged || accountInizialized || contractsInitialized || strategyChanged || availableTokensChanged)) {\n      this.checkModals();\n    }\n  }\n\n  async checkModals() {\n\n    if (this.props.selectedToken || !this.props.accountInizialized || !this.props.contractsInitialized || !this.props.availableStrategies) {\n      return null;\n    }\n\n    // await this.checkStrategiesRevampModal();\n    await this.checkRiskAdjusted();\n    await this.checkRiskAdjusted();\n    await this.checkPolygonModal();\n    await this.checkBetaApproval();\n    await this.checkTokensToMigrate();\n    await this.checkWelcomeModal();\n    await this.checkProtocolsTokensBalances();\n  }\n\n  async checkStrategiesRevampModal() {\n    const modalAlreadyOpened = this.functionsUtil.getStoredItem('strategiesRevamp');\n    if (!modalAlreadyOpened && ['tranches','best'].includes(this.state.currentSection)){\n      this.setState({\n        activeModal:'strategiesRevamp'\n      });\n    }\n  }\n\n  async checkRiskAdjusted() {\n    const isRiskAdjusted = this.props.selectedStrategy === 'risk';\n    if (isRiskAdjusted) {\n      const activeModal = 'risk';\n      if (activeModal !== this.state.activeModal) {\n        await this.setState({\n          activeModal\n        });\n        return activeModal;\n      }\n    }\n  }\n\n  async checkPolygonModal() {\n    const isPolygon = this.state.currentNetwork.provider === 'polygon';\n    const isPolygonApproved = this.functionsUtil.getStoredItem('polygonApproved', false, false);\n\n    // console.log('checkPolygonModal',this.state.currentNetwork,isPolygon);\n\n    // Show Beta Warning modal\n    if (isPolygon && !isPolygonApproved) {\n      const activeModal = 'polygon';\n      if (activeModal !== this.state.activeModal) {\n        await this.setState({\n          activeModal\n        });\n        return activeModal;\n      }\n    }\n  }\n\n  async checkBetaApproval() {\n    const isOriginUrl = this.functionsUtil.checkUrlOrigin();\n    const isPolygon = this.state.currentNetwork.provider === 'polygon';\n    const isBetaApproved = this.functionsUtil.getStoredItem('betaApproved', false, false);\n\n    // Show Beta Warning modal\n    if (!isOriginUrl && !isBetaApproved && !isPolygon && this.state.activeModal === null) {\n      const activeModal = 'beta';\n      if (activeModal !== this.state.activeModal) {\n        await this.setState({\n          activeModal\n        });\n        return activeModal;\n      }\n    }\n  }\n\n  async checkTokensToMigrate() {\n\n    const showUpgradeModal = this.functionsUtil.getStoredItem('dontShowUpgradeModal', false, null) !== null ? false : true;\n    if (this.props.selectedToken || !showUpgradeModal || !this.props.availableTokens || this.state.activeModal !== null) {\n      return null;\n    }\n\n    const tokensToMigrate = await this.functionsUtil.getTokensToMigrate();\n    const oldIdleTokensToMigrate = await this.functionsUtil.getProtocolsTokensBalances('idle');\n\n    // console.log('tokensToMigrate',tokensToMigrate);\n\n    if ((tokensToMigrate && Object.keys(tokensToMigrate).length > 0) || (oldIdleTokensToMigrate && Object.keys(oldIdleTokensToMigrate).length > 0)) {\n      const activeModal = 'upgrade';\n      if (activeModal !== this.state.activeModal) {\n        await this.setState({\n          activeModal,\n          tokensToMigrate,\n          oldIdleTokensToMigrate\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkWelcomeModal() {\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized) {\n      return null;\n    }\n\n    // Show welcome modal\n    if (this.props.account && this.state.activeModal === null) {\n      let welcomeIsOpen = false;\n\n      const welcomeModalProps = this.functionsUtil.getGlobalConfig(['modals', 'welcome']);\n\n      if (welcomeModalProps.enabled && localStorage) {\n\n        // Check the last login of the wallet\n        const currTime = new Date().getTime();\n        const walletAddress = this.props.account.toLowerCase();\n        let lastLogin = localStorage.getItem('lastLogin') ? JSON.parse(localStorage.getItem('lastLogin')) : {};\n\n        // First login\n        if (!lastLogin[walletAddress]) {\n          lastLogin[walletAddress] = {\n            'signedUp': false,\n            'lastTime': currTime\n          };\n          welcomeIsOpen = true;\n          // User didn't sign up\n        } else if (!lastLogin[walletAddress].signedUp) {\n          const lastTime = parseInt(lastLogin[walletAddress].lastTime);\n          const timeFromLastLogin = (currTime - lastTime) / 1000;\n          welcomeIsOpen = timeFromLastLogin >= welcomeModalProps.frequency; // 1 day since last login\n        }\n\n        if (welcomeIsOpen) {\n          lastLogin[walletAddress].lastTime = currTime;\n          this.functionsUtil.setLocalStorage('lastLogin', JSON.stringify(lastLogin));\n        }\n      }\n\n      const activeModal = welcomeIsOpen ? 'welcome' : this.state.activeModal;\n      if (this.state.activeModal !== activeModal) {\n        await this.setState({\n          activeModal\n        });\n\n        return activeModal;\n      }\n    }\n\n    return null;\n  }\n\n  async checkProtocolsTokensBalances() {\n\n    if (!this.props.account || !this.props.accountInizialized || !this.props.contractsInitialized) {\n      return null;\n    }\n\n    // Show migration modal if no other modals are opened\n    const migrateModalConfig = this.functionsUtil.getGlobalConfig(['modals', 'migrate']);\n    const migrateModalEnabled = migrateModalConfig.enabled && migrateModalConfig.availableNetworks.includes(this.state.currentNetwork.id);\n\n    const showMigrateModal = this.functionsUtil.getStoredItem('dontShowMigrateModal', false, null) !== null ? false : true;\n\n    if (this.state.activeModal === null && migrateModalEnabled && showMigrateModal && !this.state.protocolsTokensBalances) {\n      const protocolsTokensBalances = await this.functionsUtil.getProtocolsTokensBalances();\n      const activeModal = protocolsTokensBalances && Object.keys(protocolsTokensBalances).length > 0 ? 'migrate' : null;\n      const newState = {\n        activeModal,\n        protocolsTokensBalances\n      };\n      await this.setState(newState);\n      return activeModal;\n    }\n\n    return null;\n  }\n\n  goToSection(section, isDashboard = true) {\n\n    // Remove dashboard route\n    if (isDashboard) {\n      var replace = `^${this.state.baseRoute}/`;\n      var re = new RegExp(replace);\n      section = section.replace(re, '');\n    }\n\n    const newRoute = isDashboard ? `${this.state.baseRoute}/` + section : section;\n    \n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'UI',\n      eventAction: 'goToSection',\n      eventLabel: newRoute\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  logout = async () => {\n    this.props.setConnector('Infura', 'Infura');\n    await this.props.initWeb3('Infura');\n  }\n\n  changeToken(selectedToken) {\n    selectedToken = selectedToken.toUpperCase();\n    if (Object.keys(this.props.availableTokens).includes(selectedToken)) {\n      const routeParts = [];\n\n      // Add section\n      if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()) {\n        routeParts.push(this.state.currentSection);\n      }\n\n      // Add strategy\n      routeParts.push(this.props.selectedStrategy);\n\n      // Add token\n      routeParts.push(selectedToken);\n\n      this.goToSection(routeParts.join('/'));\n    }\n  }\n\n  changeProtocolToken(selectedProtocol, selectedToken) {\n    selectedProtocol = selectedProtocol.toLowerCase();\n    if (Object.keys(this.props.availableTranches).includes(selectedProtocol)&& Object.keys(this.props.availableTranches[selectedProtocol]).includes(selectedToken)) {\n    \n        const routeParts = [];\n\n        // Add section\n        if (this.state.currentSection.toLowerCase() !== this.props.selectedStrategy.toLowerCase()) {\n          routeParts.push(this.state.currentSection);\n        }\n\n        // Add strategy\n        routeParts.push(this.props.selectedStrategy);\n\n        // Add protocol\n        routeParts.push(selectedProtocol);\n        \n        //Add Token\n        routeParts.push(selectedToken);\n\n        this.goToSection(routeParts.join('/'));\n      \n    }\n  }\n\n  propagateClickEvent(clickEvent) {\n    this.setState({\n      clickEvent: clickEvent.target\n    });\n  }\n\n  setMenu(menuOpened) {\n    this.setState({\n      menuOpened\n    });\n  }\n\n  toggleMenu() {\n    const menuOpened = !this.state.menuOpened;\n    this.setMenu(menuOpened);\n  }\n\n  swipeCallback(eventData) {\n    // console.log('swipeCallback',eventData);\n    if (eventData.dir === 'Right') {\n      this.setMenu(true);\n    } else if (eventData.dir === 'Left') {\n      this.setMenu(false);\n    }\n  }\n\n  render() {\n\n    const networkSupported = this.props.network.isSupportedNetwork;\n    const PageComponent = this.state.pageComponent ? this.state.pageComponent : null;\n    const networkCorrect = this.props.network.isCorrectNetwork || !this.props.account;\n    const networkInitialized = this.props.networkInitialized && this.props.network.current.id && this.props.network.required.id;\n\n    if (!this.props.availableStrategies){\n      return (\n        <Flex\n          width={1}\n          minHeight={'100vh'}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          backgroundColor={'dashboardBg'}\n        >\n          <FlexLoader\n            textProps={{\n              textSize: 4,\n              fontWeight: 2\n            }}\n            loaderProps={{\n              mb: 3,\n              size: '80px',\n              color: 'primary'\n            }}\n            flexProps={{\n              my: 3,\n              flexDirection: 'column'\n            }}\n            text={''}\n          />\n        </Flex>\n      );\n    }\n\n    // console.log('networkInitialized',this.props.networkInitialized,networkInitialized);\n\n    return (\n      <Swipeable\n        callback={this.swipeCallback.bind(this)}\n      >\n        <Flex\n          height={'100vh'}\n          position={'fixed'}\n          flexDirection={'row'}\n          backgroundColor={'dashboardBg'}\n          className={[this.props.themeMode]}\n          width={this.props.isMobile && this.state.menuOpened ? '180vw' : '100vw'}\n        >\n          <Flex\n            zIndex={1}\n            width={'100%'}\n            height={'100%'}\n            position={'absolute'}\n          >\n            <Flex\n              className={[styles.bg,styles['bg-top-left']]}\n            />\n            <Flex\n              className={[styles.bg,styles['bg-bottom-right']]}\n            />\n            <Flex\n              className={[styles.bg,styles['bg-noise']]}\n            />\n          </Flex>\n          {\n            (!this.props.isMobile || this.state.menuOpened) && (\n              <Flex\n                bottom={0}\n                zIndex={99999}\n                position={'relative'}\n                width={['80vw', 1 / 6]}\n                flexDirection={'column'}\n              >\n                <Card\n                  p={0}\n                  border={0}\n                  boxShadow={0}\n                  width={'auto'}\n                  height={'100vh'}\n                  backgroundColor={'transparent'}\n                >\n                  <DashboardMenu\n                    {...this.props}\n                    menu={this.state.menu}\n                    closeMenu={e => this.setMenu(false)}\n                    goToSection={this.goToSection.bind(this)}\n                  />\n                </Card>\n              </Flex>\n            )\n          }\n          <Flex\n            pl={[0,3]}\n            zIndex={2}\n            minHeight={'70vh'}\n            position={'relative'}\n            width={['100vw', 5 / 6]}\n            flexDirection={\"column\"}\n          >\n            <DashboardHeader\n              menuOpened={this.state.menuOpened}\n              clickEvent={this.state.clickEvent}\n              toggleMenu={this.toggleMenu.bind(this)}\n              goToSection={this.goToSection.bind(this)}\n              {...this.props}\n            />\n            <Flex\n              py={3}\n              mb={0}\n              width={1}\n              pr={[3, 5]}\n              pl={[3, 0]}\n              alignItems={\"center\"}\n              style={{\n                overflowY: 'scroll',\n                overflowX: 'hidden'\n              }}\n              justifyItems={\"center\"}\n              flexDirection={'column'}\n              height={['100vh', '100%']}\n            >\n              {\n                this.props.isDashboard && (\n                  <FlashNews\n                    {...this.props}\n                  />\n                )\n              }\n              {\n                !networkInitialized || !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent || !networkCorrect || !networkSupported ? (\n                  <Flex\n                    width={1}\n                    minHeight={'50vh'}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      networkInitialized && !networkCorrect ? (\n                        <DashboardCard\n                          cardProps={{\n                            p: 3,\n                            mt: 3,\n                            width: [1, 0.35]\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You should be on the <strong>{this.functionsUtil.capitalize(this.props.network.required.name)} network</strong>. You are currently connected to the <strong>{this.functionsUtil.capitalize(this.props.network.current.name)} network</strong>, please switch to the correct network.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt:3,\n                                width:[1,1/2]\n                              }}\n                              handleClick={e => this.functionsUtil.addEthereumChain(this.props.network.required.id)}\n                            >\n                              Switch Network\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      ) : networkInitialized && !networkSupported ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3,\n                            width:[1,0.35]\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The <strong>{this.functionsUtil.capitalize(this.props.network.current.name)} Network</strong> is not supported, please switch to the correct network.\n                          </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : !this.state.showResetButton ? (\n                        <FlexLoader\n                          textProps={{\n                            textSize: 4,\n                            fontWeight: 2\n                          }}\n                          loaderProps={{\n                            mb: 3,\n                            size: '40px'\n                          }}\n                          flexProps={{\n                            my: 3,\n                            flexDirection: 'column'\n                          }}\n                          text={!this.props.networkInitialized ? 'Loading network...' : (!this.props.accountInizialized ? 'Loading account...' : (!this.props.contractsInitialized ? 'Loading contracts...' : 'Loading assets...'))}\n                        />\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p: 3,\n                            mt: 3,\n                            width: [1, 0.35]\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'Warning'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Idle can't connect to your wallet!<br />Make sure that your wallet is unlocked and try again.\n                            </Text>\n                            <RoundButton\n                              buttonProps={{\n                                mt: 3,\n                                width: [1, 1 / 2]\n                              }}\n                              handleClick={this.logout.bind(this)}\n                            >\n                              Logout\n                            </RoundButton>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    }\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      PageComponent &&\n                      <PageComponent\n                        {...this.props}\n                        match={{ params: {} }}\n                        urlParams={this.state.params}\n                        changeToken={this.changeToken.bind(this)}\n                        goToSection={this.goToSection.bind(this)}\n                        selectedSection={this.state.selectedSection}\n                        selectedSubsection={this.state.selectedSubsection}\n                        openTooltipModal={this.openTooltipModal.bind(this)}\n                        changeProtocolToken={this.changeProtocolToken.bind(this)}\n                        {...this.state.pageComponentProps}\n                      />\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n          {\n            this.state.currentNetwork &&\n            <PolygonModal\n              closeModal={this.resetModal}\n              goToSection={this.goToSection.bind(this)}\n              currentNetwork={this.state.currentNetwork}\n              isOpen={this.state.activeModal === 'polygon'}\n            />\n          }\n          <BetaModal\n            closeModal={this.resetModal}\n            isOpen={this.state.activeModal === 'beta'}\n          />\n          <RiskAdjustedModal\n            closeModal={this.resetModal}\n            isOpen={this.state.activeModal === 'risk'}\n          />\n          <UpgradeModal\n            {...this.props}\n            closeModal={this.resetModal}\n            goToSection={this.goToSection.bind(this)}\n            tokensToMigrate={this.state.tokensToMigrate}\n            isOpen={this.state.activeModal === 'upgrade'}\n            oldIdleTokensToMigrate={this.state.oldIdleTokensToMigrate}\n          />\n          <MigrateModal\n            {...this.props}\n            closeModal={this.resetModal}\n            goToSection={this.goToSection.bind(this)}\n            isOpen={this.state.activeModal === 'migrate'}\n            protocolsTokensBalances={this.state.protocolsTokensBalances}\n          />\n          <TooltipModal\n            closeModal={this.resetModal}\n            title={this.state.modalTitle}\n            content={this.state.modalContent}\n            isOpen={this.state.activeModal === 'tooltip'}\n          />\n          <WelcomeModal\n            closeModal={this.resetModal}\n            account={this.props.account}\n            simpleID={this.props.simpleID}\n            network={this.props.network.current}\n            tokenName={this.props.selectedToken}\n            initSimpleID={this.props.initSimpleID}\n            baseTokenName={this.props.selectedToken}\n            isOpen={this.state.activeModal === 'welcome'}\n          />\n          <GenericModal\n            checkboxEnabled={true}\n            buttonText={'Continue'}\n            id={'strategiesRevamp'}\n            closeModal={this.resetModal}\n            icon={'images/warning-2.png'}\n            title={'Strategies Revamp: unused assets shutdown'}\n            isOpen={this.state.activeModal === 'strategiesRevamp'}\n            text={`\n              On September 19th, the following strategies are going to be shut down, therefore deposits will no longer be available:\n              <br /><br />\n              <strong>Tranches:</strong>\n              <ul>\n                <li>Convex - MUSD3CRV <img src=\"images/tokens/MUSD3CRV.svg\" style=\"width:20px;height:20px;vertical-align:middle;margin-left:5px\" /></li>\n                <li>Convex - MIM3CRV <img src=\"images/tokens/MIM3CRV.svg\" style=\"width:20px;height:20px;vertical-align:middle;margin-left:5px\" /></li>\n                <li>Idle - FEI <img src=\"images/tokens/FEI.svg\" style=\"width:20px;height:20px;vertical-align:middle;margin-left:5px\" /></li>\n                <li>Idle - DAI <img src=\"images/tokens/DAI.svg\" style=\"width:20px;height:20px;vertical-align:middle;margin-left:5px\" /></li>\n              </ul>\n              <strong>Best Yield:</strong>\n              <ul>\n                <li>FEI <img src=\"images/tokens/FEI.svg\" style=\"width:20px;height:20px;vertical-align:middle;margin-left:5px\" /></li>\n              </ul>\n              Since the above strategies won't be available in the dashboard from Sept 19th on, we suggest to redeem your deposited funds. After that date, you will still be able to redeem your funds but you would need to interact with the <a class=\"link\" href=\"https://beta.idle.finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">beta version</a> of our dashboard. For further support join our <a class=\"link\" href=\"https://discord.gg/mpySAJp\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Discord server</a>.\n            `}\n          />\n        </Flex>\n      </Swipeable>\n    );\n  }\n}\n\nexport default Dashboard;"],"sourceRoot":""}