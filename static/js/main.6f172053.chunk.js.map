{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","RoundIconButton/RoundIconButton.js","ExecuteTransaction/ExecuteTransaction.js","GenericSelector/GenericSelector.js","AllocationChart/AllocationChart.js","utilities/components/GenericModal.js","PortfolioEquity/PortfolioEquity.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TooltipText/TooltipText.js","TransactionField/TransactionField.js","utilities/components/Header.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","Faquestion/Faquestion.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/components/BuyModal.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","ScrollToTop/ScrollToTop.js","Footer/Footer.js","PageNotFound/PageNotFound.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","RoundButton/RoundButton.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","theme-dark.js","utilities/components/ModalCard.module.scss","Footer/Footer.module.scss","Title/Title.js","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","AssetsUnderManagement/AssetsUnderManagement.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","FlexLoader/FlexLoader.js","colors.js","TrancheField/TrancheField.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ExtLink/ExtLink.js","ImageButton/ImageButton.js","IconBox/IconBox.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","justifyContent","this","props","textProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isActive","color","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_8__","isInteractive","backgroundColor","isDisabled","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","my","alignItems","flexDirection","align","mx","margin","iconBgColor","useIconOnly","borderRadius","mr","isSidebar","p","theme","colors","transactions","actionBg","redeem","image","src","height","isMobile","imageProps","name","icon","size","iconColor","iconProps","fontWeight","fontSize","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","unitProps","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","fontFamily","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","RoundIconButton","mainColor","disabled","contrastColor","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","ExecuteTransaction","txStatus","processing","txHash","loading","tx","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","status","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","account","children","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","action","waitText","capitalize","execute","componentProps","value","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","GenericSelector","loadComponents","selectedTokenChanged","selectedToken","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","CustomIndicatorSeparator","CustomMenu","mt","zIndex","boxShadow","position","outerColor","selectProps","label","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","fonts","sansSerif","cardBg","className","styles","searchInput","themeMode","dark","menuIsOpen","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","_this3","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","v","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","labels","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","protocolIcon","textAlign","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","GenericModal","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","dontShowAgain","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","stop","closeModal","_callee2","_context2","checkboxEnabled","toggleDontShowAgain","setLocalStorage","removeStoredItem","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","closeFunc","Header","pt","title","iconHeight","Body","dangerouslySetInnerHTML","__html","required","checked","target","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","buttonText","React","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","availableTokens","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_callee3","filteredTxs","amountLent","_context3","values","filter","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","timeoutIds","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","resolve","reject","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_callee8","_context8","window","timeoutId","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","twitterIcon","radioBtn","button","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","mouseOver","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","gradientButton","empty","select","selectDark","input","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","initContract","abi","contractInfo","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args7","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","_ref4","protocol","protocolConfig","_ref5","protocolToken","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","cdo","CDO","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getOnChainTokenConversionRate","getAccountPortfolio","orderedTokensBalance","depositedTokens","tokensToMigrate","totalBalanceConverted","_ref15","_ref17$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_x9","_ref19","_ref20","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","_x10","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args11","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_callee13","_args13","_context13","idleTokensBalance","getFirstDepositTx","_callee14","deposits","_args14","_context14","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee15","firstDepositTxs","_args15","_context15","reduce","acc","getTrancheUserTransactionsEvents","_ref26","_callee16","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref27","_ref28","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","trancheToken_received","trancheToken_sent","_context16","getContractEvents","_x11","_x12","_x13","_ref29","_callee17","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","trancheTypes","endpoint","etherscanTxlist","_args17","_context17","endpoints","makeEtherscanApiRequest","result","some","getTrancheGaugeConfig","trancheTokenAddresses","trancheType","cdoRewardsContractAddresses","addr","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","stakingContractAddresses","isTrancheReceived","isTrancheSent","returnValues","_x14","getEtherscanTokenTransfers","_ref30","_callee18","walletAddr","fromAddress","toAddress","fromBlock","toBlock","sort","limit","transferEvents","eventFilters","_args18","_context18","_x15","_x16","getTrancheStakingRewardsDistributions","_ref31","_callee20","stakingDistributions","_context20","_ref32","_callee19","transfers","_context19","_x19","_x17","_x18","getTrancheHarvests","_ref33","_callee22","_ref34","_ref35","autoFarming","harvestsList","cdoConfig","strategyConfig","latestHarvestBlock","_args22","_context22","loadTrancheStrategyContract","Strategy","_ref36","_callee21","farmTokenConfig","_ref37","_ref38","farmTokenTransfers_cdo","farmTokenTransfers_strategy","farmTokenTransfers","harvests","farmTokenTransfersHash","_context21","getTokenConfig","transfer","harvest","splice","_x22","_x20","_x21","_ref39","_callee23","idleStrategyAddress","_context23","genericContractCallCachedTTL","_x23","getTrancheLastHarvest","_ref40","_callee24","trancheHarvests","lastHarvest","_context24","_x24","_x25","getTrancheLastHarvest_old","_ref41","_callee25","harvestEnabled","startBlock","totalAmount","_context25","_x26","_x27","getGovTokenApr","_ref42","_callee26","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref43","_ref44","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context26","_address","apr2apy","apr","apy","_x28","_x29","_x30","_x31","getTrancheRewardTokensInfo","_ref45","_callee28","tokensDistribution","_context28","_ref46","_callee27","firstHarvest","lastBlockInfo","latestHarvest","firstBlockInfo","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref47","_ref48","prevHarvest","_latestHarvest","firstBlock","_ref49","_ref50","poolSize","elapsedBlocks","elapsedSeconds","_context27","rewardsRate","now","genericContractCallCached","getBlockInfo","_x34","_x32","_x33","getTrancheUnlentAmount","_ref51","_callee29","_context29","_x35","_ref52","_callee31","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args31","_context31","_ref53","_callee30","trancheTokenTransferEvent","_ref54","_ref55","blockInfo","tokenConversionRate","_context30","_x38","tokenTransferEvent","trancheTokenAmount","hashKey","trancheTokens","_x36","_x37","getTrancheUserTransactions","_ref56","_callee32","_context32","_x39","_x40","_x41","getTrancheFirstDepositTx","_ref57","_callee33","_context33","_x42","_x43","_x44","getAmountDepositedTranche","_ref58","_callee34","_context34","_x45","_x46","_x47","_ref59","_callee35","_ref60","_ref61","userAvgPrice","_context35","_x48","_x49","getAmountLent","_callee36","amountLents","_args36","_context36","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee42","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref64","_ref65","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args42","_context42","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref66","_callee37","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context37","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x50","_ref67","_callee38","_context38","_x51","match","_ref68","_callee39","_context39","_x52","_ref69","_callee40","_context40","_x53","items","to_address","_ref70","_callee41","polygonTx","erc20RootToken","_context41","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x54","getPolygonBaseTxs","_callee43","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args43","_context43","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee44","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args44","_context44","filterEthereumTxs","_callee45","_args45","_context45","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee46","resultData","allAvailableTokens","_args46","_context46","processStoredTxs","_callee47","contractInstance","_context47","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","t1","checkPolygonTransactionIncluded","_ref76","_callee48","_ref77","_ref78","_context48","getTransactionReceipt","_x55","_ref79","_callee49","_args49","_context49","_x56","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref80","_callee50","processTransactions","idleTokensAddresses","_args50","_context50","mappedTx","_x57","_x58","filterEtherscanTxs","_ref81","_callee51","processTxs","_args51","_context51","_x59","_ref82","_callee52","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args52","_context52","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x60","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref83","_callee57","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args57","_context57","baseTokenConfig","baseTokenAddress","_ref84","_callee56","minedTxs","_context56","_ref85","_callee55","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context55","getCurveTokenPrice","_ref86","_callee53","_context53","_x65","_x66","baseTokensConfig","t2","_ref87","_callee54","_context54","_x67","_x68","_x63","_x64","_x62","_x61","_ref88","_callee63","txsToProcess","_args63","_context63","_ref89","_callee62","_context62","_ref90","_callee61","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context61","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref91","_callee58","_context58","_x73","_x74","_ref92","_callee59","_context59","_x75","_x76","oldContract","events","raw","_ref93","_callee60","_context60","_x77","_x78","decodeLog","_token","_x71","_x72","_x70","_x69","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref94","_callee64","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args64","_context64","availableNetworks","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x79","getBestTranche","_callee65","maxApy","trancheStrategyConfig","_args65","_context65","timetamp","availableTranchesNetworks","availableTrancheInfo","tInfo","_ref96","_callee66","error_callback","config","_args66","_context66","post","catch","_x80","_ref97","_callee67","_args67","_context67","_x81","_ref98","_callee68","apiKeyIndex","apiKey","_args68","_context68","_x82","_ref99","_callee69","return_data","_args69","_context69","_x83","makeCachedPostRequest","_ref100","_callee70","_args70","_context70","_x84","code","errorCode","split","getGlobalConfigs","cleanStringify","object","copyWithoutCircularReferences","references","cleanObject","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee71","page","googlePageviewInfo","isOrigin","_args71","_context71","ga","_ref102","_callee73","googleEventsInfo","debugEnabled","originOk","_args73","_context73","analytics","google","addPostfixForTestnet","_ref103","_callee72","_context72","hitCallback","hitCallbackFail","_x86","_x87","_x85","createContract","_ref104","_callee74","_context74","_x88","_x89","_x90","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee77","activeOnly","whitelist","proposals","validProposals","_args77","_context77","_ref106","_callee76","checkedStrategies","_context76","end","author","snapshot","strategies","_ref107","_callee75","tokenContract","_context75","_x92","_x91","getAprsFromApi","_callee78","endpointInfo","aprs","_args78","_context78","_ref109","_callee79","forceStartTimestamp","frequency","order","filteredCachedData","_filteredData","apiInfo","filteredData","_args79","_context79","_x93","getTokenExchangeRate","_ref110","_callee80","exchangeRateParams","exchangeRate","_context80","_x94","_x95","getTokenDecimals","_ref111","_callee81","_context81","_x96","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee82","idleTokenConfig","feeDistributorConfig","_context82","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee83","contractPaused","_args83","_context83","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref114","_callee85","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context85","lastAllocationsPromise","_ref115","_callee84","lastAllocations","_context84","_x98","_x99","alloc","_x97","_ref116","_callee86","oldContractBalance","oldContractTokenDecimals","oldContractName","_context86","_x100","_x101","_ref117","_callee87","eventName","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args87","_context87","getBlockNumber","getContractPastEvents","callEvents","_x102","_x103","_ref118","_callee88","_args88","_context88","getPastEvents","_x104","_x105","estimateMethodGasUsage","_ref119","_callee89","methodParams","_contract$methods","functionCall","gasLimit","_ref120","_ref121","_args89","_context89","getGasPrice","estimateGas","_x106","_x107","_ref122","_callee90","userAddress","signedParameters","callback_receipt","_contract$methods2","_context90","on","once","confirmationNumber","receipt","_x108","_x109","_x110","_x111","_x112","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref123","_callee91","biconomyInfo","res","_context91","limits","apiId","headers","x-api-key","_x113","sendTxWithPermit","_ref124","_callee92","_contract$methods3","messageToSign","_this$getSignaturePar","_context92","encodeABI","personal","sign","_x114","_x115","_x116","_x117","_x118","_x119","buildBiconomyErc20ForwarderTx","_ref125","_callee93","permitType","callData","buildParams","_context93","txGas","erc20ForwarderClient","buildTx","_x120","_x121","_x122","_x123","_x124","_ref126","_callee95","_context95","_ref127","_callee94","_context94","_x126","_x127","_x125","sendBiconomyTxWithErc20Forwarder","_ref128","_callee96","req","metaInfo","txResponse","fetchReceiptIntervalId","_context96","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x128","_x129","_x130","_x131","sendBiconomyTxWithPersonalSign","_ref129","_callee97","_this$getSignaturePar2","_context97","getNonce","_x132","_x133","_x134","_x135","signPermitEIP2612","_ref130","_callee98","erc20Name","owner","spender","deadline","domain","permit","domainData","_context98","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x136","_x137","_x138","_x139","_x140","_x141","_x142","_x143","signPermit","_ref131","_callee99","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args99","_context99","net","getId","nonceMethod","round","pow","allowed","response","_x144","_x145","_x146","_ref132","_callee100","permitParams","methodAbi","useNonce","_args100","_context100","_jsonInterface","f","unshift","_x147","_x148","_x149","_x150","_x151","_x152","_x153","sendSignedTx","_ref133","_callee101","MetaTransaction","dataToSign","_context101","_x154","_x155","_x156","_x157","_x158","checkTokenApproved","_ref134","_callee102","contractAddr","_ref135","_ref136","allowance","_context102","getAllowance","gte","_x159","_x160","_x161","_ref137","_callee103","_context103","_x162","_x163","_x164","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee105","highestValue","_args105","_context105","lendRates","aprInfo","tokenAPR","_ref139","_callee104","_context104","_x165","_ref140","_callee106","_args106","_context106","_x166","_x167","calculateGaugeBoost","_ref141","_callee107","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args107","_context107","workingBalance","getTokenTotalSupply","workingSupply","_x168","_x169","availableGauges","getGaugeWeight","_ref142","_callee108","lastGaugeTimestamp","gaugeWeight","_context108","_x170","getGaugeAbsoluteWeight","_ref143","_callee109","_ref144","_ref145","totalWeight","_context109","_x171","getGaugeNextWeight","_ref146","_callee110","nextGaugeTimestamp","_context110","_x172","getGaugeRewardsTokens","_ref147","_callee111","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndex","rewardTokenAddress","_ref148","_ref149","rewardData","rewardTokenBalance","_ref150","_ref151","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_args111","_context111","rate","maxRewards","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x173","_ref152","_callee113","_args113","_context113","_ref153","_callee112","tokenGlobalConfig","stakingRewardsContract","_context112","_x176","_x174","_x175","_ref154","_callee114","field","addGovTokens","_args114","_context114","loadTrancheField","_x177","_x178","_x179","_x180","_x181","_x182","_x183","_x184","_ref155","_callee115","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","customAprFunction","additionalAprFunction","idleGovTokenConfig","_ref156","_ref157","totalSupply","virtualPrice","_ref158","_ref159","gaugeBalance","lastPrice1","staked1","totalStaked","_ref160","_ref161","deposited1","lastPrice","_ref162","_ref163","redeemable1","staked2","_ref164","_ref165","earningsStart","trancheApy2","deposited3","earningsEnd","_ref166","_ref167","trancheFee","earningsCounter","feesEnd","feesStart","_ref168","_ref169","deposited4","redeemable3","_ref170","_ref171","deposited2","redeemable2","tokensApy","trancheApr","trancheApyDecimals","baseApy","gaugeRewardsTokens","protocolBaseApy","_ref172","_ref173","_ref174","_ref175","earningsPerc","elapsedSecondsFromFirstDeposit","_ref176","_ref177","seniorPool","juniorPool","coverage","strategyCustomAprFunction","strategyApr","_ref178","_ref179","_ref180","_ref181","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args115","_context115","getCustomApr","getAdditionalApr","BB","getApyFromApi","getPlatformRates","apyLabel","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x185","_x186","_x187","_x188","_x189","_x190","_x191","loadAssetField","_ref182","_callee116","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref183","_ref184","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref185","_ref186","amountLentCurve1","redeemableBalanceCurve","_ref187","_ref188","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref189","_ref190","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref191","_ref192","tokenPriceFirstDeposit","_ref193","_ref194","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref195","_ref196","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref197","_ref198","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref199","_ref200","amountLentCurve2","redeemableBalanceCurve1","_ref201","_ref202","redeemableBalance2","_args116","_context116","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x192","_x193","_x194","_x195","getIdleTokenSupply","_ref203","_callee117","idleTokenSupply","_args117","_context117","_x196","getIdleTokenPriceWithFee","_ref204","_callee118","_ref205","_ref206","fee","priceWFee","_args118","_context118","eq","_x197","_x198","_ref207","_callee119","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args119","_context119","_x199","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref208","_callee120","_ref209","_ref210","idleTokensTotalSupply","userShare","_context120","_x200","_x201","openWindow","open","getActiveCoverages","_callee122","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args122","_context122","coverages","_ref212","_callee121","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context121","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x202","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref213","_callee124","incidentsInfo","_ref214","_ref215","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context124","directProps","buyer","_ref216","_callee123","cover","coverId","claimSubmittedEvent","_ref217","_ref218","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref219","_ref220","_context123","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x204","_x203","getBatchedDepositExecutions","_ref221","_callee125","_context125","_x205","getBatchedDeposits","_callee127","filter_by_status","batchDepositConfig","batchedDeposits","_args127","_context127","_ref223","_callee126","currBatchIndex","batchIndex","_ref224","_ref225","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context126","_x206","getETHBalance","_ref226","_callee128","fixDecimals","_args128","_context128","_x207","_ref227","_callee129","_ref228","_ref229","_args129","_context129","ERC20","_x208","_x209","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref230","_callee130","_args130","_context130","_x210","_ref231","_callee131","_args131","_context131","_x211","_ref232","_callee132","_args132","_context132","_x212","_x213","getProtocolBalance","_ref233","_callee133","_context133","_x214","_x215","getAprs","_ref234","_callee134","_context134","addresses","_x216","genericIdleCall","_ref235","_callee135","callParams","_args135","_context135","_x217","_ref236","_callee136","_contract$methods4","_args136","_context136","_x218","_x219","_ref237","_callee138","_args138","_context138","_ref238","_callee137","_context137","_x221","_x222","_x220","getTxDecodedLogs","_ref239","_callee140","logAddr","decodeLogs","internalTransfers","_context140","_ref240","_callee139","_context139","_x227","_x228","_x223","_x224","_x225","_x226","blocksToSeconds","blocks","blocksPerSeconds","_callee141","_context141","_callee142","blockInfoToSave","_args142","_context142","getBlock","genericContractCallCachedTTLNoMulticall","_ref243","_callee143","_args143","_context143","_x229","_x230","_ref244","_callee144","useMultiCall","_args144","_context144","_x231","_x232","_ref245","_callee145","_args145","_context145","_x233","_x234","_ref246","_callee146","_args146","_context146","_x235","_x236","cachedContractCall","_ref247","_callee147","_args147","_context147","_x237","_x238","prepareMulticallData","strip0x","_ref248","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref249","_callee148","decodedParams","_args148","_context148","decodeParameters","returnFields","_x239","_ref250","_callee149","inputTypes","callHash","_args149","_context149","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x240","_x241","_ref251","_callee150","_contract$methods5","_args150","_context150","_x242","_x243","_ref252","_callee151","async","_args151","_context151","_x244","_x245","getUnlentBalance","_ref253","_callee152","unlentBalance","_context152","_x246","_ref254","_callee153","_args153","_context153","_x247","getLastAllocations","_ref255","_callee155","tokenAllocations","_context155","_ref256","_callee154","_context154","_x249","_x250","_x248","_ref257","_callee156","protocolsAprs","_ref258","_ref259","govTokensBalances","_args156","_context156","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","total","_x251","getPoolTokenPrice","_ref260","_callee157","protocolContract","_ref261","_ref262","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref263","_ref264","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_args157","_context157","_x252","getSushiswapPoolTokenPrice","_ref265","_callee158","_ref266","_ref267","_ref268","_ref269","_context158","getSushiswapConversionRate","_x253","getSushiswapConversionRate_old","_ref270","_callee159","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context159","_x254","_x255","getCustomProtocolConversionRate","_ref271","_callee160","useWETH","forceTokenConfig","invertTokens","routerMethod","underlyingTokenConfig","unires","_args160","_context160","addressForPrice","conversionRateForceToken","conversionRateDirectConversion","conversionRateInvertTokens","conversionRouterMethod","_x256","_x257","getQuickswapConversionRate","_ref272","_callee161","_args161","_context161","_x258","_x259","_ref273","_callee162","_args162","_context162","_x260","_x261","_ref274","_callee163","_args163","_context163","_x262","_x263","getCurveDepositedTokens","_ref275","_callee164","idleTokensBalances","remainingCurveTokens","_args164","_context164","_x264","getCurveUnevenTokenAmounts","_ref276","_callee165","amounts","max_burn_amount","unevenAmounts","_context165","getCurveDepositContract","_x265","_x266","getMaticTrancheNFTs","_ref277","_callee167","_ref278","_ref279","poLidoNFT_address","stakeManager_address","maticTokenConfig","_ref280","_ref281","poLidoStakeManagerEpoch","currentPolygonHeight","tokenIds","epochIntervalInSeconds","currentEpochTimestamp","currentPolygonEpoch","_ref282","_ref283","lastEpochInfo","currentEpochInfo","tokensAmounts","_context167","PoLidoNFT","PoLidoStakeManager","_ref284","_callee166","tokenId","_ref285","_ref286","usersRequest","remainingEpochs","unlockDate","_context166","requestEpoch","currentEpoch","_x268","_x267","getMaticTrancheAdditionalApy","_ref287","_callee168","_ref288","_ref289","trancheAprRatio","additionalApys","_context168","apys","harvestTokenConfig","_x269","_x270","getMaticTrancheStrategyApr","_ref290","_callee169","_context169","_x271","getMaticTrancheApy","_ref291","_callee170","_ref292","_ref293","stratApr","FULL_ALLOC","currentAARatio","trancheAPRSplitRatio","isAATranche","_context170","_x272","_x273","_ref294","_callee171","platform","ratesInfo","_args171","_context171","_x274","_callee172","curveRatesInfo","_context172","strategyTokens","getCurveAPYContract","_callee173","blocksForPrevTokenPrice","_ref297","_ref298","prevTokenPrice","blocksMultiplier","curveAPR","_context173","getCurveTokenSupply","_callee174","_context174","getCurvePoolContract","_callee175","_args175","_context175","_callee176","_args176","_context176","_ref302","_callee177","_ref303","_ref304","_context177","_x275","_callee178","depositContractInfo","_context178","getCurveZapContract","_callee179","zapContractInfo","_context179","_callee180","poolContractInfo","_context180","getCurveSwapContract","_callee181","migrationContractInfo","_context181","getCurveIdleTokensAmounts","_callee183","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args183","_context183","_ref310","_callee182","coinIndex","curveIdleTokens","_context182","migrationParams","_x276","getCurveTokensAmounts","_callee185","useCoinIndex","_args185","_context185","_ref312","_callee184","_ref313","_ref314","idleTokenPrice","totalTokenSupply","_context184","_x277","getCurveAmounts","_ref315","_callee187","_args187","_context187","_ref316","_callee186","_context186","_x280","_x278","_x279","getCurveTokenAmount","_ref317","_callee188","_args188","_context188","_x281","getCurveSlippage","_ref318","_callee189","uneven_amounts","depositContract","_ref319","_ref320","Sv","_args189","_context189","_x282","_x283","_ref321","_callee190","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref322","_ref323","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args190","_context190","IAaveIncentivesController","emissionPerSecond","_x284","_callee192","_args192","_context192","_ref325","_callee191","_ref326","_ref327","_context191","_x285","getWMaticApr","_ref328","_callee193","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args193","_context193","_x286","_x287","getStkAaveApr","_ref329","_callee194","aaveConversionRate","stkAaveAPR","stkAaveValue","_args194","_context194","_x288","_x289","getCompAPR","_ref330","_callee195","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args195","_context195","_x290","_x291","getCompSpeed","_ref331","_callee196","cTokenAddress","compSpeed","_context196","_x292","_ref332","_callee197","cTokenInfo","compoundAllocationPerc","_ref333","_ref334","cTokenTotalSupply","compoundPoolShare","_args197","_context197","_x293","_callee199","_args199","_context199","_ref336","_callee198","_ref337","_ref338","_context198","_x294","_callee201","_args201","_context201","_ref340","_callee200","_ref341","_ref342","compApr","_context200","_x295","getTokensCsv","_callee204","csv","_context204","prototype","sum","pv","cv","avg","_ref344","_callee203","_context203","_ref345","_callee202","rates","header","rows","aprAvg","scoreAvg","lastRow","_context202","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x297","_x296","_callee206","convertToken","_args206","_context206","_ref347","_callee205","compTokenBalance","_context205","_x298","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref348","_callee208","govTokensUserDistribution","_args208","_context208","_ref349","_callee207","_context207","_x300","_x299","getGovTokensDistributionSpeed","_ref350","_callee210","govTokensDistribution","_args210","_context210","_ref351","_callee209","govSpeed","_context209","_x302","_x301","getGovTokensAprs","_ref352","_callee212","govTokensAprs","_args212","_context212","_ref353","_callee211","_ref354","_ref355","_ref356","_ref357","cTokenConfig","_context211","aprTooltipMode","_x305","_x303","_x304","_callee214","_args214","_context214","_ref359","_callee213","govTokenBalance","fromTokenConfig","_context213","_x306","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee215","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args215","_context215","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref361","_callee217","govTokensAmounts","_context217","getGovTokensUserAmounts","_ref362","_callee216","govTokenIndex","govTokenAddress","_context216","getGovTokenAddessByIndex","_x309","_x310","_x307","_x308","_ref363","_callee218","_context218","_x311","_x312","_ref364","_callee219","_context219","_x313","_x314","_callee222","govTokenConfigForced","_args222","_context222","_ref366","_callee221","_context221","_ref367","_callee220","_context220","_x316","_x317","_x315","getTokenFees","_callee223","_args223","_context223","_callee224","_ref370","_ref371","feePercentage","gain","fees","_args224","_context224","_ref372","_callee225","_args225","_context225","_x318","getTotalTVL","_callee226","tokensTVL","_context226","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee230","_context230","_ref375","_callee229","_context229","_ref376","_callee228","oldTokenTVL","idleTokenName","_ref377","_ref378","oldTokenConfig","_ref382","_ref383","oldTokenPrice","oldTotalSupply","_context228","showAUM","_ref379","_callee227","_ref380","_ref381","govTokenConversionRate","govTokenBalanceConverted","_context227","_x321","oldProtocols","oldProtocol","protocolPos","_x320","_x319","getSubstackLatestFeed","_callee231","idleSubstackFeed","latestFeed","_context231","getTrancheAggregatedStats","_callee235","totalAUM","_args235","_context235","_ref386","_callee234","_context234","_ref387","_callee233","_context233","_ref388","_callee232","_ref389","_ref390","_context232","_x324","_x323","_x322","getAggregatedStats","_callee237","allNetworks","networkIds","callsFailed","tvls","_args237","_context237","_ref392","_callee236","_context236","_x325","getAggregatedStats_chain","_callee242","avgAPR","_args242","_context242","availableStrategiesNetworks","_ref394","_callee241","_context241","_ref395","_callee240","_context240","_ref396","_callee239","tokenAUM","_context239","_ref397","_callee238","_ref398","_ref399","_context238","_x329","_x328","_x327","_x326","getTokenApy","_ref400","_callee243","_context243","_x330","getTokensToMigrate","_callee246","_args246","_context246","_ref402","_callee245","_context245","_ref403","_callee244","_ref404","_context244","_x332","_x331","getProtocolsTokensBalances","_callee248","tokenBalances","minTokenBalance","protocolsTokens","_args248","_context248","_ref406","_callee247","_context247","_x333","getTokenConversionRateField","getTrancheTokenConversionRate","_ref407","_callee249","trancheTokenConfig","trancheTokenConversionRate","_args249","_context249","isPoolToken","conversionRateProtocolContract","_x334","_ref408","_callee250","_args250","_context250","_x335","_x336","_ref409","_callee251","_args251","_context251","_x337","_x338","_x339","getAvgAPYStats","_ref410","_callee252","apiResults","_args252","_context252","blocknumber","_x340","_x341","_ref411","_callee253","statsTokenConfig","ToTokenConfig","_args253","_context253","addressForPriceFrom","conversionRateUseWETH","_x342","_ref412","_callee254","count","_conversionRate","_args254","_context254","_x343","_x344","getTokenScore","_ref413","_callee255","_ref414","_ref415","tokenScore","_context255","protocolScore","getTokenScoreApi","_x345","_x346","_ref416","_callee256","scores","_context256","_x347","_x348","_ref417","_callee257","idleGovTokenShowAPR","idleAPR","_args257","_context257","_x349","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","defaultOpacity","hidden","clickable","rainbow","DashboardCardContext","createContext","DashboardCard","isClickable","isVisible","isRainbow","active","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","_Title_Title__WEBPACK_IMPORTED_MODULE_5__","as","lineHeight","titleProps","description","Provider","Consumer","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","hasClickFunction","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","SendTxWithBalance","inputValue","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","allowZeroValue","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","getPermitTransactionParams","getTransactionParams_async","eventValue","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","checkPermit","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","ExtLink","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","placeholder","textTransform","Gauges","canVote","claimText","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","nextProps","nextState","stateChanged","contractsChanged","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","voteUserSlope","claimableRewards","_this4","oldPowerUsed","power","loadGauges","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","gaugeDistributionRatePerSecond","userBoostedShare","_this7","userDistributionRate","idleApy","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","_this8","votingWeight","depositedAmount","withdrawnAmount","_this9","votingPowerPercentage","gaugeAddress","_this10","selectToken","setSelectedAction","setStakeAction","setClaimToken","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","Title","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","Faquestion","isShowingAnswer","preventDefault","isOpened","h4","question","answer","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","src_Faquestion_Faquestion","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","ModalCard","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","resetModal","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","flexBasis","flexWrap","TrancheField","showSelectButton","selectTrancheType","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","unlentAmount","stakeEnabled","unstakeEnabled","trancheBaseApy","allowAAWithdraw","allowBBWithdraw","claimedNFTAmount","pendingNFTAmounts","modalAction","poolUtilizationRate","selectedTrancheOption","selectedStakeAction","maxPoolUtilizationRateReached","acceptMaxPoolUtilizationRateReached","penaltyFee","Pool","_referral","getReferralAddress","referralEnabled","trancheTokenToRedeem","toggleAcceptMaxPoolUtilizationRate","checkModal","selectedActionChanged","selectedStakeActionChanged","modal","utilizationRate","pendingNFTAmount","pendingNFTs","nfts","pendingNFT","maxUnlockDate","isAfter","maxUtilizationRate","eventConfig","ClaimNFT","event","claimTokensEvent","amountField","isStake","isDeposit","isWithdraw","maxPoolUtilizationRateReachedText","links","withdrawEnabled","showReferral","modalEnabled","option","selectTranche","borderTop","ImageButton","caption","imageSrc","claimNFTSucceeded","unstakeWithBalance","unstake","contractApprovedCallback","PortfolioEquityTranches","transactionsList","walletProvider","subgraphEnabled","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","blocksTimestamps","conversionRateBlocksCalls","conversionRatesTimestamps","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","bg","features","feature","TrancheFlash","flashData","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","lastUpdate","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","availableTranchesChanged","param3","tranchesTvls","tvl","tranchesOrdering","loadQueryParams","then","defineProperty","depositedCdos","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","goBack","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","isDashboard","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","BuyModal","showInline","availableMethods","buyToken","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","bestYieldDisabledMessage","aysShort","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","themeTogglerEnabled","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","lido","REACT_APP_IDLE_KEY","Authorization","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","QuickswapRouter","QuickswapV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","stMATIC","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","hex","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","enabledStatsNetworks","substack","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","DQUICK","CXETHWETH","ALUSD3CRV","MUSD3CRV","PBTCCRV","MUSD","ANGLE","PNT","3EUR","STECRV","SPELL","CPOOL","RBN","MATIC","USD","USDCBB","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","FEI","TRU","AGEUR","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","quickswap","convex","mstable","euler","wintermute","folkvang","clearpool","ribbon","truefi","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","secondsPerDay","weeksPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","checkpoint","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","polygonscan","REACT_APP_POLYGONSCAN_KEY","REACT_APP_POLYGONSCAN_KEY2","REACT_APP_POLYGONSCAN_KEY3","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","stETH","LiquidityGauge","multiRewards","steCRV","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","getAccountBalance","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","orderedTranches","protocolTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","IdleCDO","defiScoreDisabled","disabledMessageDepositKey","disabledMessageRedeemKey","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","Web3Connectors","setNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","attempsTimeoutIds","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","maxCount","_args","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","h2","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","checkGnosisSafeNetwork","currentSafeNetworkId","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyEnabled","biconomyWeb3Provider","_args8","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args9","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","defaultNetworkID","defaultWeb3","getNetworkType","getNetworkId","currentNetworkChanged","_args24","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","ScrollToTop","pathname","useLocation","useEffect","currYear","getFullYear","governanceEnabled","columnWidth","footer","role","aria-label","PageNotFound","h1","Header_styles","src_Footer_Footer","IdleCDOPolygon","IdleStrategy","buyInstructions","TrancheStakingRewards","IdleCDOTrancheRewards","adaptiveYieldSplitEnabled","levUSDC","USDCWin","lender","Clearpool","USDCFolk","RibbonPool","TruefiPool","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","node","Dashboard","lazy","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","web3Connectors","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","getConnectors","dist_default","web3Api","libraryName","dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","buttonState","ctaType","ctas","ButtonComponent","Button","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","titles","ctaPrimaryText","hover","secondary","dropdownBg","flashBg","cardBgActive","paused","disabledBg","exit","bg-bottom-right","bg-noise","titleType","HeadingComponent","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_10__","lineWidth","react__WEBPACK_IMPORTED_MODULE_13___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_20__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_21__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","trancheChanged","protocolChanged","fieldChanged","formattedValue","rimble_ui__WEBPACK_IMPORTED_MODULE_22__","lenderConfig","lenderIcon","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_17__","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_15__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_12___default","_isBigNumber","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_16__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_19__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_14__","ColTitle","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","PerformanceChartRowElement","$PerformanceChartRowElement","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_19__","earningsCurve","tooltipMode","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_20__"],"mappings":"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","file":"static/js/main.6f172053.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3],\n        justifyContent:'center'\n      },\n      this.props.cardProps\n    );\n\n    const textProps = {...this.props.textProps};\n    if (this.props.isActive){\n      textProps.color = 'primary';\n    }\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        backgroundColor={\"blue\"}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align || \"center\"}\n          mx={this.props.margin ? this.props.margin : 0}\n        >\n          {\n            this.props.iconBgColor && !this.props.useIconOnly ? (\n              <Flex\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                backgroundColor={this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem}\n              >\n                {\n                  this.props.image ? (\n                    <Image\n                      align={\"center\"}\n                      src={this.props.image}\n                      height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      {...this.props.imageProps}\n                    />\n                  ) : (\n                    <Icon\n                      align={\"center\"}\n                      name={this.props.icon}\n                      size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                      {...this.props.iconProps}\n                    />\n                  )\n                }\n              </Flex>\n            ) : this.props.image ? (\n              <Image\n                mr={1}\n                align={\"center\"}\n                src={this.props.image}\n                height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                {...this.props.imageProps}\n              />\n            ) : this.props.icon && (\n              <Icon\n                mr={1}\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                {...this.props.iconProps}\n              />\n            )\n          }\n          <Text\n            fontWeight={3}\n            fontSize={[1, 2]}\n            {...textProps}\n          >\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__AZvaE\",\"mobile\":\"TrancheWelcome_mobile__8mpVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__2_KWY\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__KcFts\",\"bgContainer\":\"PageNotFound_bgContainer__31oWs\",\"list\":\"PageNotFound_list__lpaEt\",\"textContainer\":\"PageNotFound_textContainer__IPqbe\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'primary'}\n             fontFamily={'titles'}\n             hoverColor={'primary'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  fontFamily={'titles'}\n                  hoverColor={'primary'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'primary' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      justifyContent:'center',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled,\n      contrastColor:'ctaPrimaryText'\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n        type={'primary'}\n        buttonProps={buttonProps}\n        handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'ctaPrimaryText'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    // console.log(this.props.eventData,{\n    //   eventCategory: 'Transaction',\n    //   eventLabel: this.props.methodName,\n    //   eventAction: this.props.contractName,\n    //   ...this.props.eventData\n    // });\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName,\n        ...this.props.eventData\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      // if (props.menuIsOpen) {\n      //   cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      // }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"dropdownBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.svg`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass GenericModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    if (!this.props.checkboxEnabled){\n      this.toggleDontShowAgain(true)\n    }\n    this.props.closeModal();\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage(this.props.id,'true');\n    } else {\n      this.functionsUtil.removeStoredItem(this.props.id);\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            icon={this.props.icon}\n            title={this.props.title}\n            iconHeight={this.props.iconHeight || '40px'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{\n                  __html: this.props.text\n                }}\n              />\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.props.checkboxEnabled && (\n                  <Checkbox\n                    mb={3}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                )\n              }\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                {this.props.buttonText}\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GenericModal;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  timeoutIds = [];\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    this.timeoutIds.forEach( timeoutId => window.clearTimeout(timeoutId) );\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          this.timeoutIds.push(window.setTimeout(() => {\n            this.initProgressBar();\n          },1000));\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__FSkvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__XFIHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__3gfAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__22U7L\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__XwnoZ\",\"empty\":\"Header_empty__sl23U\",\"select\":\"Header_select__3MUn8\",\"selectDark\":\"Header_selectDark__2UhPg\",\"input\":\"Header_input__33yby\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport PoLidoNFT from '../abis/lido/PoLidoNFT.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport PoLidoStakeManager from '../abis/lido/PoLidoStakeManager.json';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    // console.log('setProps',props.contracts);\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  initContract = async (contractName,address,abi) => {\n    const contractInfo = await this.props.initContract(contractName, address, abi);\n    const contractFound = this.getContractByName(contractName);\n    if (!contractFound && contractInfo){\n      this.props.contracts.push(contractInfo);\n    }\n    return contractInfo;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (protocolToken) => {\n        const tokenConfig = protocolConfig[protocolToken];\n        const token = tokenConfig.token;\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,18);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,18);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,18).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  cdo:tokenConfig.CDO.name,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,'trancheStakedBalance',trancheStakedBalance.toFixed(),'amountDeposited',amountDeposited.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheEarnings',trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig && rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getOnChainTokenConversionRate(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    // console.log('etherscanTxs', etherscanTxs)\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section.replace(/^\\//,'')}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits,\n      trancheToken_received,\n      trancheToken_sent\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserTransactionsEvents',account,tokenConfig.token,trancheToken_transfers_in,trancheToken_transfers_out);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    if (trancheToken_received){\n      trancheToken_received.forEach( tx => {\n        tx.type = 'trancheReceived';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_received = [];\n    }\n\n    if (trancheToken_sent){\n      trancheToken_sent.forEach( tx => {\n        tx.type = 'trancheSent';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_sent = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const trancheTypes = trancheConfig_filter ? [trancheConfig_filter.tranche] : Object.keys(this.getGlobalConfig(['tranches']));\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n\n          const gaugeConfig = this.getTrancheGaugeConfig(tokenConfig.protocol,tokenConfig.token);\n\n          const trancheTokenAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n          const cdoRewardsContractAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].CDORewards.address.toLowerCase()) ).filter( addr => addr !== '0x0000000000000000000000000000000000000000' );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          const stakingContractAddresses = cdoRewardsContractAddresses;\n          if (gaugeConfig){\n            stakingContractAddresses.push(gaugeConfig.address.toLowerCase());\n          }\n\n          const isTrancheReceived = tx.from.toLowerCase() !== '0x0000000000000000000000000000000000000000' && !stakingContractAddresses.includes(tx.from.toLowerCase()) && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheSent = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() !== '0x0000000000000000000000000000000000000000' && !stakingContractAddresses.includes(tx.to.toLowerCase());\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          } else if (isTrancheReceived){\n            type = 'trancheReceived';\n          } else if (isTrancheSent){\n            type = 'trancheSent';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          // if (type){\n          //   console.log('tx',tokenConfig.token,tx.hash,tx.from,tx.to,stakingContractAddresses,type);\n          // }\n\n          return type;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress=null,contractAddress,toAddress=null,fromBlock=0,toBlock='latest',sort='asc',limit=null) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    let endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=${sort}`;\n    // if (limit && parseInt(limit)>0){\n    //   endpoint = endpoint+`&limit=${limit}`;\n    // }\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => ((!fromAddress || tx.from.toLowerCase() === fromAddress.toLowerCase()) && (!toAddress || tx.to.toLowerCase() === toAddress.toLowerCase())));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return limit && parseInt(limit)>0 ? transferEvents.slice(0, limit) : transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n\n  getTrancheHarvests = async (tokenConfig, trancheConfig, limit=null) => {\n    const [\n      // stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      // this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n    ])\n\n    const harvestsList = {}; //stakingRewardsDistributions || {};\n\n    await this.loadTrancheStrategyContract(tokenConfig);\n\n    const cdoConfig = tokenConfig.CDO;\n    const strategyConfig = tokenConfig.Strategy;\n    let latestHarvestBlock = await this.genericContractCall(strategyConfig.name, 'latestHarvestBlock');\n\n    // console.log('latestHarvestBlock', tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, latestHarvestBlock)\n\n    if (!latestHarvestBlock || !parseInt(latestHarvestBlock)){\n      latestHarvestBlock =  'latest';\n    }\n    \n    await this.asyncForEach(Object.keys(autoFarming), async (token) => {\n      const farmTokenConfig = this.getTokenConfig(token);\n      const [\n        farmTokenTransfers_cdo,\n        farmTokenTransfers_strategy\n      ] = await Promise.all([\n        this.getEtherscanTokenTransfers(tokenConfig.token, cdoConfig.address, null, farmTokenConfig.address, null, tokenConfig.blockNumber, latestHarvestBlock, 'desc'),\n        this.getEtherscanTokenTransfers(tokenConfig.token, strategyConfig.address, null, farmTokenConfig.address, null, tokenConfig.blockNumber, latestHarvestBlock, 'desc')\n      ])\n\n      const farmTokenTransfers = farmTokenTransfers_cdo.concat(farmTokenTransfers_strategy)\n\n      // console.log('transfers', token, farmTokenTransfers);\n\n      const harvests = await this.getEtherscanTokenTransfers(tokenConfig.token, strategyConfig.address, null, tokenConfig.address, strategyConfig.address, tokenConfig.blockNumber, latestHarvestBlock, 'desc');\n\n      if (harvests && harvests.length > 0) {\n        const farmTokenTransfersHash = farmTokenTransfers.map( transfer => transfer.hash.toLowerCase() );\n        harvestsList[token] = harvests.filter( harvest => farmTokenTransfersHash.includes(harvest.hash.toLowerCase()) )\n        if (parseInt(limit)) {\n          harvestsList[token] = harvestsList[token].splice(0, limit);\n        }\n      }\n\n      // console.log('harvestsList', token, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, farmTokenTransfers, harvests, harvestsList)\n    });\n\n    return harvestsList;\n  }\n  loadTrancheStrategyContract = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = strategyConfig.address || await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress){\n      await this.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      return idleStrategyAddress;\n    }\n    return false;\n  }\n  getTrancheLastHarvest = async (tokenConfig, trancheConfig) => {\n\n    const trancheHarvests = await this.getTrancheHarvests(tokenConfig, trancheConfig, 1);\n\n    // console.log('trancheHarvests', trancheHarvests)\n\n    const lastHarvest = Object.keys(trancheHarvests).reduce( (lastHarvest, token) => {\n      const harvests = trancheHarvests[token];\n      harvests.forEach( harvest => {\n        if (!lastHarvest || harvest.timeStamp>lastHarvest.timestamp){\n          lastHarvest = {\n            timestamp:harvest.timeStamp,\n            transactionHash:harvest.hash,\n            blockNumber:harvest.blockNumber,\n            amount:this.BNify(harvest.returnValues.value),\n          }\n        }\n      })\n      return lastHarvest;\n    }, null);\n\n    // console.log('getTrancheLastHarvest', trancheHarvests, lastHarvest);\n\n    return lastHarvest;\n  }\n  getTrancheLastHarvest_old = async (tokenConfig,trancheConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const harvestEnabled = strategyConfig.harvestEnabled === undefined ? true : strategyConfig.harvestEnabled;\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n\n    if (!harvestEnabled || (!autoFarming || !Object.keys(autoFarming).length)){\n      return null;\n    }\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.loadTrancheStrategyContract(tokenConfig);\n\n    if (idleStrategyAddress) {\n      let limit = null;\n      let startBlock = tokenConfig.blockNumber;\n      let latestHarvestBlock = await this.genericContractCall(strategyConfig.name, 'latestHarvestBlock');\n\n      if (!latestHarvestBlock || !parseInt(latestHarvestBlock)){\n        return null;\n      }\n\n      startBlock = latestHarvestBlock;\n      latestHarvestBlock++;\n\n      let transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, idleStrategyAddress, null, tokenConfig.address, idleStrategyAddress, startBlock, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length) {\n\n        if (limit){\n          transfers = transfers.slice(0,limit);\n        }\n\n        let timestamp = null;\n        const totalAmount = transfers.reduce( (amount,t) => {\n          if (!timestamp){\n            timestamp = t.timeStamp;\n          }\n          amount = amount.plus(this.BNify(t.returnValues.value));\n          return amount;\n        },this.BNify(0));\n\n        return {\n          timestamp,\n          amount:totalAmount,\n          blockNumber:latestHarvestBlock,\n          transactionHash:transfers[0].transactionHash\n        };\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      poolSupply,\n      conversionRate,\n    ] = await Promise.all([\n      this.convertTrancheTokenBalance(poolSupply,poolTokenConfig),\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n    ]);\n\n    // console.log('getGovTokenApr',govToken,govTokenConfig,poolTokenConfig.token,poolSupply.toFixed(),conversionRate.toFixed());\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let firstBlockInfo = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      // let firstBlockPoolSize = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getTokenConfig(token);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length >= 2) {\n          const prevHarvest = transfers[transfers.length - 2];\n          const latestHarvest = transfers[transfers.length - 1];\n          \n          const firstBlock = prevHarvest.blockNumber;\n          [\n            firstBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            // firstBlockPoolSize,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getOnChainTokenConversionRate(govTokenConfig),\n            // this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, firstBlock),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (firstBlockInfo && lastBlockInfo) {\n            lastBlockPoolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            let poolSize = lastBlockPoolSize;\n\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - firstBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            // totalAmount = transfers.reduce((total, t) => {\n            //   total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            //   return total;\n            // }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              prevHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n\n            // console.log(token, prevHarvest.hash, latestHarvest.hash, (conversionRate? conversionRate.toFixed():null), totalAmount.toFixed(),elapsedSeconds,tokensPerYear.toFixed(),convertedTokensPerYear.toFixed(),poolSize.toFixed(),tokenApr.toFixed());\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUnlentAmount = async (tokenConfig) => {\n    return await this.getTokenBalance(tokenConfig.token, tokenConfig.CDO.address);\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem','trancheReceived','trancheSent'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      // const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n      const [\n        blockInfo,\n        tokenConversionRate,\n        tranchePrice\n      ] = await Promise.all([\n        this.getBlockInfo(trancheTokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,trancheTokenTransferEvent.blockNumber),\n        this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address], {}, trancheTokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[trancheTokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tranchePrice,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n\n      const tranchePrice = this.fixTokenDecimals(blocksInfo[trancheTokenTransferEvent.blockNumber].tranchePrice, tokenConfig.decimals);\n\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n      const tokenAmount = tokenTransferEvent ? this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals) : trancheTokenAmount.times(tranchePrice);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed());\n\n      // const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[trancheTokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${trancheTokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        cdo: tokenConfig.CDO.name,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: trancheTokenTransferEvent.transactionHash,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n        blockNumber: trancheTokenTransferEvent.blockNumber,\n        tokenKey: tokenConfig.tokenKey || tokenConfig.token\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[trancheTokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      // if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      if (['trancheDeposit','trancheReceived'].includes(trancheTokenTransferEvent.type)) {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      // } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      } else if (['trancheRedeem','trancheSent'].includes(trancheTokenTransferEvent.type)) {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        \n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = totalAmountDeposited.gt(0) ? avgBuyPrice.div(totalAmountDeposited) : this.BNify(0);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (this.BNify(userAvgPrice).isNaN()) {\n      const tokenKey = tokenConfig.tokenKey || tokenConfig.token;\n      userAvgPrice = await this.getAvgBuyPrice([tokenKey], account);\n      userAvgPrice = userAvgPrice[tokenKey] || this.BNify(1);\n    } else {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n    }\n\n    // console.log('getAmountDeposited', tokenConfig.idle.token, tokenBalance.toString(), userAvgPrice.toString())\n\n    if (tokenBalance) {\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = this.props.maticPOSClient ? await this.props.maticPOSClient.isCheckPointed(polygonTx.hash) : false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included && this.props.maticPOSClient){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetworkId]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    // const currentNetwork = this.getRequiredNetwork();\n    const resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        txs = await this.filterEthereumTxs(results, allAvailableTokens);\n        \n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled || !subgraphConfig.availableNetworks.includes(requiredNetworkId)){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n    const networkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    if (!subgraphConfig.availableNetworks.includes(networkId)){\n      return null;\n    }\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n\n    let results = [];\n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n    if (!size){\n      return false;\n    }\n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    if (!results || !results.length){\n      return null;\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranchesNetworks[networkId]).forEach( protocol => {\n      Object.keys(this.props.availableTranchesNetworks[networkId][protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = null, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = null, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n\n    if (data) {\n      return data;\n    }\n\n    return null;\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    if (!data || !data.data){\n      return null;\n    }\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  cleanStringify = (object) => {\n    if (object && typeof object === 'object') {\n      object = copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n\n    function copyWithoutCircularReferences(references, object) {\n      var cleanObject = {};\n      Object.keys(object).forEach(function(key) {\n        var value = object[key];\n        if (value && typeof value === 'object') {\n          if (references.indexOf(value) < 0) {\n            references.push(value);\n            cleanObject[key] = copyWithoutCircularReferences(references, value);\n            references.pop();\n          } else {\n            cleanObject[key] = '###_Circular_###';\n          }\n        } else if (typeof value !== 'function') {\n          cleanObject[key] = value;\n        }\n      });\n      return cleanObject;\n    }\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,callEvents) => {\n      callEvents.forEach( e => {\n        if (e){\n          events.push(e);\n        }\n      });\n      // events = events.concat(callEvents);\n      return events;\n    },[]);\n  }\n\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    if (!permitConfig.nonceMethod || !baseContract.methods[permitConfig.nonceMethod]){\n      return false;\n    }\n\n    // console.log('signPermit',baseContractName,baseContract,baseContract.methods,permitConfig.nonceMethod);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = await baseContract.methods[permitConfig.nonceMethod](holder).call();\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    // console.log('checkTokenApproved', contractName, contractAddr, walletAddr, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    // const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}_${methodName}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTrancheStakedBalance (CACHED)',cachedDataKey,cachedData)\n\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return stakedBalance;\n        // return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim,\n      workingSupply:working_supply\n    };\n  }\n  getTrancheGaugeConfig = (protocol, token) => {\n    const availableGauges = this.getGlobalConfig(['tools','gauges','props','availableGauges'])\n    const gaugeToken = Object.keys(availableGauges).find( gaugeToken => availableGauges[gaugeToken].protocol.toLowerCase() === protocol.toLowerCase() && gaugeToken.toLowerCase() === token.toLowerCase() );\n    if (gaugeToken){\n      return availableGauges[gaugeToken];\n    }\n    return null;\n  }\n  getGaugeWeight = async (gaugeConfig) => {\n    const currTimestamp = parseInt(Date.now()/1000);\n    let lastGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    if (!lastGaugeTimestamp){\n      lastGaugeTimestamp = currTimestamp;\n    }\n\n    const params = [gaugeConfig.address];\n\n    if (lastGaugeTimestamp<currTimestamp){\n      params.push(lastGaugeTimestamp);\n    }\n\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',params);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeAbsoluteWeight = async (gaugeConfig) => {\n    let [\n      totalWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      this.genericContractCall('GaugeController','get_total_weight'),\n      this.genericContractCall('GaugeController','get_gauge_weight',[gaugeConfig.address])\n    ]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    totalWeight = this.fixTokenDecimals(totalWeight,19);\n\n    return this.normalizeTokenAmount(gaugeWeight.div(totalWeight),18);\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp]);\n\n    // console.log('getGaugeNextWeight',gaugeConfig.protocol,gaugeConfig.underlyingToken,gaugeConfig.address,blockInfo.timestamp,nextGaugeTimestamp,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN() || gaugeWeight.lte(0)){\n      gaugeWeight = await this.getGaugeAbsoluteWeight(gaugeConfig);\n    }\n\n    // if (gaugeWeight.isNaN()){\n    //   gaugeWeight = await this.getGaugeWeight(gaugeConfig);\n    // }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      for (let tokenIndex=0; tokenIndex<multiRewardsConfig.maxRewards; tokenIndex++){\n      // await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCall(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      };\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getTokenConfig(tokenConfig.token);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n      if (!methodAbi){\n        return;\n      }\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let paused = false;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = tokenConfig.multiCallDisabled === undefined ? true : tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n\n    const tokenName = this.getTokenConfig(tokenConfig.token).label || this.capitalize(tokenConfig.token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = gaugeConfig || (stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false);\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n\n    const customAprFunction = tokenConfig.functions && tokenConfig.functions.getCustomApr ? this[tokenConfig.functions.getCustomApr] : null;\n    const additionalAprFunction = tokenConfig.functions && tokenConfig.functions.getAdditionalApr ? this[tokenConfig.functions.getAdditionalApr] : null;\n    \n    // Create Tranche Strategy contract\n    await this.loadTrancheStrategyContract(tokenConfig);\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = '$ '+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n\n      case 'seniorPoolConvertedNoLabel':\n        output = await this.loadTrancheField('poolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolConvertedNoLabel':\n        output = await this.loadTrancheField('poolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.fixTokenDecimals(output, 5);\n        }\n\n        if (this.BNify(output).isNaN()) {\n          output = this.BNify(0);\n        }\n\n        if (formatValue){\n          output = output.times(100)+'%';\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            gaugeBalance,\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals, trancheConfig.functions.stakedBalance)\n          ]);\n\n          let totalStaked = this.BNify(0);\n          if (staked1){\n            totalStaked = totalStaked.plus(staked1);\n          }\n          if (gaugeBalance){\n            totalStaked = totalStaked.plus(gaugeBalance);\n          }\n\n          if (!totalStaked.isNaN() && lastPrice1) {\n            output = this.BNify(totalStaked).times(lastPrice1);\n            // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApr = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let protocolBaseApy = this.BNify(0);\n\n        if (additionalAprFunction){\n          tokensApy = await additionalAprFunction(tokenConfig, trancheConfig);\n        }\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          protocolBaseApy,\n          trancheApr\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.getApyFromApi ? this.getPlatformRates(tokenConfig.getApyFromApi.protocol, tokenConfig.getApyFromApi.path) : null,\n          customAprFunction ? customAprFunction(tokenConfig, trancheConfig) : (multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]))\n        ]);\n\n        // console.log('rewardsTokensInfo', protocol, token, tranche, customAprFunction, trancheApr)\n\n        if (trancheApr){\n          let apr = this.fixTokenDecimals(trancheApr, tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(protocolBaseApy).isNaN()){\n            apy = apy.plus(protocolBaseApy);\n            tokensApy[`${tokenConfig.getApyFromApi.apyLabel}`] = protocolBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                \n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add additional aprs to total apy\n          Object.values(tokensApy).forEach( tokenApy => {\n            apy = apy.plus(tokenApy);\n          })\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n\n          // console.log(field, protocol, token, tranche, output)\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy', earningsPerc.toString(), firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const elapsedSecondsFromFirstDeposit = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.apr2apy(this.BNify(earningsPerc).times(31536000).div(elapsedSecondsFromFirstDeposit).div(100)).times(100);\n\n          // console.log('realizedApy', firstDepositTx, elapsedSecondsFromFirstDeposit, parseFloat(elapsedSecondsFromFirstDeposit/86400), earningsPerc.toString(), this.BNify(earningsPerc).times(31536000).div(elapsedSecondsFromFirstDeposit), output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'seniorCoverage':\n        const [\n          seniorPool,\n          juniorPool\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false),\n        ]);\n\n        output = '0%';\n        if (this.BNify(seniorPool).gt(0) && this.BNify(juniorPool).gt(0)){\n          // output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          // output = '$'+this.abbreviateNumber(juniorPool, decimals, maxPrecision, minPrecision)\n          let coverage = juniorPool.div(seniorPool);\n          \n          if (this.BNify(coverage).isNaN()){\n            coverage = this.BNify(0);\n          }\n\n          if (formatValue){\n            output = '$1 is covered by $'+this.abbreviateNumber(coverage, decimals, maxPrecision, minPrecision)\n          } else {\n            output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          }\n        }\n      break;\n      case 'strategyApr':\n        const strategyCustomAprFunction = tokenConfig.Strategy.customAprFunction ? this[tokenConfig.Strategy.customAprFunction] : null;\n        output = strategyCustomAprFunction ? await strategyCustomAprFunction(tokenConfig) : await this.genericContractCallCached(tokenConfig.Strategy.name, 'getApr');\n        if (!output){\n          output = 0;\n        }\n        output = strategyCustomAprFunction ? this.BNify(output) : this.fixTokenDecimals(output,18);\n        if (formatValue){\n          output = output.toFixed(decimals) + '%';\n        }\n      break;\n      case 'apyBoost':\n        let trancheApy = 0;\n        let strategyApr = 0;\n        [\n          trancheApy,\n          strategyApr\n        ] =  await Promise.all([\n          this.loadTrancheFieldRaw('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('strategyApr', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n        ]);\n\n        output = this.BNify(strategyApr).gt(0) ? this.BNify(trancheApy).div(this.BNify(strategyApr)) : this.BNify(0);\n\n        // console.log('apyBoost', 'trancheApy' ,this.BNify(trancheApy).toString(), 'strategyApr', this.BNify(strategyApr).toString(), output.toString());\n\n        if (formatValue){\n          output = `${output.toFixed(1)}x`;// (${strategyApr.toFixed(2)}%)`;\n        }\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        if (formatValue) {\n          output = output/1000;\n          output = output.toFixed(0)+\"/\"+(100-output).toFixed(0);\n        }\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusIcon':\n        paused = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'paused');\n        if (paused){\n          output = 'paused';\n        }\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        paused = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'paused');\n        if (paused){\n          output = 'paused';\n        } else {\n          output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'limit', 3600);\n          if (output){\n            output = this.fixTokenDecimals(output, tokenConfig.decimals);\n\n            if (field === 'trancheLimit'){\n              if (output.gt(0)){\n                if (formatValue) {\n                  output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n                }\n              } else {\n                output = this.BNify(0);\n                if (formatValue){\n                  output = 'None';\n                }\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : null));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getTokenConfig(govToken);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getTokenConfig(contractName);\n      if (tokenConfig){\n        await this.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getPoolTokenPrice = async (contractName, protocolContract=null) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getOnChainTokenConversionRate(token0_config, 'latest', protocolContract),\n        this.getOnChainTokenConversionRate(token1_config, 'latest', protocolContract)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log('getPoolTokenPrice',contractName,protocolContract,token0_address,token1_address,token0_price.toFixed(),token1_price.toFixed(),poolTokenPrice.toFixed());\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate_old = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  getCustomProtocolConversionRate = async (tokenConfigFrom, tokenConfigDest, protocolContract=null, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = {...tokenConfigDest};\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Force token from - in case DAI doesn't exist\n    if (tokenConfigDest.conversionRateForceToken){\n      const forceTokenConfig = this.getTokenConfig(tokenConfigDest.conversionRateForceToken);\n      if (forceTokenConfig){\n        tokenConfigFrom = forceTokenConfig;\n      }\n    }\n\n    // Check if has to convert without passing through WETH\n    if (typeof tokenConfigDest.conversionRateDirectConversion !== 'undefined'){\n      useWETH = useWETH && !tokenConfigDest.conversionRateDirectConversion;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `customProtocolConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const invertTokens = !!tokenConfigDest.conversionRateInvertTokens;\n      const routerMethod = tokenConfigDest.conversionRouterMethod || 'getAmountsIn';\n\n      const path = [];\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigDest.address : tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigFrom.address : tokenConfigDest.address);\n\n      let decimals = tokenConfigDest.decimals || 18;\n      \n      // Use decimals of underlying token if set\n      if (routerMethod === 'getAmountsOut'){\n        if (tokenConfigDest.underlying){\n          const underlyingTokenConfig = this.getTokenConfig(tokenConfigDest.underlying);\n          if (underlyingTokenConfig){\n            decimals = underlyingTokenConfig.decimals;\n          }\n        }\n      }\n      const one = this.normalizeTokenDecimals(decimals);\n      const unires = await this.genericContractCallNoMulticall(protocolContract, routerMethod, [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getCustomProtocolConversionRate',protocolContract, routerMethod, [one.toFixed(), path], unires);\n\n      if (unires) {\n        let price = this.BNify(unires[0]).div(one);\n        if (routerMethod === 'getAmountsOut'){\n          price = this.BNify(unires[2]).div(this.normalizeTokenDecimals(18));\n        }\n        if (invertTokens){\n          price = this.BNify(1).div(price);\n        }\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      // console.log('getUniswapConversionRate - ERROR',tokenConfigFrom,tokenConfigDest);\n      return null;\n    }\n  }\n\n  getQuickswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'QuickswapRouter', blockNumber, useWETH);\n  }\n\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'SushiswapRouter', blockNumber, useWETH);\n  }\n\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'UniswapRouter', blockNumber, useWETH);\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n\n  getMaticTrancheNFTs = async (address) => {\n    const [\n      poLidoNFT_address,\n      stakeManager_address\n    ] = await Promise.all([\n      this.genericContractCallCached('stMATIC', 'poLidoNFT'),\n      this.genericContractCallCached('stMATIC', 'stakeManager'),\n    ])\n\n    await this.initContract('poLidoNFT', poLidoNFT_address, PoLidoNFT);\n    await this.initContract('poLidoStakeManager', stakeManager_address, PoLidoStakeManager);\n\n    const maticTokenConfig = this.getTokenConfig('MATIC');\n    const polygonEndpoint = this.getGlobalConfig(['network','providers','polygon','endpoints','checkpoint']);\n\n    const [\n      poLidoStakeManagerEpoch,\n      currentPolygonHeight,\n      tokenIds\n    ] = await Promise.all([\n      this.genericContractCall('poLidoStakeManager', 'epoch'),\n      this.makeCachedRequest(polygonEndpoint+'count', 300, true),\n      this.genericContractCall('poLidoNFT', 'getOwnedTokens', [address])\n    ]);\n\n    // Decrease checkpoint\n    let epochIntervalInSeconds = 2700;\n    let currentEpochTimestamp = Date.now()/1000;\n    let currentPolygonEpoch = currentPolygonHeight && currentPolygonHeight.result ? currentPolygonHeight.result.result : poLidoStakeManagerEpoch;\n\n    // Get checkpoints interval\n    if (currentPolygonEpoch){\n      // Safe margin for epoch fethed from polido stake manager\n      if (!currentPolygonHeight || !currentPolygonHeight.result){\n        currentPolygonEpoch-=2;\n      }\n      const [\n        lastEpochInfo,\n        currentEpochInfo\n      ] = await Promise.all([\n        this.makeCachedRequest(polygonEndpoint+(currentPolygonEpoch-1), 300, true),\n        this.makeCachedRequest(polygonEndpoint+currentPolygonEpoch, 300, true)\n      ])\n\n      if (currentEpochInfo && currentEpochInfo.result){\n        currentEpochTimestamp = parseInt(currentEpochInfo.result.timestamp);\n\n        if (lastEpochInfo && lastEpochInfo.result){\n          epochIntervalInSeconds = (currentEpochInfo.result.timestamp-lastEpochInfo.result.timestamp);\n        }\n      }\n      // console.log('epoch info', currentEpochInfo, lastEpochInfo, epochIntervalInSeconds);\n    } else {\n      currentPolygonEpoch = 0;\n    }\n\n    const tokensAmounts = await this.asyncForEach(tokenIds, async (tokenId) => {\n      const [\n        tokenAmount,\n        usersRequest\n      ] = await Promise.all([\n        this.genericContractCall('stMATIC', 'getMaticFromTokenId', [tokenId]),\n        this.genericContractCall('stMATIC', 'token2WithdrawRequest', [tokenId])\n      ]);\n\n      const status = parseInt(usersRequest.requestEpoch)>=parseInt(poLidoStakeManagerEpoch) ? 'pending' : 'available';\n\n      // console.log('usersRequest', tokenId, usersRequest, epochIntervalInSeconds);\n\n      const remainingEpochs = Math.max(0, parseInt(usersRequest.requestEpoch)-parseInt(currentPolygonEpoch));\n\n      // Calculate tokens unlock time\n      const remainingTime = parseInt(remainingEpochs)*epochIntervalInSeconds;\n      const unlockDate = moment((currentEpochTimestamp+remainingTime)*1000);\n\n      return {\n        status,\n        tokenId,\n        unlockDate,\n        remainingTime,\n        remainingEpochs,\n        currentEpoch: parseInt(currentPolygonEpoch),\n        requestEpoch: parseInt(usersRequest.requestEpoch),\n        amount: this.fixTokenDecimals(tokenAmount, maticTokenConfig.decimals),\n      }\n    });\n\n    return tokensAmounts;\n\n    // return tokensAmounts.reduce( (totalAmount, tokenAmount) => (totalAmount = totalAmount.plus(tokenAmount)), this.BNify(0) );\n  }\n\n  getMaticTrancheAdditionalApy = async (tokenConfig, trancheConfig) => {\n    const [\n      trancheHarvests,\n      tranchePool,\n      trancheAprRatio,\n    ] = await Promise.all([\n      this.getTrancheHarvests(tokenConfig, trancheConfig, 1),\n      this.loadTrancheFieldRaw('tranchePool',{}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig),\n      this.loadTrancheFieldRaw('trancheAPRRatio',{}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n    ]);\n\n    const additionalApys = Object.keys(trancheHarvests).reduce( (apys, token) => {\n      const lastHarvest = trancheHarvests[token][0];\n      if (!lastHarvest) return apys;\n      const harvestTokenConfig = this.getTokenConfig(token);\n      const harvestedValue = this.fixTokenDecimals(lastHarvest.returnValues.value, harvestTokenConfig.decimals).times(trancheAprRatio.div(100));\n      const tokenApr = harvestedValue.div(tranchePool).times(this.getGlobalConfig(['network', 'weeksPerYear']));\n      const tokenApy = this.apr2apy(tokenApr);\n      // console.log('getMaticTrancheAdditionalApy', tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, token, lastHarvest, this.fixTokenDecimals(lastHarvest.returnValues.value, harvestTokenConfig.decimals).toString(), trancheAprRatio.toString(), harvestedValue.toString(), tranchePool.toString(), tokenApr.toString(), tokenApy.toString());\n      apys[token] = tokenApy.times(100);\n      return apys;\n    },{});\n\n    return additionalApys;\n  }\n\n  getMaticTrancheStrategyApr = async (tokenConfig) => {\n    const apr = await this.getPlatformRates(tokenConfig.protocol, ['apr']);\n    if (!this.BNify(apr).isNaN()){\n      return this.BNify(apr).div(100);\n    }\n    return this.BNify(0);\n  }\n\n  getMaticTrancheApy = async (tokenConfig, trancheConfig) => {\n    const [\n      stratApr,\n      FULL_ALLOC,\n      currentAARatio,\n      trancheAPRSplitRatio,\n    ] = await Promise.all([\n      this.getMaticTrancheStrategyApr(tokenConfig),\n      this.genericContractCall(tokenConfig.CDO.name, 'FULL_ALLOC'),\n      this.genericContractCall(tokenConfig.CDO.name, 'getCurrentAARatio'),\n      this.genericContractCall(tokenConfig.CDO.name, 'trancheAPRSplitRatio')\n    ]);\n\n    const isAATranche = trancheConfig.tranche === 'AA';\n\n    if (this.BNify(currentAARatio).eq(0)){\n      return isAATranche ? this.BNify(0) : this.BNify(stratApr);\n    }\n\n    if (this.BNify(stratApr).isNaN()){\n      return this.BNify(0);\n    }\n\n    const apr = isAATranche ? this.BNify(stratApr).times(trancheAPRSplitRatio).div(currentAARatio) : this.BNify(stratApr).times(this.BNify(FULL_ALLOC).minus(trancheAPRSplitRatio)).div(this.BNify(FULL_ALLOC).minus(currentAARatio));\n\n    return this.BNify(this.normalizeTokenAmount(apr, tokenConfig.CDO.decimals));\n  }\n\n  getPlatformRates = async (platform, path=null) => {\n    // Check for cached data\n    const cachedDataKey = `getPlatformRates_${platform}_${path ? JSON.stringify(path) : ''}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const ratesInfo = this.getGlobalConfig([platform, 'rates']);\n    if (ratesInfo) {\n      const results = await this.makeRequest(ratesInfo.endpoint, false, ratesInfo.config);\n\n      if (results && results.data) {\n        if (path){\n          let apy = this.getArrayPath(path, results.data);\n          if (apy) {\n            apy = this.BNify(apy).times(100);\n            if (!this.BNify(apy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, apy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (/*tokenConfig.enabled && */tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getTokenConfig(convertToken);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n\n\n\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let callsFailed = false;\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    // Add 10s timeout to request\n    // config.timeout = 10000;\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // callsFailed = true;\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (callsFailed || !totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalAUM)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalAUM));\n        // console.log('getAggregatedStats',tvls);\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    // const requiredNetworkId = parseInt(this.props.network.required.id);\n\n    // console.log('getAggregatedStats_chain',this.props.availableStrategiesNetworks);\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n\n      // console.log('START network LOOP - ',networkId);\n\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n\n        // console.log('START strategy LOOP - ',networkId,strategy);\n\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n          // const props = {...this.props};\n          // props.network.required.id = networkId;\n          // this.setProps(props);\n\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n            // console.log('START',networkId,strategy,token,tokenConfig.idle.token+'V4',tokenAUM.toFixed(),totalAUM.toFixed());\n          }\n\n          // Add Gov Tokens\n          if (parseInt(networkId) === 1) {\n            const govTokens = this.getTokenGovTokens(tokenConfig);\n            if (govTokens) {\n              await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(networkId)) )), async (govToken) => {\n                const govTokenConfig = govTokens[govToken];\n                const [\n                  tokenBalance,\n                  tokenConversionRate\n                ] = await Promise.all([\n                  this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                  this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n                ]);\n\n                if (tokenBalance && tokenConversionRate) {\n                  const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                  if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                    totalAUM = totalAUM.plus(tokenBalanceConverted);\n                  }\n                }\n              });\n            }\n          }\n\n          // console.log('END',networkId,strategy,token,tokenConfig.idle.token+'V4',totalAUM.toFixed());\n\n          // Get old token allocation\n          /*\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n          */\n        });\n        // console.log('END strategy LOOP - ',networkId,strategy);\n      });\n      // console.log('END network LOOP - ',networkId);\n    });\n\n    // console.log('getAggregatedStats_chain',totalAUM.toFixed());\n    // const props = {...this.props};\n    // props.network.required.id = requiredNetworkId;\n    // this.setProps(props);\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  getTrancheTokenConversionRate = async (trancheTokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    let trancheTokenConversionRate = this.BNify(1);\n\n    // Get pool token price\n    const tokenConfig = this.getTokenConfig(trancheTokenConfig.token);\n    if (!!tokenConfig.isPoolToken){\n      // Get custom protocol for conversion rate\n      const protocolContract = tokenConfig.conversionRateProtocolContract;\n      trancheTokenConversionRate = await this.getPoolTokenPrice(trancheTokenConfig.token, protocolContract);\n    // Convert underlying token\n    } else {\n      const conversionRateField = this.getTokenConversionRateField(trancheTokenConfig.token);\n      if (conversionRateField) {\n        trancheTokenConversionRate = await this.getOnChainTokenConversionRate(trancheTokenConfig,blockNumber);\n      }\n    }\n\n    if (!trancheTokenConversionRate || this.BNify(trancheTokenConversionRate).isNaN()){\n      trancheTokenConversionRate = this.BNify(1);\n    }\n\n    return trancheTokenConversionRate;\n  }\n  convertTrancheTokenBalance = async (tokenBalance, trancheTokenConfig, blockNumber='latest') => {\n    const trancheTokenConversionRate = await this.getTrancheTokenConversionRate(trancheTokenConfig, blockNumber);\n    return tokenBalance = this.BNify(tokenBalance).times(trancheTokenConversionRate);\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const aprs = apiResults.reduce((sum, r, index) => {\n\n        // Fix Clearpool wrong rates (USDC)\n        if (address.toLowerCase() === '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48' && r.blocknumber>=15697787 && r.blocknumber<=15716753){\n          return sum\n        }\n\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        sum.push(idleRate);\n        return sum\n      }, []);\n\n      // console.log('apr', apr.toString());\n\n      // Calculate average\n      return aprs.reduce( (apr, v) => apr.plus(v), this.BNify(0) ).div(aprs.length);\n    }\n\n    return this.BNify(0);\n  }\n  getOnChainTokenConversionRate = async (tokenConfig, blockNumber='latest', protocolContract=null) => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getTokenConfig(tokenConfig.token) : null;\n\n    let useWETH = true;\n\n    if (statsTokenConfig){\n      // Replace from token address\n      if (statsTokenConfig.addressForPriceFrom){\n        DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n      }\n\n      // Set custom protocol (uniswap, sushiswap, quickswap)\n      if (!protocolContract && statsTokenConfig.conversionRateProtocolContract){\n        protocolContract = statsTokenConfig.conversionRateProtocolContract;\n      }\n\n      // Override useWETH based on token config\n      if (typeof statsTokenConfig.conversionRateUseWETH !== 'undefined'){\n        useWETH = statsTokenConfig.conversionRateUseWETH;\n      } else {\n        // Don't use WETH in the path\n        useWETH = !statsTokenConfig.addressForPriceFrom;\n      }\n    }\n\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    let conversionRate = null;\n    const currentNetworkId = this.getRequiredNetworkId();\n    if (protocolContract){\n      conversionRate = await this.getCustomProtocolConversionRate(DAITokenConfig, ToTokenConfig, protocolContract, blockNumber, useWETH);\n    } else {\n      conversionRate = currentNetworkId === 1 ? await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH) : await this.getSushiswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    }\n\n    // console.log('getOnChainTokenConversionRate',currentNetworkId,protocolContract,ToTokenConfig.address,blockNumber, useWETH, conversionRate);\n\n    if (this.BNify(conversionRate).isNaN()) {\n      conversionRate = this.BNify(1);\n    }\n\n    return conversionRate\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__3Ly5d\",\"hidden\":\"DashboardCard_hidden__1_j_O\",\"clickable\":\"DashboardCard_clickable__3ibwM\",\"rainbow\":\"DashboardCard_rainbow__25Ce5\",\"disabled\":\"DashboardCard_disabled__g_nwH\"};","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Card, Tooltip } from \"rimble-ui\";\n\nconst DashboardCardContext = React.createContext();\n\nclass DashboardCard extends Component {\n\n  static Consumer = DashboardCardContext.Consumer;\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isClickable = typeof this.props.handleClick === 'function';\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border:0,\n      display:'flex',\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      flexDirection:'column',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (!this.props.cardProps || !this.props.cardProps.backgroundColor){\n      if (isInteractive && this.state.mouseOver) {\n        cardProps.backgroundColor = 'cardBgHover';\n      }\n      if (isActive){\n        cardProps.backgroundColor = 'cardBgActive';\n      }\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isClickable ? styles.clickable : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    // const childrenWithProps = React.Children.map(this.props.children, child => {\n    //   if (React.isValidElement(child)) {\n    //     return React.cloneElement(child, { mouseOver:this.state.mouseOver });\n    //   }\n    //   return child;\n    // });\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {/*{this.props.children}*/}\n        <DashboardCardContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const hasClickFunction = typeof this.props.handleClick === 'function';\n    const isInteractive = hasClickFunction || !!this.props.isInteractive;\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={hasClickFunction ? e => this.props.handleClick(this.props) : null}\n      >\n        <DashboardCard.Consumer>\n          {({\n            mouseOver\n          }) => {\n            return (\n              <Flex\n                flexDirection={'row'}\n                id={this.props.rowId}\n              >\n                {\n                  this.props.cols.map((colInfo,colIndex) => {\n                    const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n                    if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                      return null;\n                    }\n                    return (\n                      <Flex\n                        key={`col-${colIndex}`}\n                        {...colInfo.props}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          {...colInfo.parentProps}\n                        >\n                          {\n                            colInfo.fields.map((fieldInfo,fieldIndex) => {\n                              if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                                return null;\n                              }\n                              const CustomComponent = fieldInfo.fieldComponent;\n\n                              let fieldProps = fieldInfo.props;\n\n                              // Merge with funcProps\n                              if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                                fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                              }\n\n                              return (\n                                <Flex\n                                  height={'100%'}\n                                  flexDirection={'column'}\n                                  alignItems={'flex-start'}\n                                  justifyContent={'center'}\n                                  {...fieldInfo.parentProps}\n                                  style={fieldInfo.style || {\n                                    overflow:'hidden'\n                                  }}\n                                  width={colInfo.fields.length>1 ? 'auto' : 1}\n                                  id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                  key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                >\n                                  {\n                                    CustomComponent ? (\n                                      <CustomComponent\n                                        {...this.props}\n                                        {...fieldProps}\n                                        mouseOver={mouseOver}\n                                      />\n                                    ) : (\n                                      <FieldComponent\n                                        {...this.props}\n                                        mouseOver={mouseOver}\n                                        fieldInfo={fieldInfo}\n                                        colProps={colInfo.props}\n                                        parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                      />\n                                    )\n                                  }\n                                </Flex>\n                              );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    )\n                  })\n                }\n              </Flex>\n            );\n          }}\n          </DashboardCard.Consumer>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'primary' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        handleClick={this.props.handleClick}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    const allowZeroValue = !!this.props.allowZeroValue;\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || (allowZeroValue ? amount.lt(0) : amount.lte(0)) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Approve',\n          eventLabel: tx ? tx.status : null,\n          eventAction: this.props.tokenConfig.token\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log(this.props.eventData,{\n      //   eventCategory: methodName,\n      //   eventValue: inputValue.toFixed(),\n      //   eventAction: this.props.tokenConfig.token,\n      //   ...this.props.eventData\n      // });\n\n      const callback = (tx,error) => {\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        // Send Google Analytics event\n        if (tx){\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: methodName,\n            eventValue: inputValue.toFixed(),\n            eventAction: this.props.tokenConfig.token,\n            ...this.props.eventData\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n        }\n\n        this.setState({\n          txSucceeded,\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n\n        if (txSucceeded){\n          // Reset input\n          this.changeInputValue({\n            target:{\n              value:0\n            }\n          },false);\n          this.setState({\n            showPermitBox:false\n          });\n          // Call upper component callback\n          if (typeof this.props.callback === 'function'){\n            this.props.callback(tx,_amount,params);\n          }\n        }\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    let contractApproved = false;\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      contractApproved = true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      contractApproved = true;\n    }\n      \n    if (!contractApproved){\n      contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    }\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        border={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              handleClick={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import Title from '../Title/Title';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    eventData:{},\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    allowZeroValue:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || accountChanged || contractsChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n      // const protocolConfig = this.functionsUtil.getGlobalConfig(['stats','protocols',gaugeConfig.protocol]);\n\n      const tokenConfig = {};\n      tokenConfig.token = gaugeConfig.underlyingToken;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote,\n      voteUserSlope,\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address]),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_slopes',[this.props.account,gaugeConfig.address])\n    ]);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed);\n    let oldPowerUsed = this.functionsUtil.BNify(voteUserSlope.power);\n    const availableVotingPower = this.functionsUtil.BNify(10000).minus(votingPowerUsed).plus(oldPowerUsed).div(10000);\n\n    votingPowerUsed = votingPowerUsed.div(10000);\n    oldPowerUsed = oldPowerUsed.div(10000);\n\n    // console.log('availableVotingPower',votingPowerUsed.toFixed(),oldPowerUsed.toFixed(),availableVotingPower);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      availableVotingPower,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let eventData = {\n      eventAction:trancheTokenConfig.token\n    };\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        // const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.availableVotingPower);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Gauge_Vote';\n\n        // Unlock total voting balance if nextUnlockTime reached\n        // if (canVote && this.state.votingPowerUsed.gte(1)){\n        //   balanceProp = this.state.veTokenBalance.times(this.state.availableVotingPower);\n        // }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Deposit';\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Claim';\n\n            switch (this.state.claimToken){\n              case 'additional':\n                eventData.eventLabel = (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? Object.keys(this.state.claimableRewardsTokens).join('_') : 'multi_rewards';\n              break;\n              default:\n              case 'default':\n                eventData.eventLabel = this.props.toolProps.veToken.rewardToken;\n              break;\n            }\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Redeem';\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('eventData',eventData);\n\n    this.setState({\n      canVote,\n      eventData,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    const internal_view = this.functionsUtil.getQueryStringParameterByName('internal_view');\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          trancheTokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall(trancheConfig.CDO.name, 'virtualPrice', [trancheConfig.AA.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        trancheTokenPrice = this.functionsUtil.fixTokenDecimals(trancheTokenPrice,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        // Calculate IDLE apr for internal view\n        const gaugeDistributionRatePerSecond = gaugeDistributionRate.div(this.functionsUtil.getGlobalConfig(['network','secondsPerDay']));\n        const gaugeUnderlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeToken);\n        const gaugeTotalSupplyUnderlying = gaugeTotalSupply.times(trancheTokenPrice);\n        const idleApr = internal_view ? await this.functionsUtil.getGovTokenApr(veTokenConfig.rewardToken,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,gaugeDistributionRatePerSecond) : null;\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n        } else {\n          stakedBalance = '-';\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(3)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (${userBoostedDistribution.toFixed(3)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (${userDistributionRate.toFixed(3)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            let text = `${gaugeDistributionRate.toFixed(3)} ${token}/day`;\n            if (idleApr){\n              let idleApy = idleApr.apy.toFixed(2);\n              if (parseFloat(idleApy)>9999){\n                idleApy = '>9999';\n              }\n              text += ` (${idleApy}% APY)`;\n            }\n            return text;\n          } else {\n            const tokenApy = rewardsTokens[token].apy;\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(3)} ${token}/day (${tokenApy.toFixed(2)}% APY)`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let allowZeroValue = false;\n    let balanceSelectorInfo = {...this.state.balanceSelectorInfo};\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        allowZeroValue = true;\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        } else {\n          infoBox = {\n            icon:'Info',\n            text:`You are about to reset your voting power for this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      allowZeroValue,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'primary'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                          iconBgColor={this.state.stakeAction === 'deposit' ? '#ffffff' : '#ced6ff'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                          iconBgColor={this.state.stakeAction === 'claim' ? '#ffffff' : '#ffd979'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                          iconBgColor={this.state.stakeAction === 'withdraw' ? '#ffffff' : '#ceeff6'}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : this.state.selectedAction === 'vote' && this.functionsUtil.BNify(this.state.availableVotingPower).lte(0) ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'Info'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You already allocated 100% of your voting power, reduce the allocation from one of the gagues you voted for or stake more ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:3,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`stake`)}\n                      >\n                        Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                      </RoundButton>\n                    </IconBox>\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      allowZeroValue={this.state.allowZeroValue}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                eventData={this.state.eventData}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                eventData={this.state.eventData}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                isInteractive={true}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.11]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.07],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.19],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    // const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    // const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          /*\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n          */\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[3,4]}\n            >\n              {trancheDetails.name}\n            </Title>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    minPrecision:2,\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                text={'APY'}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'APY Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  },\n                  name:'trancheAPRRatio'\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                {\n                  this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                }\n              </Text>\n              <Flex\n                mt={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    props:{\n                      decimals:2,\n                      minPrecision:2,\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    },\n                    name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <RoundButton\n                  type={'primary'}\n                  buttonProps={{\n                    mt:3,\n                    icon:trancheDetails.icon,\n                    contrastColor:'ctaPrimaryText',\n                  }}\n                  handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </RoundButton>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericModal from '../utilities/components/GenericModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Checkbox } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    eventData:{},\n    infoText:null,\n    modalApy:null,\n    trancheFee:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    lastHarvest:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    unlentAmount:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    contractPaused:false,\n    buttonDisabled:false,\n    selectedTranche:null,\n    allowAAWithdraw:false,\n    allowBBWithdraw:false,\n    claimedNFTAmount:null,\n    availableTranches:null,\n    pendingNFTAmounts:null,\n    modalAction:'deposited',\n    approveDescription:null,\n    gaugeStakedBalance:null,\n    selectedAction:'deposit',\n    poolUtilizationRate:null,\n    balanceSelectorInfo:null,\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false,\n    maxPoolUtilizationRateReached:null,\n    acceptMaxPoolUtilizationRateReached:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.checkModal();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  checkModal(){\n    const modalEnabled = this.props.tokenConfig.modal && this.props.tokenConfig.modal.enabled;\n    if (modalEnabled){\n      const modalAlreadyOpened = this.functionsUtil.getStoredItem(this.props.tokenConfig.modal.id);\n      if (!modalAlreadyOpened){\n        this.setState({\n          activeModal:this.props.tokenConfig.modal.id\n        });\n      }\n    }\n  }\n\n  async loadData(){\n\n    // Init Pool contract\n    if (this.props.tokenConfig.Pool){\n      await this.functionsUtil.initContract(this.props.tokenConfig.Pool.name, this.props.tokenConfig.Pool.address, this.props.tokenConfig.Pool.abi);\n    }\n\n    // console.log('loadData', this.props.tokenConfig, this.props.trancheConfig, this.props.gaugeConfig);\n\n    const [\n      unlentAmount,\n      tokenBalance,\n      trancheBalance,\n      contractPaused,\n      lastHarvest,\n      allowAAWithdraw,\n      allowBBWithdraw,\n      gaugeStakedBalance,\n      poolUtilizationRate,\n      stakedBalance,\n      trancheFee,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy,\n      pendingNFTs,\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheUnlentAmount(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'paused'),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'allowAAWithdraw'),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'allowBBWithdraw'),\n      this.props.gaugeConfig ? this.functionsUtil.getTokenBalance(this.props.gaugeConfig.name, this.props.account) : null,\n      this.props.trancheConfig.functions.utilizationRate ? this.functionsUtil.genericContractCallCached(this.props.tokenConfig.Pool.name, this.props.trancheConfig.functions.utilizationRate) : null,\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheField('trancheFee',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.props.trancheConfig.functions.pendingNFTAmount && this.functionsUtil[this.props.trancheConfig.functions.pendingNFTAmount] ? this.functionsUtil[this.props.trancheConfig.functions.pendingNFTAmount](this.props.account) : null\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    // console.log('lastHarvest', lastHarvest);\n    // console.log('pendingNFTs', pendingNFTs);\n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n    // console.log('utilizationRate', this.props.trancheConfig.functions.utilizationRate, poolUtilizationRate);\n\n    const pendingNFTAmounts = pendingNFTs ? pendingNFTs.reduce( (nfts, pendingNFT) => {\n      // Just keep one available NFT to withdraw at a time\n      if (pendingNFT.status === 'available' && nfts[pendingNFT.status]) return nfts;\n\n      if (!nfts[pendingNFT.status]) {\n        nfts[pendingNFT.status] = {\n          tokenIds:[],\n          maxUnlockDate:null,\n          amount:this.functionsUtil.BNify(0),\n          currentEpoch:pendingNFT.currentEpoch\n        };\n      }\n      if (!nfts[pendingNFT.status].maxUnlockDate || pendingNFT.unlockDate.isAfter(nfts[pendingNFT.status].maxUnlockDate)){\n        nfts[pendingNFT.status].maxUnlockDate = pendingNFT.unlockDate;\n      }\n      nfts[pendingNFT.status].tokenIds.push(pendingNFT.tokenId);\n      nfts[pendingNFT.status].amount = nfts[pendingNFT.status].amount.plus(pendingNFT.amount);\n      return nfts;\n    }, {}) : null;\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value: trancheInfo.type,\n      icon: trancheInfo.image,\n      label: trancheInfo.name,\n      tranche: trancheInfo.type,\n      trancheConfig: this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    const maxPoolUtilizationRateReached = this.props.tokenConfig.maxUtilizationRate && !this.functionsUtil.BNify(poolUtilizationRate).isNaN() && this.functionsUtil.fixTokenDecimals(poolUtilizationRate, 18).gte(this.props.tokenConfig.maxUtilizationRate);\n\n    // console.log('maxPoolUtilizationRateReached', maxPoolUtilizationRateReached, poolUtilizationRate)\n\n    this.setState({\n      trancheAPY,\n      trancheFee,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      unlentAmount,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      contractPaused,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      allowAAWithdraw,\n      allowBBWithdraw,\n      pendingNFTAmounts,\n      availableTranches,\n      gaugeStakedBalance,\n      poolUtilizationRate,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds,\n      maxPoolUtilizationRateReached\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData = async () => {\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n    let balanceSelectorInfo = null;\n    let eventData = {\n      eventAction:this.props.trancheConfig.token\n    };\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance; //.plus(10);\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Deposit';\n\n        if (this.state.trancheFee){\n          balanceSelectorInfo = {\n            text:`Performance fee: ${this.state.trancheFee}`,\n            tooltip:this.functionsUtil.getGlobalConfig(['messages', 'performanceFee'])\n          }\n        }\n        \n        if (this.props.gaugeConfig && this.props.gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your tranche tokens (${this.props.gaugeConfig.trancheToken.token}) in the Liquidity Gauge and get additional rewards.`;\n        }\n\n        // Disabled info text for disabled tranche\n        if (!!this.props.tokenConfig.disabled){\n          infoText = null;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n\n        // Set data for ga custom event\n        eventData.eventCategory = this.functionsUtil.capitalize(this.state.selectedStakeAction);\n\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set or the tranche is disabled\n            if (this.props.gaugeConfig || !this.state.stakeEnabled || !this.props.tokenConfig.enabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Redeem';\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        } else {\n          // Overwrite default action message\n          if (this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0)){\n            infoText = `To withdraw your ${this.props.selectedToken} make sure to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    this.setState({\n      infoBox,\n      infoText,\n      eventData,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    })\n  }\n\n  changeInputCallback = async (inputValue) => {\n\n    if (this.state.selectedAction === 'withdraw'){\n      // Calculate exit fee for TrueFi - USDC\n      if (this.props.trancheConfig.functions.penaltyFee && this.props.tokenConfig.Pool && this.functionsUtil.BNify(inputValue).gt(0)){\n        const amount = this.functionsUtil.normalizeTokenAmount(inputValue, this.props.tokenConfig.decimals);\n        let penaltyFee = await this.functionsUtil.genericContractCall(this.props.tokenConfig.Pool.name, this.props.trancheConfig.functions.penaltyFee, [amount])\n\n        if (penaltyFee){\n          penaltyFee = this.functionsUtil.BNify(10000).minus(penaltyFee).div(100)\n          const balanceSelectorInfo = {\n            text:`Penalty fee: <span style=\"color:${this.props.theme.colors.alert}\">${penaltyFee.toFixed(2)}%</span>`\n          }\n\n          this.setState({\n            balanceSelectorInfo\n          });\n        }\n      // Handle max unlent amount while max Utilization Rate reached\n      } else {\n        let buttonDisabled = false;\n        if (this.state.maxPoolUtilizationRateReached && this.state.unlentAmount.gt(0) && this.functionsUtil.BNify(inputValue).gt(this.state.unlentAmount)){\n          buttonDisabled = true;\n        }\n        this.setState({\n          buttonDisabled\n        });\n      }\n    }\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams = (amount,selectedPercentage) => {\n    let methodName = null;\n    let methodParams = null;\n    const _referral = this.getReferralAddress();\n    const referralEnabled = this.props.tokenConfig.referralEnabled;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'deposit' && _referral && referralEnabled){\n        methodParams = [amount,_referral];\n      } else if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice, this.props.tokenConfig.decimals));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  toggleAcceptMaxPoolUtilizationRate = (acceptMaxPoolUtilizationRateReached) => {\n    this.setState({\n      acceptMaxPoolUtilizationRateReached\n    })\n  }\n\n  claimNFTSucceeded(tx){\n    const eventConfig = this.props.tokenConfig.ClaimNFT.event;\n\n    const claimTokensEvent = tx.txReceipt.events ? tx.txReceipt.events[eventConfig.name] : null;\n    const claimedNFTAmount = claimTokensEvent ? this.functionsUtil.fixTokenDecimals(claimTokensEvent.returnValues[eventConfig.amountField], this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n\n    this.setState({\n      claimedNFTAmount\n    });\n  }\n\n  transactionSucceeded(){\n\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n    const isDisabled = !!this.props.tokenConfig.disabled;\n\n    const unlentAmount = this.state.unlentAmount || this.functionsUtil.BNify(0);\n\n    let maxPoolUtilizationRateReachedText = `This pool has reached the maximum utilization rate (${(this.props.tokenConfig.maxUtilizationRate*100).toFixed(0)}%).`;\n\n    if (this.props.tokenConfig.links && this.props.tokenConfig.links.default) {\n      maxPoolUtilizationRateReachedText.concat(` <a href=\"${this.props.tokenConfig.links.default}\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">Read more</a>.`)\n    }\n\n    if (isDeposit) {\n        maxPoolUtilizationRateReachedText = maxPoolUtilizationRateReachedText.concat(`<br />Check the flag to deposit at your own risk.`);\n    } else if (isWithdraw) {\n      if (unlentAmount.gt(0)){\n        maxPoolUtilizationRateReachedText = maxPoolUtilizationRateReachedText.concat(`<br />Withdrawals are available up to ${unlentAmount.toFixed(4)} ${this.props.tokenConfig.token}.`);\n      } else {\n        maxPoolUtilizationRateReachedText = maxPoolUtilizationRateReachedText.concat(`<br />Withdrawals are temporarily suspended.`);\n      }\n    }\n\n    const withdrawEnabled = ((this.props.trancheConfig.tranche === 'AA' && this.state.allowAAWithdraw) || (this.props.trancheConfig.tranche === 'BB' && this.state.allowBBWithdraw));\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const _referral = this.getReferralAddress();\n    const showReferral = !this.state.contractPaused && this.props.tokenConfig.referralEnabled && this.state.userHasAvailableFunds && _referral && isDeposit;\n\n    const modalEnabled = this.props.tokenConfig.modal && this.props.tokenConfig.modal.enabled;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              minPrecision:2,\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:'trancheAPRRatio'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        {\n                          this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                        }\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              decimals:2,\n                              minPrecision:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    (this.props.tokenConfig.description || this.state.lastHarvest) && (\n                      <Flex\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        {\n                          this.props.tokenConfig.description && (\n                            <Flex\n                              pt={2}\n                              width={1}\n                              flexDirection={'column'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={[1,2]}\n                                color={'primary'}\n                                fontWeight={[2,3]}\n                              >\n                                Strategy Description\n                              </Text>\n                              <Flex\n                                mt={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                  textAlign={'justify'}\n                                  dangerouslySetInnerHTML={{__html:this.props.tokenConfig.description}}\n                                >\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              mt={this.props.tokenConfig.description ? 2 : 0}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                /*\n                this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0) && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To withdraw your ${this.props.selectedToken} you need to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`}\n                  />\n                ) :*/\n                /*\n                !this.props.tokenConfig.adaptiveYieldSplitEnabled && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To improve the capital efficiency of tranches, the apy ratio will be updated to the new Adaptive Yield Split on Wed July 20th. No action required. Read more in the <a href=\"https://gov.idle.finance/t/adaptive-yield-split-implementation-for-existing-pyts/1019\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">Forum Proposal</a>.`}\n                  />\n                )\n                */\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0,\n                      disabled:!this.state.stakingEnabled && !this.props.gaugeConfig\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/stake.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '45px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && !this.state.contractPaused && !this.state.maxPoolUtilizationRateReached && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'primary'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              {\n                this.state.claimedNFTAmount ? (\n                  <IconBox\n                    cardProps={{\n                      my:2,\n                      width:1\n                    }}\n                    icon={'DoneAll'}\n                    iconProps={{\n                      color:this.props.theme.colors.transactions.status.completed\n                    }}\n                    text={`You have successfully claimed ${this.state.claimedNFTAmount.toFixed(4)} ${this.props.tokenConfig.token}!`}\n                  />\n                ) : this.state.pendingNFTAmounts && this.state.pendingNFTAmounts['available'] && this.state.pendingNFTAmounts['available'].amount.gt(0) ? (\n                  <IconBox\n                    cardProps={{\n                      my:2,\n                      width:1\n                    }}\n                    icon={'DoneAll'}\n                    iconProps={{\n                      color:this.props.theme.colors.transactions.status.completed\n                    }}\n                    text={`Your redeem NFT (ID: ${this.state.pendingNFTAmounts['available'].tokenIds[0]}) for a total amount of <strong>${this.state.pendingNFTAmounts['available'].amount.toFixed(4)} ${this.props.tokenConfig.token}</strong> is now available for claim.`}\n                  >\n                    <ExecuteTransaction\n                      {...this.props}\n                      Component={RoundButton}\n                      parentProps={{\n                        mt:3,\n                        width:1,\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      componentProps={{\n                        buttonProps:{\n                          size:'medium',\n                          width:[1,1/3],\n                        },\n                        value:`Claim ${this.state.pendingNFTAmounts['available'].amount.toFixed(4)} ${this.props.tokenConfig.token}`\n                      }}\n                      action={'Claim NFT'}\n                      eventData={this.state.eventData}\n                      callback={this.claimNFTSucceeded.bind(this)}\n                      methodName={this.props.tokenConfig.ClaimNFT.method}\n                      contractName={this.props.tokenConfig.ClaimNFT.contract}\n                      params={[this.state.pendingNFTAmounts['available'].tokenIds[0]]}\n                    />\n                  </IconBox>\n                ) : this.state.pendingNFTAmounts && this.state.pendingNFTAmounts['pending'] && this.state.pendingNFTAmounts['pending'].amount.gt(0) && (\n                  <IconBox\n                    cardProps={{\n                      my:2,\n                      width:1\n                    }}\n                    icon={'AccessTime'}\n                    text={`You have a pending amount of ${this.state.pendingNFTAmounts['pending'].amount.toFixed(4)} ${this.props.tokenConfig.token} to withdraw. Please wait approximately until ${this.state.pendingNFTAmounts['pending'].maxUnlockDate.utc().format('DD MMM, YYYY @ HH:mm')} UTC to claim your funds.<br /><a href=\"https://docs.polygon.lido.fi/how-lido-on-polygon-works/#unstake-tokens\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Read more</a>`}\n                  />\n                )\n              }\n              {\n                showReferral && (\n                  <IconBox\n                    cardProps={{\n                      py: 3,\n                      px: 2,\n                      mt: 3,\n                      width:1,\n                    }}\n                    icon={'Share'}\n                    isActive={false}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'cellText'\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You are depositing with the following referral address:\n                      </Text>\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        fontWeight={500}\n                        textAlign={'center'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      >\n                        {_referral}\n                      </Text>\n                    </Flex>\n                  </IconBox>\n                )\n              }\n              {\n                this.state.maxPoolUtilizationRateReached && (\n                  <IconBox\n                    cardProps={{\n                      my: 2\n                    }}\n                    icon={'Warning'}\n                    text={maxPoolUtilizationRateReachedText}\n                  >\n                    {\n                      this.state.selectedAction === 'deposit' && (\n                        <Checkbox\n                          mt={2}\n                          required={false}\n                          checked={this.state.acceptMaxPoolUtilizationRateReached}\n                          onChange={e => this.toggleAcceptMaxPoolUtilizationRate(e.target.checked)}\n                          label={`Enable deposits in warning mode`}\n                        />\n                      )\n                    }\n                  </IconBox>\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  this.state.contractPaused && (this.state.selectedAction !== 'withdraw' || !withdrawEnabled) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={`Deposits${!withdrawEnabled ? '/Withdraws' : '' } for this tranche are temporarily suspended due to Smart-Contract maintenance.${withdrawEnabled && ' Withdrawals remain enabled.'}`}\n                    />\n                  ) : this.state.maxPoolUtilizationRateReached && ((this.state.selectedAction === 'deposit' && !this.state.acceptMaxPoolUtilizationRateReached) || (this.state.selectedAction === 'withdraw' && unlentAmount.lte(0))) ?\n                    null\n                  :\n                  /* : this.state.maxPoolUtilizationRateReached && ((this.state.selectedAction === 'deposit' && !this.state.acceptMaxPoolUtilizationRateReached) || (this.state.selectedAction === 'withdraw' && unlentAmount.lte(0))) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'InfoOutline'}\n                      text={this.state.selectedAction === 'deposit' ? 'Flag the checkbox to deposit while the maximum pool utilization rate is reached' : 'Withdrawals are temporarily unavailable due to maximum pool utilization rate has been reached.'}\n                    />\n                  )*/\n                  isDisabled && (isDeposit || (isStake && this.state.selectedStakeAction === 'stake')) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={`Deposits have been disabled for this tranche, please redeem your funds.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={ e => this.setSelectedAction('withdraw') }\n                      >\n                        Redeem\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.props.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      {\n                        this.state.stakedBalance.gt(0) ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MonetizationOn'}\n                            />\n                            <Text\n                              mt={1}\n                              mb={3}\n                              fontSize={[2,3]}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                            </Text>\n                            <ExecuteTransaction\n                              params={[]}\n                              {...this.props}\n                              Component={RoundButton}\n                              parentProps={{\n                                width:1,\n                                alignItems:'center',\n                                justifyContent:'center'\n                              }}\n                              componentProps={{\n                                value:'Unstake',\n                                buttonProps:{\n                                  size:'medium',\n                                  width:[1,1/3],\n                                }\n                              }}\n                              action={'Unstake'}\n                              eventData={this.state.eventData}\n                              contractName={this.state.contractInfo.name}\n                              callback={this.transactionSucceeded.bind(this)}\n                              methodName={this.props.trancheConfig.functions.unstake}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MoneyOff'}\n                            />\n                            <Text\n                              mt={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any <strong>{this.state.tokenConfig.label}</strong> to unstake.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <IconBox\n                            cardProps={{\n                              my:2,\n                              width:1\n                            }}\n                            icon={'MoneyOff'}\n                            text={`You don't have any ${this.props.selectedToken} in your wallet.`}\n                          />\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`+(this.props.gaugeConfig ? `<br />Stake your tranche tokens in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a> to get additional rewards!` : ``)}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getDashboardSectionUrl(this.props.selectedSection.route)} and start earning now from your idle tokens!`}\n              />\n              {\n                modalEnabled && (\n                  <GenericModal\n                    {...this.props.tokenConfig.modal}\n                    closeModal={this.resetModal}\n                    isOpen={this.state.activeModal === this.props.tokenConfig.modal.id}\n                  />\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n              // Reset amountLent if below zero\n              if (amountLent.lt(0)){\n                amountLent = this.functionsUtil.BNify(0);\n              }\n            break;\n            default:\n            break;\n          }\n\n          // console.log(tx.action,tx.protocol,tx.token,tokenAmount.toString(),amountLent.toString());\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const tokenKey = tx.tokenKey;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              tokenKey,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const requiredNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const subgraphConfig = this.functionsUtil.getGlobalConfig(['network','providers','subgraph','tranches']);\n    const subgraphEnabled = subgraphConfig.enabled && subgraphConfig.availableNetworks.includes(requiredNetworkId);\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens', token.toUpperCase(), 'decimals']);\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][tokenBalanceConfig.tokenKey];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTrancheTokenConversionRate(tokenConfig) : this.functionsUtil.BNify(1),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTxTimestamp);\n\n        const trancheInfos = trancheAAInfos ? trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1)) : null;\n\n        const blocksTimestamps = {};\n        const conversionRateBlocksCalls = {};\n        const conversionRatesTimestamps = {};\n\n        if (conversionRateField){\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            if (subgraphEnabled && trancheInfos){\n              const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n                const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n                if (blockInfo.distance === null || distance<blockInfo.distance){\n                  blockInfo.distance = distance;\n                  blockInfo.trancheInfo = trancheInfo;\n                }\n                return blockInfo;\n              },{\n                distance:null,\n                trancheInfo:null\n              });\n\n              if (blockInfo && blockInfo.trancheInfo){\n                if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                  blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n                }\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n                // Gnosis cannot fetch past blocks data\n                conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getTrancheTokenConversionRate(tokenConfig,blockInfo.trancheInfo.blockNumber);\n              }\n            } else {\n              if (!blocksTimestamps[timeStamp]){\n                blocksTimestamps[timeStamp] = [];\n              }\n              blocksTimestamps[timeStamp].push(timeStamp);\n              conversionRateBlocksCalls[timeStamp] = new Promise(resolve => resolve(lastConversionRate));\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n        }\n\n         // console.log(token,conversionRateBlocksCalls);\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (subgraphEnabled){\n          if (trancheAAInfos){\n            trancheAAInfos.forEach( (trancheInfo,index) => {\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n            });\n          }\n\n          if (trancheBBInfos){\n            trancheBBInfos.forEach( (trancheInfo,index) => {\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataBB);\n            });\n          }\n        } else {\n          Object.keys(conversionRateBlocksCalls).forEach( blockNumber => {\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n            });\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData', tokensData);\n    // console.log('transactions', transactions);\n    // console.log('tokensBalance', tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = tokenConfig ? tokenConfig.decimals : 18;\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n\n                  // console.log(token,trancheTokens.toString(),tranchePrice.toString(),newBalance.toString());\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  // if (token === 'USDC'){\n                  //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,tx.trancheTokens.toFixed());\n                  // }\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n\n          // console.log(token,trancheTokenBalance[token][tranche].toString(),lastTx.tranchePrice.toString(),lastTxBalance.toString());\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n      \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const pointSize = chartData[0].data.length === 1 ? 10 : 0;\n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      pointSize,\n      gridYValues,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const gaugeConfig = this.props.tokenConfig ? this.functionsUtil.getTrancheGaugeConfig(this.props.protocol,this.props.token) : null;\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = (stakingRewardsEnabled && stakingRewardsEnabled.length>0) || gaugeConfig;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getTokenConfig(rewardToken);\n      if (!tokenConfig){\n        return;\n      }\n\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      let tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      if (!tokenBalance){\n        tokenBalance = this.functionsUtil.BNify(0);\n      }\n\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:RoundButton,\n                      componentProps:{\n                        value:'Claim',\n                        buttonProps:{\n                          style:{\n                            width:'100%'\n                          },\n                          size:this.props.isMobile ? 'small' : 'medium'\n                        }\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.cdo.toLowerCase() === this.props.tokenConfig.CDO.name.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const trancheBalanceInfo = this.props.portfolio ? this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.cdo.toLowerCase() === this.props.tokenConfig.CDO.name.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) : null;\n    const userHasFunds = trancheBalanceInfo && trancheBalanceInfo.amountDeposited.gt(0);\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('userHasFunds', userHasFunds, trancheBalanceInfo);\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);  \n\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n\n      // Select first tranche is not available\n      if (!this.functionsUtil.getArrayPath([protocol,token],this.props.availableTranchesNetworks[networkId])){\n        protocol = Object.keys(this.props.availableTranchesNetworks[networkId])[0];\n        token = Object.keys(this.props.availableTranchesNetworks[networkId][protocol])[0];\n      }\n    }\n    \n    const tokenConfig = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex\n                mt={2}\n                mb={3}\n                alignItems={\"center\"}\n              >\n                <Image\n                  ml={3}\n                  mr={2}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex\n                  mx={1}\n                >\n                  <Title\n                    as={'h2'}\n                    ml={[2, 0]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Title>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        color: 'primary',\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        }\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={2}\n                    fontSize={1}\n                    fontWeight={3}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for <strong>{this.state.token}</strong>\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mb={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                }}\n                handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n              >\n                {this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Title\n              textAlign={'left'}\n            >\n              {flashData.subtitle}\n            </Title>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"primary\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"AA\",\"bubble\"])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"BB\",\"bubble\"])}\n            />\n            <Text\n              mx={2}\n              mt={[0, 2]}\n              mb={[2, 1]}\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                as={'h1'}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      unitProps={{\n                        color:'primary'\n                      }}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      color={'primary'}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.primary,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    lastUpdate:null,\n    transactions:[],\n    tokenConfig:null,\n    gaugeConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    selectedTranche:null,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTranchesChanged = JSON.stringify(nextProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    return stateChanged || accountChanged || availableTranchesChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.functionsUtil.objectsDiff(prevProps,this.props),this.functionsUtil.objectsDiff(prevState,this.state));\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        componentLoaded:false,\n        portfolioLoaded:false\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  loadQueryParams(){\n    const trancheRoute = this.props.urlParams.param1;\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n    if (trancheDetails !== undefined) {\n      const trancheType = trancheDetails.type;\n      const selectedTranche = this.props.urlParams.param3;\n      const selectedProtocol = this.props.urlParams.param2;\n      const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedTranche] ? this.props.availableTranches[selectedProtocol][selectedTranche] : null) : null;\n      const selectedToken = tokenConfig ? tokenConfig.token : null;\n      const gaugeConfig = tokenConfig ? this.functionsUtil.getTrancheGaugeConfig(selectedProtocol,selectedTranche) : null;\n\n      this.setState({\n        trancheType,\n        tokenConfig,\n        gaugeConfig,\n        trancheRoute,\n        selectedToken,\n        trancheDetails,\n        selectedTranche,\n        selectedProtocol\n      });\n    } else {\n      const selectedTranche = this.props.urlParams.param2;\n      const selectedProtocol = this.props.urlParams.param1;\n      const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedTranche] ? this.props.availableTranches[selectedProtocol][selectedTranche] : null;\n      if (tokenConfig){\n        const selectedToken = tokenConfig.token;\n        const gaugeConfig = this.functionsUtil.getTrancheGaugeConfig(selectedProtocol,selectedTranche);\n        this.setState({\n          tokenConfig,\n          gaugeConfig,\n          selectedToken,\n          selectedTranche,\n          selectedProtocol\n        });\n      }\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.availableTranches){\n      return false;\n    }\n\n    const tranchesTvls = [];\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches[protocol]), async (token) => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        const trancheConfig = tokenConfig.AA;\n        tranchesTvls.push({\n          token,\n          protocol,\n          tvl:parseFloat(await this.functionsUtil.loadTrancheFieldRaw('tranchePoolConverted', {decimals:2,maxPrecision:999,minPrecision:0}, protocol, token, null, tokenConfig, trancheConfig))\n        });\n      });\n    });\n\n    const tranchesOrdering = tranchesTvls.sort((a, b) => (parseInt(a.tvl) < parseInt(b.tvl) ? 1 : -1));\n\n    this.setState({\n      tranchesOrdering\n    });\n\n    this.loadQueryParams();\n\n    this.loadPortfolio().then( () => {\n\n      if (!!this.state.trancheDetails) {\n\n        if (this.state.userHasFunds && !this.state.tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        const useTrancheType = !this.state.userHasFunds;\n        this.setState({\n          useTrancheType\n        });\n      }\n\n      this.setState({\n        componentLoaded:true\n      });\n    });\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    let availableTranches = {...this.props.availableTranches};\n    if (this.state.selectedProtocol && this.state.selectedTranche){\n      availableTranches = {\n        [this.state.selectedProtocol]:{\n          [this.state.selectedTranche]:availableTranches[this.state.selectedProtocol][this.state.selectedTranche]\n        }\n      }\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(availableTranches,this.props.account);\n\n    // console.log('portfolio', this.state.selectedProtocol, this.state.selectedTranche, portfolio);\n\n    if (portfolio){\n      const depositedCdos = [];\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n\n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheBalanceInfo => {\n        if (!tranchesBalances[trancheBalanceInfo.tranche]){\n          tranchesBalances[trancheBalanceInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheBalanceInfo.tranche].weight = tranchesBalances[trancheBalanceInfo.tranche].weight.plus(trancheBalanceInfo.trancheWeight);\n        tranchesBalances[trancheBalanceInfo.tranche].balance = tranchesBalances[trancheBalanceInfo.tranche].balance.plus(trancheBalanceInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheBalanceInfo.token]){\n          tranchesTokens[trancheBalanceInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheBalanceInfo.token] = tranchesTokens[trancheBalanceInfo.token].plus(trancheBalanceInfo.tokenBalance);\n\n        // Push deposited CDO instead of token\n        if (trancheBalanceInfo.amountDeposited.gt(0)){\n          depositedCdos.push(trancheBalanceInfo.cdo);\n        }\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      // console.log('portfolio.tranchesBalance', portfolio.tranchesBalance, depositedTokens)\n      \n      Object.keys(availableTranches).forEach( protocol => {\n        Object.keys(availableTranches[protocol]).forEach( token => {\n          const tokenConfig = availableTranches[protocol][token];\n          if(depositedCdos.includes(tokenConfig.CDO.name)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][token]={}\n              depositedTranches[protocol][token]=availableTranches[protocol][token];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][token]={};\n            remainingTranches[protocol][token]=availableTranches[protocol][token];\n          }\n        })\n      })\n\n      // console.log('tranchesTokens', tranchesTokens)\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4],\n              color:'primary'\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig && govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4],\n                color:'primary'\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const lastUpdate = Date.now();\n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        lastUpdate,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedTranche] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedTranche] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedTranche}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedTranche);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedTranche);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedTranche){\n      breadcrumbPath.push(this.state.selectedTranche);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              gaugeConfig={this.state.gaugeConfig}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:16,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:70,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Deposited Tranches\n                      </Title>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              name:'lenderIcon',\n                              props:{\n                                ml:2,\n                                height:['1.2em','1.4em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'statusIcon',\n                              props:{\n                                ml:2,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.14],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.09 : 0.08],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolConvertedNoLabel` : 'poolConverted',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.13],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                height:'45px',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      tranchesOrdering={this.state.tranchesOrdering}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Title\n                      as={'h4'}\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Title>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.15]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            name:'lenderIcon',\n                            props:{\n                              ml:2,\n                              height:['1.2em','1.4em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'statusIcon',\n                            props:{\n                              ml:2,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.11],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolConvertedNoLabel` : 'poolConverted',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              height:'45px',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    tranchesOrdering={this.state.tranchesOrdering}\n                    availableTranches={this.props.account ? this.state.remainingTranches : this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'copyColor'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={RoundButton}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  buttonProps:{\n                    size:'small',\n                    width:'auto',\n                    style:{\n                      fontSize:'14px',\n                    }\n                  },\n                  value:'Reduce allowance'\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Input } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    eventData:{},\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n\n        let eventData = {};\n        switch (this.state.increaseAction){\n          case 'time':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseTime',\n              eventValue:this.state.lockPeriodInput\n            };\n          break;\n          case 'amount':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseAmount'\n            };\n          break;\n          default:\n          break;\n        }\n\n        // console.log('eventData',eventData);\n\n        this.setState({\n          eventData,\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let eventData = {};\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_Lock',\n          eventLabel:_unlock_time\n        };\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_IncreaseAmount'\n        };\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      eventData\n    });\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // if (newState.increaseAction !== this.state.increaseAction){\n    //   this.setIncreaseAction(newState.increaseAction);\n    // }\n\n    // Select Withdraw if the lock has expired\n    if (['Increase Lock','Lock'].includes(selectedAction) && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                ) : this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={RoundButton}\n                                          componentProps={{\n                                            buttonProps:{\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              disabled:this.state.buttonDisabled\n                                            },\n                                            value:'Increase Time',\n                                          }}\n                                          action={'Increase Time'}\n                                          eventData={this.state.eventData}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        eventData={this.state.eventData}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',  \n                                    width:[1,1/2],\n                                  },\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                eventData={{\n                                  eventCategory:'Staking_Withdraw',\n                                  eventAction:this.props.selectedToken\n                                }}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={RoundButton}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    value:'Claim',\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/3],\n                                    }\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  eventData={{\n                                    eventCategory:'Staking_Claim',\n                                    eventValue:this.state.claimable.toFixed(8),\n                                    eventAction:this.props.contractInfo.rewardToken\n                                  }}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={RoundButton}\n                                  componentProps={{\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/2],\n                                    },\n                                    value:'Approve',\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={RoundButton}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    disabled:this.state.buttonDisabled\n                                  },\n                                  value:'Buy Coverage',\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.claimableAmount) ? this.state.selectedCoverToClaim.claimableAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((tokenKey,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[tokenKey];\n            const tokenEarnings = this.state.tokensEarnings[tokenKey];\n            const token = tokenConfig ? tokenConfig.token : tokenKey;\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${tokenKey}`}\n                flexDirection={'row'}\n                key={`asset-${tokenKey}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens', token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${tokenKey}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Title\n              as={'h4'}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Title>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    return stateChanged || accountChanged || availableTokensChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      // console.log('portfolio', portfolio)\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1,\n                                  border:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Tools\n                      </Title>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Assets to migrate\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Deposited assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Available assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={RoundButton}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      buttonProps:{\n                                                        width:[1,1/3],\n                                                        size:'medium',\n                                                        height:'45px',\n                                                      },\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={RoundButton}\n                                        componentProps={{\n                                          buttonProps:{\n                                            size:'medium',\n                                          },\n                                          value:'Claim',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Input } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n        const gaugeWorkingSupply = userBoostInfo.workingSupply;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(this.functionsUtil.BNify(gaugeWorkingSupply).plus(userWorkingBalance));\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        // console.log(gaugeToken,gaugeWeight.toFixed(),userBoostInfo,this.functionsUtil.BNify(userWorkingBalance).toFixed(),this.functionsUtil.BNify(gaugeWorkingSupply).toFixed(),userBoostedShare.toFixed());\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={isActive ? 'primary' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stMATIC from '../abis/lido/stMATIC.json';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport QuickswapV2Router02 from \"../abis/quickswap/QuickswapV2Router02.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v7.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://app.idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://app.idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio: \"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    bestYieldDisabledMessage: \"Deposits for this strategy are no longer available, please redeem your funds.\",\n    aysShort: \"This strategy automatically adjusts the yield split between the Senior and the Junior tranche\",\n    autoFarming: \"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://app.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://app.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"\",\n    theme: {\n      mode: \"dark\",\n      darkModeEnabled: true,\n      themeTogglerEnabled: false\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  lido:{\n    rates:{\n      path:['apr'],\n      endpoint:'https://api.idle.finance/poLidoStats',\n      config: {\n        headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n      },\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: false,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n      QuickswapRouter: {\n        abi: QuickswapV2Router02,\n        address: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      },\n      stMATIC:{\n        abi:stMATIC,\n        address:'0x9ee91F9f426fA633d227f7a9b000E28b9dfd8599'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#2272C8\",\n        rgb: [34, 114, 200],\n        hsl: [\"211\", \"71%\", \"46%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FFD15C\",\n        rgb: [255, 209, 92],\n        hsl: [\"43\", \"100%\", \"68%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      availableNetworks: [1],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    /*\n    polygon: {\n      visible: true,\n      networkId: 137,\n      type: \"tranche\",\n      enabledEnvs: [],\n      color: \"#f32121\",\n      comingSoon: false,\n      token: \"CXETHWETH\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      protocol: \"quickswap\",\n      govTokensEnabled: true,\n      availableNetworks: [137],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    */\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      enabledStatsNetworks: [1],\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      DQUICK:{\n        decimals: 18,\n        enabled: true,\n        label: 'DQUICK',\n        token: 'DQUICK',\n        icon: \"images/tokens/DQUICK.png\",\n        color: {\n          hex: '#1d8bcf',\n          rgb: [29, 139, 207],\n          hsl: ['203', '75%', '46%']\n        },\n        conversionRateInvertTokens:true,\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n      },\n      CXETHWETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'CXETHWETH',\n        token: 'CXETHWETH',\n        conversionRateField: \"ETHDAIPrice\",\n        icon: \"images/tokens/CXETHWETH.png\",\n        color: {\n          hex: '#f73bac',\n          rgb: [247, 59, 172],\n          hsl: ['324', '92%', '60%']\n        },\n        isPoolToken: true, // Get Pool Token price for conversion rate\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        // addressForPrice: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        underlying: 'WBTC', // Used for decimals\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        conversionRateField: 'PBTCDAIPrice',\n        conversionRouterMethod: 'getAmountsOut',\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587',\n        addressForPrice: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      PNT: {\n        token: 'PNT',\n        decimals: 18,\n        enabled: true,\n        label: 'pNetwork',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      CPOOL: {\n        decimals: 18,\n        enabled: true,\n        label: 'CPOOL',\n        token: 'CPOOL',\n        color: {\n          hex: '#5F73F4',\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        },\n        address: '0x66761fa41377003622aee3c7675fc7b5c1c2fac5'\n      },\n      RBN: {\n        decimals: 18,\n        enabled: true,\n        label: 'RBN',\n        token: 'RBN',\n        color: {\n          hex: '#FC0A54',\n          rgb: [252, 10, 84],\n          hsl: [\"342\", \"98%\", \"51%\"]\n        },\n        address: '0x6123B0049F904d730dB3C36a31167D9d4121fA6B'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        conversionRateField: \"maticDAIPrice\",\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDCBB: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: false, // Stats disabled\n        label: 'USDC (Junior)',\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: false,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      TRU: {\n        token: 'TRU',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#195bff',\n          rgb: [25, 91, 255],\n          hsl: [\"223\", \"100%\", \"55%\"]\n        },\n        disabledCharts: ['score'],\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x4c19596f5aaff459fa38b0f7ed92f11ae6543784',\n      },\n      AGEUR: {\n        decimals: 18,\n        enabled: true,\n        token: 'AGEUR',\n        color: {\n          hex: '#fbcea9',\n          rgb: [251, 206, 169],\n          hsl: ['27', '91%', '82%']\n        },\n        // conversionRateForceToken: 'USDC',\n        // conversionRateInvertTokens: true,\n        // conversionRateField: 'ageurDAIPrice',\n        // conversionRateDirectConversion: true,\n        // conversionRouterMethod: 'getAmountsOut',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        endTimestamp:\"2022-05-22 23:59:59\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: false,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: false,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      quickswap: {\n        legend: false,\n        enabled: true,\n        label: \"QuickSwap\",\n        icon: \"quickswap.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      euler: {\n        label: \"Euler\",\n        legend: false,\n        enabled: true,\n        color: {\n          rgb: [228, 97, 94],\n          hsl: [\"1\", \"71%\", \"63%\"]\n        }\n      },\n      wintermute: {\n        legend: false,\n        enabled: true,\n        label: \"Wintermute\",\n        color: {\n          rgb: [163, 236, 38],\n          hsl: [\"82\", \"84%\", \"54%\"]\n        }\n      },\n      folkvang: {\n        legend: false,\n        enabled: true,\n        label: \"Folkvang\",\n        color: {\n          rgb: [20, 29, 41],\n          hsl: [\"214\", \"34%\", \"12%\"]\n        }\n      },\n      clearpool: {\n        legend: false,\n        enabled: true,\n        label: \"Clearpool\",\n        startTimestamp: \"2022-10-10 00:00:00\",\n        color: {\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        }\n      },\n      ribbon: {\n        legend: false,\n        enabled: true,\n        label: \"Ribbon\",\n        color: {\n          rgb: [252, 10, 84],\n          hsl: [\"342\", \"98%\", \"51%\"]\n        }\n      },\n      truefi: {\n        legend: false,\n        enabled: true,\n        label: \"TrueFi\",\n        color: {\n          rgb: [25, 91, 255],\n          hsl: [\"223\", \"100%\", \"55%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: false,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    secondsPerDay: 86400,\n    weeksPerYear: 52.1429,\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        endpoints: {\n          checkpoint: 'https://heimdall-api.polygon.technology/checkpoints/'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      polygonscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_POLYGONSCAN_KEY,\n          env.REACT_APP_POLYGONSCAN_KEY2,\n          env.REACT_APP_POLYGONSCAN_KEY3,\n        ],\n        endpoints: {\n          137: 'https://api.polygonscan.com/api',\n          80001: 'https://api-testnet.polygonscan.com/api',\n        },\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://polygonscan.com',\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          availableNetworks:[1],\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    LDO: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          AGEUR:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'AGEUR',\n            name: \"LiquidityGauge_aa_euler_ageur\",\n            token: \"LiquidityGauge_aa_euler_ageur\",\n            address:'0x8f195979f7af6c500b4688e492d07036c730c1b2',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_AGEUR',\n              token: 'AA_euler_AGEUR',\n              address: '0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n            }\n          },\n          USDC:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDC',\n            name: \"LiquidityGauge_aa_euler_usdc\",\n            token: \"LiquidityGauge_aa_euler_usdc\",\n            address:'0x1cd24f833af78ae877f90569eaec3174d6769995',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDC',\n              token: 'AA_euler_USDC',\n              address: '0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n            }\n          },\n          DAI:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'DAI',\n            name: \"LiquidityGauge_aa_euler_dai\",\n            token: \"LiquidityGauge_aa_euler_dai\",\n            address:'0x57d59d4bbb0e2432f1698f33d4a47b3c7a9754f3',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_DAI',\n              token: 'AA_euler_DAI',\n              address: '0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n            }\n          },\n          USDT:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDT',\n            name: \"LiquidityGauge_aa_euler_usdt\",\n            token: \"LiquidityGauge_aa_euler_usdt\",\n            address:'0x0c3310b0b57b86d376040b755f94a925f39c4320',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDT',\n              token: 'AA_euler_USDT',\n              address: '0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    let orderedTranches = [];\n    if (this.props.tranchesOrdering){\n      this.props.tranchesOrdering.forEach( t => {\n        if (enabledProtocols.includes(t.protocol)){\n          const token = t.token;\n          const protocol = t.protocol;\n          if (this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token]){\n            const tokenConfig = this.props.availableTranches[protocol][token];\n            orderedTranches.push({\n              token,\n              protocol,\n              tokenConfig\n            });\n          }\n        }\n      });\n    } else {\n      enabledProtocols.forEach(protocol => {\n        const protocolTranches = this.props.availableTranches[protocol];\n        if (!protocolTranches){\n          return null;\n        }\n        Object.keys(protocolTranches).forEach( token => {\n          const tokenConfig = protocolTranches[token];\n          if (tokenConfig){\n            orderedTranches.push({\n              token,\n              protocol,\n              tokenConfig\n            });\n          }\n         })\n      })\n    }\n\n    const depositedTokens = this.props.depositedTokens;\n    if (depositedTokens){\n      orderedTranches = orderedTranches.filter( t => {\n        return depositedTokens.find( d => d.token === t.token && d.protocol === t.protocol )\n      });\n    }\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n        id={\"tranches-list-container\"}\n      >\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        {\n          orderedTranches && orderedTranches.length>0 && (\n            <Flex\n              id={\"tranches-list\"}\n              flexDirection={'column'}\n            >\n              {\n                orderedTranches.map( p => {\n                  const token = p.token;\n                  const protocol = p.protocol;\n                  const tokenConfig = p.tokenConfig;\n                  const tranche = this.props.trancheType || null;\n                  return (\n                    <TableRow\n                      {...this.props}\n                      token={token}\n                      tranche={tranche}\n                      protocol={protocol}\n                      tokenConfig={tokenConfig}\n                      rowId={`tranche-col-${protocol}`}\n                      cardId={`tranche-card-${protocol}`}\n                      key={`tranche-${protocol}-${token}`}\n                      fieldComponent={this.props.fieldComponent || TrancheField}\n                    />\n                  )\n                })\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDCBB: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        tokenKey: 'USDCBB',\n        enabledEnvs: ['beta'],\n        govTokensDisabled: true,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDBB',\n          address: '0xf6954b03d6a94ba9e8c80cbe5824f22a401ee5d2',\n        },\n        protocols: [\n          {\n            abi: IdleCDO,\n            enabled: true,\n            name: 'clearpool',\n            token: 'BB_clearpool_USDC',\n            address: '0x4D9d9AA17c3fcEA05F20a87fc1991A045561167d',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'virtualPrice',\n                params: ['0x4D9d9AA17c3fcEA05F20a87fc1991A045561167d']\n              }\n            },\n          },\n          {\n            abi: IdleCDO,\n            enabled: true,\n            name: 'ribbon',\n            token: 'BB_ribbon_USDC',\n            address: '0x982E46e81E99fbBa3Fb8Af031A7ee8dF9041bb0C',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'virtualPrice',\n                params: ['0x982E46e81E99fbBa3Fb8Af031A7ee8dF9041bb0C']\n              }\n            },\n          },\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: IdleCDO,\n            enabled: true,\n            name: 'clearpool',\n            token: 'AA_clearpool_USDC',\n            address: '0xb86264c21418aa75f7c337b1821ccb4ff4d57673',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'virtualPrice',\n                params: ['0xb86264c21418aa75f7c337b1821ccb4ff4d57673']\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: ['beta'],\n        canDeposit: {\n          enabled: false,\n          disabledMessageDepositKey: 'bestYieldDisabledMessage'\n        },\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider && this.walletLink){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, rpc, ...rest } = kwargs;\n    super(rest);\n\n    this.rpc = rpc;\n    this.provider = null;\n    this.infuraId = infuraId;\n    this.WalletConnectProvider = WalletConnectProvider;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      const params = {\n        infuraId:this.infuraId\n      };\n      if (this.rpc){\n        params.rpc = this.rpc;\n      }\n      this.provider = new this.WalletConnectProvider(params);\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nexport default class Web3Connectors {\n\n  defaultNetwork = globalConfigs.network.requiredNetwork;\n\n  constructor(networkId=null){\n    this.setNetwork(networkId);\n  }\n\n  setNetwork(networkId){\n    if (networkId && globalConfigs.network.enabledNetworks.includes(networkId)){\n      this.defaultNetwork = networkId;\n    }\n  }\n\n  getConnectors(){\n\n    const {\n      InjectedConnector,\n      NetworkOnlyConnector,\n      TrezorConnector,\n      LedgerConnector,\n      FortmaticConnector,\n      PortisConnector\n    } = Connectors;\n\n    const env = process.env;\n\n    const defaultNetwork = this.defaultNetwork;\n    const portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\n    const portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n    const manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\n    const manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\n    const fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\n\n    const supportedNetworkURLs = {};\n\n    globalConfigs.network.enabledNetworks.forEach((networkId,index) => {\n      networkId = parseInt(networkId);\n      const provider = globalConfigs.network.availableNetworks[networkId].provider;\n      const providerConfig = globalConfigs.network.providers[provider];\n      supportedNetworkURLs[networkId] = providerConfig.rpc[networkId]+providerConfig.key;\n    });\n\n    // console.log('supportedNetworkURLs',defaultNetwork,supportedNetworkURLs);\n\n    const Injected = new InjectedConnector({\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Infura = new NetworkOnlyConnector({\n      providerURL: supportedNetworkURLs[defaultNetwork]\n    });\n\n\n    const Trezor = new TrezorConnector({\n      api: TrezorApi,\n      supportedNetworkURLs,\n      defaultNetwork,\n      manifestEmail,\n      manifestAppUrl\n    });\n\n    const Ledger = new LedgerConnector({\n      supportedNetworkURLs,\n      defaultNetwork\n    });\n\n    const WalletConnect = new WalletConnectConnector({\n      defaultNetwork,\n      rpc:supportedNetworkURLs,\n      api: WalletConnectProvider,\n      infuraId: env.REACT_APP_INFURA_KEY,\n      bridge: \"https://bridge.walletconnect.org\",\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Fortmatic = new FortmaticConnector({\n      api: FortmaticApi,\n      apiKey: fortmaticApiKey,\n      logoutOnDeactivation: false\n    });\n\n    const Portis = new PortisConnector({\n      api: PortisApi,\n      dAppId: portisDAppId,\n      network: portisNetwork\n    });\n\n    const Authereum = new AuthereumConnector({\n      api: AuthereumApi,\n      network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n    });\n\n    const walletLink = new WalletLinkConnector({\n      api: WalletLink,\n      darkMode: false,\n      chainId: defaultNetwork,\n      appName: globalConfigs.appName,\n      infuraUrl: supportedNetworkURLs[defaultNetwork],\n      appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n    });\n\n    const Torus = new TorusConnector({\n      api: TorusApi,\n      initParams:{\n        buildEnv: 'production', // default: production\n        enableLogging: false, // default: false\n        network: {\n          host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n          chainId: defaultNetwork, // default: 1\n          networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n        },\n        showTorusButton: false // default: true\n      }\n    });\n\n    const gnosis = new GnosisSafeConnector(SafeAppConnector);\n\n    return {\n      Injected,\n      Infura,\n      WalletConnect,\n      gnosis,\n      walletLink,\n      Fortmatic,\n      Portis,\n      Authereum,\n      Torus,\n      Trezor,\n      Ledger,\n    };\n  }\n\n}","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 100;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    attempsTimeoutIds:{},\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 1000;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      attempsTimeoutIds:{},\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = window.setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash,count=0,maxCount=400) => {\n      return new Promise( (resolve, reject) => {\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId]){\n          this.multiCallsStats.attempsTimeoutIds[batchId] = {};\n        }\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId][resultHash]){\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash] = {\n            count,\n            result:null,\n            timeoutId:null,\n            maxCountReached:false\n          };\n        }\n\n        const maxCountReached = maxCount && count>=maxCount;\n        const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined' ? true : false;\n\n        // Update attempt count\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].count = count;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].maxCountReached = maxCountReached;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result = resultIsDefined ? this.multiCallsResults[batchId][resultHash] : 'undefined';\n\n        // console.log('attempt',batchId,resultHash,count,resultIsDefined,maxCountReached,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result);\n\n        if (resultIsDefined || maxCountReached) {\n\n          // Force rejected response\n          if (maxCountReached && !resultIsDefined){\n            if (!this.multiCallsResults[batchId]){\n              this.multiCallsResults[batchId] = {};\n            }\n            this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n          }\n\n          // Handle rejection\n          if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n            // this.timeLog('REJECTED',batchId,resultHash);\n\n            // Add hash to rejected hashes\n            this.addRejectedHash(resultHash);\n\n            resolve('REJECTED');\n          } else {\n            // this.timeLog('RESOLVED',batchId,resultHash);\n            this.addResolvedHash(resultHash);\n            resolve(this.multiCallsResults[batchId][resultHash]);\n          }\n\n          // Increment processed count\n          this.multiCallsStats.processedCount++;\n\n          // Remove hash from missing hashes\n          delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          delete this.multiCallsStats.attempsTimeoutIds[batchId][resultHash];\n        } else {\n          // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId = window.setTimeout(()=>{\n            resolve(checkMulticallData(batchId,resultHash,count+1,maxCount));\n          },50);\n\n          // console.log('new_attempt',batchId,resultHash,count+1,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId);\n        }\n      });\n    }\n\n    // console.log('makeMulticall',callBatchId,callDataHash);\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    // console.log('data',callBatchId,callDataHash,data);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => window.setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const isGnosisSafe = !!props.connectors.gnosis.provider.safe;\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (props.connectors.Portis) {\n    if (registerPage) {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(props.connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    href={\"#\"}\n                    color={'blue'}\n                    fontWeight={'0'}\n                    textAlign={'center'}\n                    onClick={this.toggleShowTxFees}\n                    title={\"Learn about Ethereum transaction fees\"}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark-white.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectors={this.props.connectors}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <RoundButton\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={ e => this.setCurrentSection(e,'instructions') }\n            >\n              READ INSTRUCTIONS\n            </RoundButton>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <RoundButton\n              className={[styles.gradientButton,styles.empty]}\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={this.resetModal}\n            >\n              BACK\n            </RoundButton>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n\n      window.ethereum.on('accountsChanged', async (accounts) => {\n        this.initAccount(accounts[0]);\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n    window.connectors = this.props.connectors;\n  }\n\n  checkGnosisSafeNetwork = async () => {\n    const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n    // console.log('isGnosisSafe',this.state.web3.currentProvider.constructor.name);\n    if (isGnosisSafe){\n      const currentSafeNetworkId = await this.props.connectors.gnosis.getChainId();\n      console.log('currentSafeNetworkId',this.props.connectors.gnosis.provider.safe,currentSafeNetworkId,this.state.network.current.id);\n      if (!this.state.web3 || !this.state.network.current.id || this.state.network.current.id !== currentSafeNetworkId){\n        await this.checkNetwork(currentSafeNetworkId);\n      }\n    }\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    if (walletProvider === 'gnosis'){\n      return false;\n    }\n    \n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n\n        // Check Gnosis Network\n        this.checkGnosisSafeNetwork();\n\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded',this.props.connectors.gnosis.provider.safe);\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('connectorNameChanged',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.checkNetwork(null,this.initWeb3);\n    } else if ( prevProps.context.active !== this.props.context.active || prevProps.context.connectorName !== this.props.context.connectorName || JSON.stringify(prevProps.context.error) !== JSON.stringify(this.props.context.error) ) {\n      // console.log('contextChanged',this.props.connectorName,this.props.context.connectorName,this.props.context.active,this.props.context.error);\n\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.checkNetwork(null,this.initWeb3);\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.checkNetwork(null,this.initWeb3);\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName && setConnectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('connectorNameChanged_2',this.props.context.connectorName,this.props.context.connectorName,this.props.connectorName);\n      setConnectorName = this.props.connectorName;\n      this.checkNetwork(null,this.initWeb3);\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n      // this.initWeb3();\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n\n    // console.log('initWeb3','networkInitialized',this.state.networkInitialized);\n\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    let useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n    // let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      useWeb3Provider = false; // Disable web3 provider for Infura\n      context.unsetConnector();\n      // setConnectorName = null;\n    } else if (connectorName !== 'Infura') {\n      const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n      // console.log('initWeb3 connectorNameChanged',connectorName,context.connectorName,setConnectorName,!context.active,connectorNameChanged);\n\n      // Set the connector\n      if (connectorName !== 'ledgerLive'){\n        if (!context.active || connectorNameChanged) {\n          // Select preferred web3 provider\n          if (connectorName && connectorNameChanged){\n\n            if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n              return false;\n            }\n\n            // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n            setConnectorName = connectorName;\n            await context.setConnector(connectorName);\n            // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n            // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n            // return this.initWeb3();\n            return web3;\n          }\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    // Forse enable provider\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    const web3Callback = async (initWeb3Index=null) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index && initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',initWeb3Index,this.state.network.current.id,this.state.network.required.id,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        await this.checkGnosisSafeNetwork();\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const biconomyEnabled = biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()));\n\n    // console.log('initWeb3',initWeb3Index,biconomyEnabled,connectorName,web3,context,web3Provider,'UPDATE',web3 !== this.state.web3);\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyEnabled){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            // if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n            //   console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n            //   return false;\n            // }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          biconomy:false\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = (this.state.network.isCorrectNetwork ? this.state.web3 : (networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : this.state.web3Providers[this.state.network.required.id]));\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      await this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=null) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (!account && this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      let wallets = null;\n\n      if (!account){\n        wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n      \n      // console.log('initAccount',wallets,this.props.context.account,this.state.account,account);\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks,this.state.web3);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    // const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranchesNetworks){\n      Object.keys(this.props.availableTranchesNetworks).forEach( networkId => {\n        const protocols = this.props.availableTranchesNetworks[networkId];\n        Object.keys(protocols).forEach( protocol => {\n          const tokens = this.props.availableTranchesNetworks[networkId][protocol];\n          Object.keys(tokens).forEach( token => {\n            const tokenConfig = tokens[token];\n            // if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (parseInt(networkId) === parseInt(requiredNetworkId)){\n              if (tokenConfig.abi){\n                contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n              }\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n\n              const strategyConfig = tokenConfig.Strategy;\n              if (strategyConfig.address){\n                contracts.push(this.initContractWithoutSet(tokenConfig.Strategy.name,strategyConfig.address,strategyConfig.abi));\n              }\n            }\n\n            if (tokenConfig.abi){\n              contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,networkId));\n            }\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,networkId));\n          });\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = (networkId=null) => {\n    const defaultNetworkID = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n    if (!networkId || !globalConfigs.network.enabledNetworks.includes(networkId)){\n      networkId = defaultNetworkID;\n    }\n    const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n    return {\n      id: networkId,\n      name: networkName\n    };\n   }\n\n   getCurrentNetwork = async (networkId=null,defaultWeb3=null) => {\n     const currentWeb3 = defaultWeb3 || this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     \n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null,callback=null) => {\n    const network = {...this.state.network};\n\n    // Get selected web3 provider\n    const defaultWeb3 = this.props.context && this.props.context.active && this.props.context.library ? this.props.context.library : null;\n\n    network.required = this.getRequiredNetwork(networkId);\n    network.current = await this.getCurrentNetwork(networkId,defaultWeb3);\n\n    const networkInitialized = !!network.current.id;\n    // Network is correct if not connected\n    network.isCorrectNetwork =  !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','defaultWeb3:',defaultWeb3,'networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', isCorrectNetwork: '+network.isCorrectNetwork,'networkInitialized: '+networkInitialized,', update: '+updateNetwork);\n\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      },()=>{\n        if (typeof callback === 'function'){\n          callback();\n        }\n      });\n    } else {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n        // Update transaction with receipt details\n        if (transaction.confirmationCount===1){\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        }\n\n        if (call_callback){\n          callback(transaction);\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction,transaction.transactionHash);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          connectors={this.props.connectors}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import DAI from '../abis/tokens/DAI.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport RibbonPool from '../abis/ribbon/RibbonPool.json';\nimport TruefiPool from '../abis/truefi/TruefiPool.json';\nimport Clearpool from '../abis/clearpool/Clearpool.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOPolygon from '../contracts/IdleCDOPolygon.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nimport QuickswapLiquidityPool from \"../abis/quickswap/QuickswapLiquidityPool.json\";\nconst availableTranches = {\n  137:{\n    quickswap:{\n      CXETHWETH:{\n        decimals:18,\n        token:'CXETHWETH',\n        protocol:'quickswap',\n        blockNumber:28501471,\n        referralEnabled:true,\n        autoFarming:['WMATIC'],\n        abi:QuickswapLiquidityPool,\n        address:'0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        CDO:{\n          decimals:18,\n          abi:IdleCDOPolygon,\n          name:'IdleCDO_quickswap_CXETHWETH',\n          address:'0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_quickswap_CXETHWETH'\n        },\n        messages:{\n          buyInstructions:'To get CXETHWETH token your have to supply liquidity into the <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://quickswap.exchange/#/add/0xfe4546feFe124F30788c4Cc1BB9AA6907A7987F9/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\">Quickswap cxETH-ETH pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_AA',\n            address:'0x466cFDfF869666941CdB89daa412c3CddC55D6c1'\n          },\n          blockNumber:28501471,\n          label:'AA-CXETHWETH-LP',\n          name:'AA_quickswap_CXETHWETH',\n          token:'AA_quickswap_CXETHWETH',\n          address:'0x967b2fdEc06c0178709F1BFf56E0aA9367c3225c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_BB',\n            address:'0x727d9c331e9481167Dc61A9289C948da25bE825e'\n          },\n          blockNumber:28501471,\n          label:'BB-CXETHWETH-LP',\n          name:'BB_quickswap_CXETHWETH',\n          token:'BB_quickswap_CXETHWETH',\n          address:'0x1aFf460F388E3822756F5697f05A7E2AEB8Db7ef'\n        }\n      }\n    }\n  },\n  1:{\n    idle:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        disabled:true,\n        protocol:'idle',\n        blockNumber:13054628,\n        enabledEnvs: ['beta'],\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          decimals:18,\n          abi:IdleCDO,\n          name:'IdleCDO_idleDAIYield',\n          address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleDAIYield',\n          address:'0x48a48c6694168093A3dEE02E9e8AC5a14169a652'\n        },\n        description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n            address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI AA',\n          blockNumber:13054628,\n          name:'AA_idleDAIYield',\n          token:'AA_idleDAIYield',\n          address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n            address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:false,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI BB',\n          blockNumber:13054628,\n          name:'BB_idleDAIYield',\n          token:'BB_idleDAIYield',\n          address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n        }\n      },\n      FEI:{\n        token:'FEI',\n        decimals:18,\n        disabled:true,\n        protocol:'idle',\n        blockNumber:13575397,\n        enabledEnvs: ['beta'],\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_idleFEIYield',\n          address:'0x77648a2661687ef3b05214d824503f6717311596'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleFEIYield',\n          address:'0x73A44027bDAF5D71296d2C73cfb13e561c76a916'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n            address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleFEI AA',\n          blockNumber:13575397,\n          name:'AA_idleFEIYield',\n          token:'AA_idleFEIYield',\n          address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          label:'idleFEI BB',\n          blockNumber:13575397,\n          name:'BB_idleFEIYield',\n          token:'BB_idleFEIYield',\n          address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n        }\n      }\n    },\n    lido:{\n      stETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'stETH',\n        protocol:'lido',\n        blockNumber:13776954,\n        address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_stETH',\n          address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          harvestEnabled:false,\n          name:'IdleStrategy_lido_stETH',\n          address:'0x0cac674ebD77bBD899f6079932768f6d59Da089A'\n        },\n        messages:{\n          buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:false,\n            stakingRewards:[\n              {\n                token:'LDO',\n                enabled:true,\n                address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n              }\n            ],\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_stETH_AA',\n            address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n          },\n          blockNumber:13776954,\n          name:'AA_lido_stETH',\n          token:'AA_lido_stETH',\n          label:'lido stETH AA',\n          address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_stETH_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13776954,\n          name:'BB_lido_stETH',\n          token:'BB_lido_stETH',\n          label:'lido stETH BB',\n          address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n        }\n      },\n      MATIC:{\n        abi:ERC20,\n        decimals:18,\n        token:'MATIC',\n        protocol:'lido',\n        enabledEnvs: [],\n        autoFarming:['LDO'],\n        blockNumber:15623682,\n        getApyFromApi:{\n          path:['apr'],\n          protocol:'polido',\n          apyLabel:'stMATIC APR'\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n        functions:{\n          getCustomApr:'getMaticTrancheApy',\n          getAdditionalApr:'getMaticTrancheAdditionalApy',\n        },\n        ClaimNFT:{\n          contract:'stMATIC',\n          method:'claimTokens',\n          event:{\n            name:'ClaimTokensEvent',\n            amountField:'_amountClaimed'\n          }\n        },\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_MATIC',\n          address:'0xF87ec7e1Ee467d7d78862089B92dd40497cBa5B8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_lido_MATIC',\n          customAprFunction:'getMaticTrancheStrategyApr',\n          address:'0x6110deC9faC2A721c0EEe64B769A7E4cCcf4aa81'\n        },\n        modal:{\n          enabled:true,\n          buttonText:'Continue',\n          icon:'images/warning-2.png',\n          id:'modal_lido_matic_withdraw',\n          title:'Lido stMATIC unstake period',\n          text:'When you withdraw your funds from the tranche you will receive an NFT representing your redeemed amount, default stMATIC unstaking period takes around 3-4 days (80 epochs) to process. After that you can claim your rewards directly from <a href=\"https://polygon.lido.fi\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://polygon.lido.fi</a> in Claim tab. More info at <a href=\"https://docs.polygon.lido.fi/how-lido-on-polygon-works/#unstake-tokens\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://docs.polygon.lido.fi/how-lido-on-polygon-works/#unstake-tokens</a>'\n        },\n        messages:{\n          pendingNFTAmount:'Claim your rewards directly from <a href=\"https://polygon.lido.fi\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://polygon.lido.fi</a> in Claim tab.',\n          withdraw:'By withdrawing you will receive an NFT representing your redeemed funds, then you need to claim your funds directly from <a href=\"https://polygon.lido.fi\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://polygon.lido.fi</a>'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n            pendingNFTAmount:'getMaticTrancheNFTs'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_MATIC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15623682,\n          name:'AA_lido_MATIC',\n          token:'AA_lido_MATIC',\n          label:'lido MATIC AA',\n          address:'0xAEf4FCC4E5F2dc270760063446d4116D24704Ad1'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            pendingNFTAmount:'getMaticTrancheNFTs'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_MATIC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15623682,\n          name:'BB_lido_MATIC',\n          token:'BB_lido_MATIC',\n          label:'lido MATIC BB',\n          address:'0x077212c69A66261CF7bD1fd3b5C5db7CfFA948Ee'\n        }\n      }\n    },\n    /*\n    mstable:{\n      mUSD:{\n        abi:ERC20,\n        decimals:18,\n        token:'mUSD',\n        protocol:'mstable',\n        autoFarming:['MTA'],\n        blockNumber:14184007,\n        address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_mstable_mUSD',\n          address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_mstable_mUSD'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_mstable_mUSD_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'AA_mstable_mUSD',\n          token:'AA_mstable_mUSD',\n          label:'mstable mUSD AA',\n          address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'BB_mstable_mUSD',\n          token:'BB_mstable_mUSD',\n          label:'mstable mUSD BB',\n          address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n        }\n      }\n    },\n    */\n    convex:{\n      FRAX3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'FRAX3CRV',\n        protocol:'convex',\n        blockNumber:13812864,\n        autoFarming:['CVX','CRV'],\n        getApyFromApi:{\n          protocol:'curve',\n          apyLabel:'Curve vAPR',\n          path:['apy','day','frax'],\n        },\n        address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_frax3crv',\n          address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_frax3crv',\n          address:'0xBc1707D16541108b7035E52e1DAeb27ca4B6B79F'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'AA_convex_frax3crv',\n          token:'AA_convex_frax3crv',\n          label:'convex frax3crv AA',\n          address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'BB_convex_frax3crv',\n          token:'BB_convex_frax3crv',\n          label:'convex frax3crv BB',\n          address:'0x18cf59480d8c16856701f66028444546b7041307'\n        }\n      },\n      MIM3CRV:{\n        abi:ERC20,\n        decimals:18,\n        disabled:true,\n        token:'MIM3CRV',\n        protocol:'convex',\n        blockNumber:13848124,\n        enabledEnvs: ['beta'],\n        getApyFromApi:{\n          protocol:'curve',\n          apyLabel:'Curve vAPR',\n          path:['apy','day','mim'],\n        },\n        autoFarming:['CVX','CRV','SPELL'],\n        address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_mim3crv',\n          address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_mim3crv',\n          address:'0x35168324dC1981aDDc3bC915788e200BeDF77865'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'AA_convex_mim3crv',\n          token:'AA_convex_mim3crv',\n          label:'convex mim3crv AA',\n          address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'BB_convex_mim3crv',\n          token:'BB_convex_mim3crv',\n          label:'convex mim3crv BB',\n          address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n        }\n      },\n      steCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'steCRV',\n        protocol:'convex',\n        blockNumber:14182975,\n        autoFarming:['CVX','CRV','LDO'],\n        getApyFromApi:{\n          protocol:'curve',\n          apyLabel:'Curve vAPR',\n          path:['apy','day','steth'],\n        },\n        address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_steCRV',\n          address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_steCRV',\n          address:'0x3bCbA0AfD36C9B350f46c570f89ab70817D122CB'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'AA_convex_steCRV',\n          token:'AA_convex_steCRV',\n          label:'convex steCRV AA',\n          address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'BB_convex_steCRV',\n          token:'BB_convex_steCRV',\n          label:'convex steCRV BB',\n          address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n        }\n      },\n      ALUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        protocol:'convex',\n        token:'ALUSD3CRV',\n        blockNumber:14177732,\n        autoFarming:['CVX','CRV'],\n        address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_alusd3crv',\n          address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_alusd3crv',\n          address:'0xDb7306Ddba67DD9d5aF08204E314F4DE6c29e20d'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'AA_convex_alusd3crv',\n          token:'AA_convex_alusd3crv',\n          label:'convex alusd3crv AA',\n          address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'BB_convex_alusd3crv',\n          token:'BB_convex_alusd3crv',\n          label:'convex alusd3crv BB',\n          address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n        }\n      },\n      \"3EUR\":{\n        abi:ERC20,\n        decimals:18,\n        token:'3EUR',\n        protocol:'convex',\n        blockNumber:14177892,\n        autoFarming:['CVX','CRV','ANGLE'],\n        address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_3eur',\n          address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_3eur',\n          address:'0x4Ae60BC9A3eFc160AE2EbA70947a9b47Ad2b9094'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'AA_convex_3eur',\n          token:'AA_convex_3eur',\n          label:'convex 3eur AA',\n          address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'BB_convex_3eur',\n          token:'BB_convex_3eur',\n          label:'convex 3eur BB',\n          address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n        }\n      },\n      MUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        disabled:true,\n        token:'MUSD3CRV',\n        protocol:'convex',\n        blockNumber:14177794,\n        enabledEnvs: ['beta'],\n        autoFarming:['CVX','CRV'],\n        address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_musd3crv',\n          address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_musd3crv',\n          address:'0x271cE5dED4cCbD28833bddF8a8093517299920f0'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'AA_convex_musd3crv',\n          token:'AA_convex_musd3crv',\n          label:'convex musd3crv AA',\n          address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'BB_convex_musd3crv',\n          token:'BB_convex_musd3crv',\n          label:'convex musd3crv BB',\n          address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n        }\n      },\n      PBTCCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'PBTCCRV',\n        protocol:'convex',\n        blockNumber:14570195,\n        multiCallDisabled:true,\n        autoFarming:['CVX','CRV','PNT'],\n        address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_pbtccrv',\n          address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_pbtccrv',\n          address:'0x0198792f2849397908C092b6B57654e1a57a4CDC'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'AA_convex_pbtccrv',\n          token:'AA_convex_pbtccrv',\n          label:'convex pbtccrv AA',\n          address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'BB_convex_pbtccrv',\n          token:'BB_convex_pbtccrv',\n          label:'convex pbtccrv BB',\n          address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n        }\n      }\n    },\n    euler:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14785127,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDC',\n          address:'0xf5a3d259bfe7288284bd41823ec5c8327a314054'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDC',\n          address:'0x5DaD2eEF80a8cdFD930aB8f0353cA13Bd48c4346'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDC',\n          blockNumber:14785127,\n          token:'AA_euler_USDC',\n          label:'euler USDC AA',\n          address:'0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14785127,\n          name:'BB_euler_USDC',\n          token:'BB_euler_USDC',\n          label:'euler USDC BB',\n          address:'0xe11679CDb4587FeE907d69e9eC4a7d3F0c2bcf3B'\n        }\n      },\n      levUSDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        protocol:'euler',\n        blockNumber:15445762,\n        enabledEnvs: ['beta'],\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_levUSDC',\n          address:'0xcb2bd49d4b7874e6597dedfaa3e7b4e01831c5af'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_levUSDC',\n          address:'0xee5ec95ce2c8700a2d152db3249fa13b163f0073'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_levUSDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15445762,\n          label:'euler USDC AA',\n          name:'AA_euler_levUSDC',\n          token:'AA_euler_levUSDC',\n          address:'0x9F94fa97cC2d48315015040708D12aB855283164'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_levUSDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15445762,\n          label:'euler USDC BB',\n          name:'BB_euler_levUSDC',\n          token:'BB_euler_levUSDC',\n          address:'0x617648B846512E2F49dC21Bf27e4505C285E6977'\n        }\n      },\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961854,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_DAI',\n          address:'0x46c1f702a6aad1fd810216a5ff15aab1c62ca826'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_DAI',\n          address:'0xc7F1B9C72B8230E470420A4b69af7c50781A3f44'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_DAI_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_DAI',\n          blockNumber:14961854,\n          token:'AA_euler_DAI',\n          label:'euler DAI AA',\n          address:'0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_DAI_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14961854,\n          name:'BB_euler_DAI',\n          token:'BB_euler_DAI',\n          label:'euler DAI BB',\n          address:'0x6629baA8C7c6a84290Bf9a885825E3540875219D'\n        }\n      },\n      USDT:{\n        abi:ERC20,\n        decimals:6,\n        token:'USDT',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961973,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDT',\n          address:'0xD5469DF8CA36E7EaeDB35D428F28E13380eC8ede'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDT',\n          address:'0x3d1775dA27Dd9c6d936795Ac21b94CDeD8baBD69'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDT_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDT',\n          blockNumber:14961973,\n          token:'AA_euler_USDT',\n          label:'euler USDT AA',\n          address:'0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDT_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'BB_euler_USDT',\n          blockNumber:14961973,\n          token:'BB_euler_USDT',\n          label:'euler USDT BB',\n          address:'0xb1EC065abF6783BCCe003B8d6B9f947129504854'\n        }\n      },\n      AGEUR:{\n        abi:ERC20,\n        decimals:18,\n        token:'AGEUR',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:15055915,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_AGEUR',\n          address:'0x2398Bc075fa62Ee88d7fAb6A18Cd30bFf869bDa4'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_AGEUR',\n          address:'0x8468B8Efe7eeA52978Ccfe3C0248Ca6F6895e166'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_AGEUR_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_AGEUR',\n          blockNumber:15055915,\n          token:'AA_euler_AGEUR',\n          label:'euler AGEUR AA',\n          address:'0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_AGEUR_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15055915,\n          name:'BB_euler_AGEUR',\n          token:'BB_euler_AGEUR',\n          label:'euler AGEUR BB',\n          address:'0xcf5FD05F72cA777d71FB3e38F296AAD7cE735cB7'\n        }\n      }\n    },\n    clearpool:{\n      USDCWin:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabledEnvs:[],\n        tokenKey:'USDCWin',\n        lender:'wintermute',\n        protocol:'clearpool',\n        blockNumber:15044679,\n        autoFarming:['CPOOL'],\n        maxUtilizationRate:0.99,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_clearpool_wintermute_USDC',\n          address:'0xDBCEE5AE2E9DAf0F5d93473e08780C9f45DfEb93'\n        },\n        Pool:{\n          abi:Clearpool,\n          name:'Pool_clearpool_wintermute_USDC',\n          address:'0xcb288b6d30738db7e3998159d192615769794b5b'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_clearpool_wintermute_USDC',\n          address:'0x54ae90be2dee0a960953c724839541e75bb1f471'\n        },\n        links:{\n          default:'https://docs.clearpool.finance/clearpool/how-it-works/protocol/default',\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.clearpool.finance/pool/0xCb288b6d30738db7E3998159d192615769794B5b\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Clearpool Wintermute USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_clearpool_wintermute_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_clearpool_wintermute_USDC',\n          token:'AA_clearpool_wintermute_USDC',\n          label:'clearpool Wintermute USDC AA',\n          address:'0xb86264c21418aA75F7c337B1821CcB4Ff4d57673'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_clearpool_wintermute_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_clearpool_wintermute_USDC',\n          token:'BB_clearpool_wintermute_USDC',\n          label:'clearpool Wintermute USDC BB',\n          address:'0x4D9d9AA17c3fcEA05F20a87fc1991A045561167d'\n        }\n      },\n      USDCFolk:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        lender:'folkvang',\n        tokenKey: 'USDCFolk',\n        protocol:'clearpool',\n        enabledEnvs:['beta'],\n        blockNumber:15924815,\n        autoFarming:['CPOOL'],\n        maxUtilizationRate:0.99,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_clearpool_folkvang_USDC',\n          address:'0xDBd47989647Aa73f4A88B51f2B5Ff4054De1276a'\n        },\n        Pool:{\n          abi:Clearpool,\n          name:'Pool_clearpool_folkvang_USDC',\n          address:'0xe3d20a721522874d32548b4097d1afc6f024e45b'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_clearpool_folkvang_USDC',\n          address:'0x84B2dEaF87A398F25ec5833000F72B6a4906b5AC'\n        },\n        links:{\n          default:'https://docs.clearpool.finance/clearpool/how-it-works/protocol/default',\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.clearpool.finance/pool/0xe3d20a721522874d32548b4097d1afc6f024e45b\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Clearpool Folkvang USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            address:'0x0000000000000000000000000000000000000000',\n            name:'TrancheStakingRewards_clearpool_folkvang_USDC_AA',\n          },\n          blockNumber:15924815,\n          label:'clearpool USDC AA',\n          name:'AA_clearpool_folkvang_USDC',\n          token:'AA_clearpool_folkvang_USDC',\n          address:'0xa0154A44C1C45bD007743FA622fd0Da4f6d67D57'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_clearpool_folkvang_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15924815,\n          label:'clearpool USDC BB',\n          name:'BB_clearpool_folkvang_USDC',\n          token:'BB_clearpool_folkvang_USDC',\n          address:'0x7a625a2882C9Fc8DF1463d5E538a3F39B5DBD073'\n        }\n      },\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabledEnvs:[],\n        blockNumber:15724548,\n        protocol:'clearpool',\n        autoFarming:['CPOOL'],\n        maxUtilizationRate:0.99,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_clearpool_DAI',\n          address:'0xDcE26B2c78609b983cF91cCcD43E238353653b0E'\n        },\n        Pool:{\n          abi:Clearpool,\n          name:'Pool_clearpool_DAI',\n          address:'0xe3D20A721522874D32548B4097d1afc6f024e45b'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_clearpool_DAI',\n          address:'0xFcA6b0573034BaAca576ea2Ef675032fB8dF6Cec'\n        },\n        description:'This strategy converts 1:1 DAI into USDC via <a href=\"https://makerdao.world/en/learn/governance/module-psm/\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Maker DAO PSM</a> and deploys USDC into <a href=\"https://app.clearpool.finance/pool/0xe3D20A721522874D32548B4097d1afc6f024e45b\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Clearpool Folkvang USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_clearpool_DAI_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15724548,\n          name:'AA_clearpool_DAI',\n          token:'AA_clearpool_DAI',\n          label:'clearpool DAI AA',\n          address:'0x1692F6574a6758ADfbD12544e209146dD4510BD7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_clearpool_DAI_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15724548,\n          name:'BB_clearpool_DAI',\n          token:'BB_clearpool_DAI',\n          label:'clearpool DAI BB',\n          address:'0xCb980b5A4f5BdB81d0B4b97A9eDe64578ba9D48A'\n        }\n      }\n    },\n    ribbon:{\n      USDCFolk:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        lender:'folkvang',\n        protocol:'ribbon',\n        autoFarming:['RBN'],\n        enabledEnvs:['beta'],\n        tokenKey: 'USDCFolk',\n        blockNumber:15831531,\n        maxUtilizationRate:0.99,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_ribbon_folkvang_USDC',\n          address:'0x4bC5E595d2e0536Ea989a7a9741e9EB5c3CAea33'\n        },\n        Pool:{\n          abi:RibbonPool,\n          name:'Pool_ribbon_folkvang_USDC',\n          address:'0x3cd0ecf1552d135b8da61c7f44cefe93485c616d'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_ribbon_folkvang_USDC',\n          address:'0x25e7337037817DD9Bddd0334Ca1591f370518893'\n        },\n        links:{\n          default:'https://docs.ribbon.finance/ribbon-lend/introduction-to-ribbon-lend/no-lockups/pool-status',\n        },\n        description:'This strategy deploys funds in the <a href=\"https://lend.ribbon.finance/app/pool/folkvang\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Ribbon Folkvang USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_ribbon_folkvang_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15831531,\n          name:'AA_ribbon_folkvang_USDC',\n          token:'AA_ribbon_folkvang_USDC',\n          label:'ribbon Folkvang USDC AA',\n          address:'0x5f45A578491A23AC5AEE218e2D405347a0FaFa8E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_ribbon_folkvang_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15831531,\n          name:'BB_ribbon_folkvang_USDC',\n          token:'BB_ribbon_folkvang_USDC',\n          label:'ribbon Folkvang USDC BB',\n          address:'0x982E46e81E99fbBa3Fb8Af031A7ee8dF9041bb0C'\n        }\n      },\n      USDCWin:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        protocol:'ribbon',\n        tokenKey:'USDCWin',\n        autoFarming:['RBN'],\n        lender:'wintermute',\n        enabledEnvs:['beta'],\n        blockNumber:15925109,\n        maxUtilizationRate:0.99,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_ribbon_wintermute_USDC',\n          address:'0xf6B692CC9A5421E4C66D32511d65F94c64fbD043'\n        },\n        Pool:{\n          abi:RibbonPool,\n          name:'Pool_ribbon_wintermute_USDC',\n          address:'0x0Aea75705Be8281f4c24c3E954D1F8b1D0f8044C'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_ribbon_wintermute_USDC',\n          address:'0x73f3fb86cb579eeea9d482df2e91b6770a42fd6a'\n        },\n        links:{\n          default:'https://docs.ribbon.finance/ribbon-lend/introduction-to-ribbon-lend/no-lockups/pool-status',\n        },\n        description:'This strategy deploys funds in the <a href=\"https://lend.ribbon.finance/app/pool/wintermute\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Ribbon Wintermute USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_ribbon_wintermute_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15925109,\n          name:'AA_ribbon_wintermute_USDC',\n          token:'AA_ribbon_wintermute_USDC',\n          label:'Ribbon Wintermute USDC AA',\n          address:'0x3e041C9980Bc03011cc30491d0c4ccD53602F89B'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_ribbon_wintermute_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15925109,\n          name:'BB_ribbon_wintermute_USDC',\n          token:'BB_ribbon_wintermute_USDC',\n          label:'Ribbon Wintermute USDC BB',\n          address:'0x65237B6Fc6E62B05B62f1EbE53eDAadcCd1684Ad'\n        }\n      },\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        protocol:'ribbon',\n        autoFarming:['RBN'],\n        blockNumber:15831214,\n        enabledEnvs:['beta'],\n        maxUtilizationRate:0.99,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_ribbon_DAI',\n          address:'0xc8c64CC8c15D9aa1F4dD40933f3eF742A7c62478'\n        },\n        Pool:{\n          abi:RibbonPool,\n          name:'Pool_ribbon_DAI',\n          address:'0x0aea75705be8281f4c24c3e954d1f8b1d0f8044c'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_ribbon_DAI',\n          address:'0x94BcFfc172Af69132BbCE7DF52D567e5ce651dcd'\n        },\n        description:'This strategy converts 1:1 DAI into USDC via <a href=\"https://makerdao.world/en/learn/governance/module-psm/\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Maker DAO PSM</a> and deploys USDC into <a href=\"https://lend.ribbon.finance/app/pool/wintermute\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Ribbon Wintermute USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_ribbon_DAI_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15831214,\n          name:'AA_ribbon_DAI',\n          token:'AA_ribbon_DAI',\n          label:'ribbon DAI AA',\n          address:'0xd54E5C263298E60A5030Ce2C8ACa7981EaAaED4A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_ribbon_DAI_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15831214,\n          name:'BB_ribbon_DAI',\n          token:'BB_ribbon_DAI',\n          label:'ribbon DAI BB',\n          address:'0xD3E4C5C37Ba3185410550B836557B8FA51d5EA3b'\n        }\n      }\n    },\n    truefi:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        protocol:'truefi',\n        autoFarming:['TRU'],\n        blockNumber:15326147,\n        enabledEnvs: ['beta'],\n        multiCallDisabled:true,\n        // adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_truefi_USDC',\n          address:'0x1f5A97fB665e295303D2F7215bA2160cc5313c8E'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_truefi_USDC',\n          address:'0x62B17c9083Db5941197E83BD385985B8878B58Fb'\n        },\n        Pool:{\n          abi:TruefiPool,\n          name:'Pool_truefi_USDC',\n          address:'0xA991356d261fbaF194463aF6DF8f0464F8f1c742'\n        },\n        modal:{\n          enabled:true,\n          buttonText:'Continue',\n          title:'Truefi exit fee',\n          icon:'images/warning-2.png',\n          id:'modal_truefi_usdc_exit_fee',\n          text:'This strategy is subject to an exit fee between 0.05% and 10% depending on the utilization ratio of the Truefi pool, in addition to the performance fee. Read more at <a href=\"https://docs.truefi.io/faq/dao-managed-pools/pool#what-is-liquid-exit\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://docs.truefi.io/faq/dao-managed-pools/pool#what-is-liquid-exit</a>'\n        },\n        messages:{\n          withdraw:'This strategy is subject to an exit fee between 0.05% and 10% depending on the utilization ratio of the Truefi pool.',\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.truefi.io/pools/0xA991356d261fbaF194463aF6DF8f0464F8f1c742\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Truefi USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            penaltyFee:'liquidExitPenalty'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_truefi_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_truefi_USDC',\n          token:'AA_truefi_USDC',\n          label:'truefi USDC AA',\n          address:'0x868bb78fb045576162B510ba33358C9f93e7959e'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            penaltyFee:'liquidExitPenalty'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_truefi_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_truefi_USDC',\n          token:'BB_truefi_USDC',\n          label:'truefi USDC BB',\n          address:'0x6EdE2522347E6a5A0420F41f42e021246e97B540'\n        }\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport themeDark from \"../theme-dark\";\nimport Web3Provider from \"web3-react\";\nimport Web3Connectors from \"./connectors\"\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport { ThemeProvider, Box, Flex } from \"rimble-ui\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Lazy Loading\n// const Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    availableTranches: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableTranchesNetworks: null,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  web3Connectors = null;\n\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (!this.web3Connectors){\n      this.web3Connectors = new Web3Connectors();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n      this.web3Connectors.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = clear_all ? {} : { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableTranchesNetworks = availableTranches;\n    newState.availableTranches = Object.keys(availableTranches[requiredNetwork]).reduce( (output,protocol) => {\n      const tokens = availableTranches[requiredNetwork][protocol];\n      Object.keys(tokens).forEach( token => {\n        const tokenConfig = tokens[token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (envEnabled){\n          if (!output[protocol]){\n            output[protocol] = {};\n          }\n          output[protocol][token] = tokenConfig;\n        }\n      });\n      return output;\n    },{});\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(this.state.availableTranches && Object.keys(this.state.availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.selectedProtocol = selectedProtocol;\n            newState.availableTokens = this.state.availableTranches;\n            newState.tokenConfig = this.state.availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        // const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        const themeMode = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    const connectors = this.web3Connectors.getConnectors();\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    availableTranches={this.state.availableTranches}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableTranchesNetworks={this.state.availableTranchesNetworks}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        availableTranches={this.state.availableTranches}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route\n                                        path=\"/:section?/:param1?/:param2?/:param3?\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              web3Infura={web3Infura}\n                                              web3Polygon={web3Polygon}\n                                              initAccount={initAccount}\n                                              multiCall={this.multiCall}\n                                              permitClient={permitClient}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              maticPOSClient={maticPOSClient}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              validateAccount={validateAccount}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              contractsNetworks={contractsNetworks}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              networkInitialized={networkInitialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              erc20ForwarderClient={erc20ForwarderClient}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              selectedProtocol={this.state.selectedProtocol}\n                                              userRejectedValidation={userRejectedValidation}\n                                              availableTranches={this.state.availableTranches}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              initContractCustomProvider={initContractCustomProvider}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                              availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Button } from \"rimble-ui\";\nimport theme from \"../theme-dark\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  state = {\n    buttonState:'default'\n  };\n\n  render() {\n    const ctaType = this.props.type || 'primary';\n\n    const buttonProps = Object.assign({\n      fontSize:2,\n      width:'auto',\n      fontWeight:4,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:1,\n      fontFamily:'ctas',\n      border:theme.colors.ctas[ctaType][this.state.buttonState].border,\n      contrastColor:theme.colors.ctas[ctaType][this.state.buttonState].text,\n      mainColor:theme.colors.ctas[ctaType][this.state.buttonState].background\n    },this.props.buttonProps);\n\n    const ButtonComponent = ctaType === 'secondary' ? Button.Outline : Button;\n\n    return (\n       <ButtonComponent\n        {...buttonProps}\n        onMouseEnter={(data, e) => {\n          this.setState({\n            buttonState:'hover'\n          });\n        }}\n        onMouseLeave={(data, e) => {\n          this.setState({\n            buttonState:'default'\n          });\n        }}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </ButtonComponent>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [14, 16, 16, 20, 20, 28, 36, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    ctas: '\"Open Sans\"',\n    labels: '\"Open Sans\"',\n    titles: '\"Open Sans\"',\n    sansSerif: '\"Source Sans Pro\"',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '5px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #C6CBD2', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#FFFFFF',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#CDD0D6',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#FFFFFF',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#CDD0D6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    CTAs\n    */\n    ctaPrimaryText:'#1B1E27',\n    ctas:{\n      primary:{\n        default:{\n          border:'none',\n          text:'#1B1E27',\n          background:'#FFFFFF'\n        },\n        hover:{\n          border:'none',\n          text:'#FFFFFF',\n          background:'#2272C8'\n        }\n      },\n      secondary:{\n        default:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        },\n        hover:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        }\n      }\n    },\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2272C8\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#293243',\n    selectBg: '#293243',\n    backButtonBg: '#FFFFFF',\n    lineChartStroke: '#CDD0D6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#1B1E27',\n    statValue: '#FFFFFF',\n    boxBorder: '#eeeeee',\n    cellTitle: '#CDD0D6',\n    cellText: '#CDD0D6',\n    divider: '#CDD0D6',\n    counter: '#CDD0D6',\n    redeem: '#00a9fe',\n    link: '#FFFFFF',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#C6CBD2',\n    cardBg: '#293243',\n    menuBg: '#293243',\n    menuHover: '#293243',\n    dropdownBg: '#4C5976',\n    flashBg: '#04117B',\n    flashColor: '#eeeeee',\n    cardBgHover: '#4b5a76',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    // cardBgActive: \"#04117B\",\n    // cardBgActive: \"#0c48a4\",\n    cardBgActive: \"#2272C8\",\n    cardBgContrast: \"#293243\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    paused: \"#ff7100\",\n    disabledBg: '#8e8d8d',\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n  },\n  buttons: {\n    primary: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      // use css custom props\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    normal: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__dKXq3\",\"bg-bottom-right\":\"ModalCard_bg-bottom-right__32tBy\",\"bg-noise\":\"ModalCard_bg-noise__1pVkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3sgMk\",\"link\":\"Footer_link__1VFp9\"};","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      color:'primary',\n      textAlign:'center',\n      fontFamily:'titles',\n      lineHeight:'initial',\n    };\n\n    // Get title height\n    const as = this.props.as && Heading[this.props.as] ? this.props.as : 'h1';\n    const titleType = parseInt(as.substr(1));\n\n    // Set font size for h1\n    if (titleType === 1){\n      props.fontSize = [5,6];\n    } else if (titleType>=3){ // Reduce weight for h3...h6\n      props.fontWeight = 3;\n    }\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent =  this.props.component ? this.props.component : Heading[as];\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      right={'0'}\n      zIndex={999}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'dashboardBg'}\n    >\n      <Flex\n        zIndex={1}\n        width={'100%'}\n        height={'100%'}\n        position={'absolute'}\n      >\n        <Flex\n          className={[styles.bg,styles['bg-bottom-right']]}\n        />\n        <Flex\n          className={[styles.bg,styles['bg-noise']]}\n        />\n      </Flex>\n      <Flex\n        zIndex={2}\n        height={'100%'}\n        flex={'1 1 auto'}\n        style={{\n          overflow: 'auto',\n        }}\n        position={'relative'}\n        flexDirection={'column'}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    mb={2}\n    width={1}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '40px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'primary'}\n        textAlign={'center'}\n        fontFamily={'titles'}\n        mt={props.icon ? 2 : 0}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    py={3}\n    px={[0,3]}\n    borderTop={0}\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderColor={'light-gray'}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                whiteSpace:'nowrap',\n                color:this.props.theme.colors.primary,\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontSize={2}\n              fontWeight={3}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__E1F2u\",\"genericSelector\":\"GenericSelector_genericSelector__3epuw\",\"dark\":\"GenericSelector_dark__3Fh8V\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__1c1_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2H7IC\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__1TQOS\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1cH4G\"};","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton.js\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <RoundButton\n        handleClick={this.props.handleClick}\n        buttonProps={{width:'auto',...this.props.buttonProps}}\n      >\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          {\n            this.props.isLoading ? (\n              <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n                <LoadingSpinner />\n              </Flex>\n            ) : this.props.buttonText\n          }\n        </Flex>\n      </RoundButton>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    const textProps = Object.assign({\n      color:'primary',\n      fontFamily:'ctas'\n    },this.props.textProps);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const portfolioChanged = this.props.portfolio ? ((this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio)) : false;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || portfolioChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    let formattedValue = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // console.log('mouseOver',fieldInfo.name,this.props.mouseOver);\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'lenderIcon':\n        if (!this.props.tokenConfig.lender) return null\n        const lenderConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.tokenConfig.lender]);\n        const lenderIcon = lenderConfig && lenderConfig.icon ? lenderConfig.icon : `${this.props.tokenConfig.lender}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={`${protocolConfig.label} deploys funds into ${lenderConfig.label}`}\n          >\n            <Image src={`images/protocols/${lenderIcon}`} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'statusIcon':\n        output = null;\n        if (!!this.props.tokenConfig.disabled) {\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool has been disabled, please redeem your funds`}\n            >\n              <Image src={`images/warning-2.png`} {...fieldProps} />\n            </Tooltip>\n          )\n        } else if (this.state.statusIcon === 'paused') {\n          output = (<Tooltip\n            placement={'top'}\n            message={`Deposits for this pool have been temporarily paused due to Smart-Contract maintenance`}\n          >\n            <Image src={`images/pause.svg`} {...fieldProps} />\n          </Tooltip>)\n        } else {\n          output = (\n            <TrancheField\n              {...this.props}\n              fieldInfo={{\n                ...fieldInfo,\n                name:'experimentalBadge'\n              }}\n            />\n          );\n        }\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.functionsUtil.BNify(this.state[fieldInfo.name]).gt(0) && this.functionsUtil.BNify(this.state[fieldInfo.name]).lte(5000000)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state[fieldInfo.name], 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (!!this.props.tokenConfig.disabled){\n            badgeText = 'Disabled';\n            badgeColor = 'disabledBg';\n          } else if (!this.functionsUtil.BNify(this.state.statusBadge).isNaN() && this.functionsUtil.BNify(this.state.statusBadge).gt(0) && this.functionsUtil.BNify(this.state.statusBadge).lte(5000000)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else if (this.state.statusBadge === 'paused'){\n            badgeText = 'Deposits Paused';\n            badgeColor = 'paused';\n          } else if (this.props.tokenConfig.enabledEnvs && this.props.tokenConfig.enabledEnvs.includes('beta')) {\n            badgeText = 'Beta';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getTokenConfig(this.props.tokenConfig.token);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.tokenConfig.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n            mouseOver={this.props.mouseOver}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheAPRSplitRatio':\n        output = this.state[fieldInfo.name];\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n            {\n              (typeof this.props.tokenConfig.adaptiveYieldSplitEnabled === 'undefined' || this.props.tokenConfig.adaptiveYieldSplitEnabled) && (\n                <Tooltip\n                  placement={'top'}\n                  message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n                >\n                  <Image ml={2} src={`images/ays.svg`} height={['1.4em','1.8em']} {...fieldProps} />\n                </Tooltip>\n              )\n            }\n          </Flex>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n      case 'trancheAYS':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n          >\n            <Image src={`images/ays.svg`} height={['1.4em','2em']} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Text, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Text\n        fontWeight={4}\n        color={'cellTitle'}\n        fontSize={['12px',0]}\n        fontFamily={'titles'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Text>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        componentHasChildren = true;\n        CustomComponent = RoundButton;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n        fieldProps.buttonProps = fieldProps;\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getTokenConfig(this.props.tokenConfig.token);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id: this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    if (fieldInfo.name !== 'button'){\n      fieldProps.fontWeight = 3;\n      fieldProps.fontSize = [0,2];\n    }\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getTokenConfig(this.props.token) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${(this.props.tokenConfig ? this.props.tokenConfig.token : this.props.token)}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : (this.props.tokenConfig ? this.props.tokenConfig.token : this.props.token);\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n"],"sourceRoot":""}