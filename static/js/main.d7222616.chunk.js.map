{"version":3,"sources":["CardIconButton/CardIconButton.js","IconBox/IconBox.js","SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","RoundIconButton/RoundIconButton.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AllocationChart/AllocationChart.js","utilities/components/GenericModal.js","PortfolioEquity/PortfolioEquity.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TooltipText/TooltipText.js","TransactionField/TransactionField.js","utilities/components/Header.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","Faquestion/Faquestion.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","ScrollToTop/ScrollToTop.js","Footer/Footer.js","PageNotFound/PageNotFound.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","RoundButton/RoundButton.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","theme-dark.js","utilities/components/ModalCard.module.scss","Footer/Footer.module.scss","Title/Title.js","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","AssetsUnderManagement/AssetsUnderManagement.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","FlexLoader/FlexLoader.js","colors.js","TrancheField/TrancheField.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ExtLink/ExtLink.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","justifyContent","this","props","textProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isActive","color","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_8__","isInteractive","backgroundColor","isDisabled","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","my","alignItems","flexDirection","align","mx","margin","iconBgColor","useIconOnly","borderRadius","mr","isSidebar","p","theme","colors","transactions","actionBg","redeem","image","src","height","isMobile","imageProps","name","icon","size","iconColor","iconProps","fontWeight","fontSize","text","Component","IconBox","react__WEBPACK_IMPORTED_MODULE_5___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isVisible","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mt","textAlign","dangerouslySetInnerHTML","__html","children","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","unitProps","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","fontFamily","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","RoundIconButton","mainColor","disabled","contrastColor","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","GenericSelector","loadComponents","selectedTokenChanged","selectedToken","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","CustomIndicatorSeparator","CustomMenu","zIndex","boxShadow","position","outerColor","selectProps","value","label","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","fonts","sansSerif","cardBg","className","styles","searchInput","themeMode","dark","menuIsOpen","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","_this3","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","v","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","tx","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","status","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","account","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","action","waitText","capitalize","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","labels","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","protocolIcon","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","GenericModal","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","dontShowAgain","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","stop","closeModal","_callee2","_context2","checkboxEnabled","toggleDontShowAgain","setLocalStorage","removeStoredItem","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","closeFunc","Header","pt","title","iconHeight","Body","required","checked","target","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","buttonText","React","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","availableTokens","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_callee3","filteredTxs","amountLent","_context3","values","filter","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","timeoutIds","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","resolve","reject","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_callee8","_context8","window","timeoutId","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","twitterIcon","radioBtn","button","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","mouseOver","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","gradientButton","empty","select","selectDark","input","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","initContract","abi","contractInfo","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args7","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","_ref4","protocol","protocolConfig","_ref5","protocolToken","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","cdo","CDO","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getOnChainTokenConversionRate","getAccountPortfolio","orderedTokensBalance","depositedTokens","tokensToMigrate","totalBalanceConverted","_ref15","_ref17$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_x9","_ref19","_ref20","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","_x10","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args11","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_callee13","_args13","_context13","idleTokensBalance","getFirstDepositTx","_callee14","deposits","_args14","_context14","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee15","firstDepositTxs","_args15","_context15","reduce","acc","getTrancheUserTransactionsEvents","_ref26","_callee16","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref27","_ref28","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","trancheToken_received","trancheToken_sent","_context16","getContractEvents","_x11","_x12","_x13","_ref29","_callee17","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","trancheTypes","endpoint","etherscanTxlist","_args17","_context17","endpoints","makeEtherscanApiRequest","result","some","getTrancheGaugeConfig","trancheTokenAddresses","trancheType","cdoRewardsContractAddresses","addr","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","stakingContractAddresses","isTrancheReceived","isTrancheSent","returnValues","_x14","getEtherscanTokenTransfers","_ref30","_callee18","walletAddr","fromAddress","toAddress","fromBlock","toBlock","sort","limit","transferEvents","eventFilters","_args18","_context18","_x15","_x16","getTrancheStakingRewardsDistributions","_ref31","_callee20","stakingDistributions","_context20","_ref32","_callee19","transfers","_context19","_x19","_x17","_x18","getTrancheHarvests","_ref33","_callee22","_ref34","_ref35","stakingRewardsDistributions","autoFarming","harvestsList","_context22","_ref36","_callee21","_context21","_x22","_x20","_x21","loadTrancheStrategyContract","_ref37","_callee23","strategyConfig","idleStrategyAddress","_context23","Strategy","genericContractCallCachedTTL","_x23","getTrancheLastHarvest","_ref38","_callee24","harvestEnabled","startBlock","latestHarvestBlock","totalAmount","_context24","_x24","_x25","getGovTokenApr","_ref39","_callee25","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref40","_ref41","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context25","getTokenConfig","_address","apr2apy","apr","apy","_x26","_x27","_x28","_x29","getTrancheRewardTokensInfo","_ref42","_callee27","tokensDistribution","_context27","_ref43","_callee26","firstHarvest","lastBlockInfo","latestHarvest","firstBlockInfo","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref44","_ref45","prevHarvest","_latestHarvest","firstBlock","_ref46","_ref47","poolSize","elapsedBlocks","elapsedSeconds","_context26","rewardsRate","now","genericContractCallCached","getBlockInfo","_x32","_x30","_x31","_ref48","_callee29","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args29","_context29","_ref49","_callee28","trancheTokenTransferEvent","_ref50","_ref51","blockInfo","tokenConversionRate","_context28","_x35","tokenTransferEvent","trancheTokenAmount","hashKey","trancheTokens","_x33","_x34","getTrancheUserTransactions","_ref52","_callee30","_context30","_x36","_x37","_x38","getTrancheFirstDepositTx","_ref53","_callee31","_context31","_x39","_x40","_x41","getAmountDepositedTranche","_ref54","_callee32","_context32","_x42","_x43","_x44","_ref55","_callee33","_ref56","_ref57","userAvgPrice","_context33","_x45","_x46","getAmountLent","_callee34","amountLents","_args34","_context34","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee40","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref60","_ref61","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args40","_context40","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref62","_callee35","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context35","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x47","_ref63","_callee36","_context36","_x48","match","_ref64","_callee37","_context37","_x49","_ref65","_callee38","_context38","_x50","items","to_address","_ref66","_callee39","polygonTx","erc20RootToken","_context39","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x51","getPolygonBaseTxs","_callee41","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args41","_context41","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee42","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args42","_context42","filterEthereumTxs","_callee43","_args43","_context43","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee44","resultData","allAvailableTokens","_args44","_context44","processStoredTxs","_callee45","contractInstance","_context45","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","t1","checkPolygonTransactionIncluded","_ref72","_callee46","_ref73","_ref74","_context46","getTransactionReceipt","_x52","_ref75","_callee47","_args47","_context47","_x53","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref76","_callee48","processTransactions","idleTokensAddresses","_args48","_context48","mappedTx","_x54","_x55","filterEtherscanTxs","_ref77","_callee49","processTxs","_args49","_context49","_x56","_ref78","_callee50","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args50","_context50","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x57","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref79","_callee55","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args55","_context55","baseTokenConfig","baseTokenAddress","_ref80","_callee54","minedTxs","_context54","_ref81","_callee53","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context53","getCurveTokenPrice","_ref82","_callee51","_context51","_x62","_x63","baseTokensConfig","t2","_ref83","_callee52","_context52","_x64","_x65","_x60","_x61","_x59","_x58","_ref84","_callee61","txsToProcess","_args61","_context61","_ref85","_callee60","_context60","_ref86","_callee59","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context59","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref87","_callee56","_context56","_x70","_x71","_ref88","_callee57","_context57","_x72","_x73","oldContract","events","raw","_ref89","_callee58","_context58","_x74","_x75","decodeLog","_token","_x68","_x69","_x67","_x66","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref90","_callee62","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args62","_context62","availableNetworks","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x76","getBestTranche","_callee63","maxApy","trancheStrategyConfig","_args63","_context63","timetamp","splice","availableTranchesNetworks","availableTrancheInfo","tInfo","_ref92","_callee64","error_callback","config","_args64","_context64","post","catch","_x77","_ref93","_callee65","_args65","_context65","_x78","_ref94","_callee66","apiKeyIndex","apiKey","_args66","_context66","_x79","_ref95","_callee67","return_data","_args67","_context67","_x80","makeCachedPostRequest","_ref96","_callee68","_args68","_context68","_x81","code","errorCode","split","getGlobalConfigs","cleanStringify","object","copyWithoutCircularReferences","references","cleanObject","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee69","page","googlePageviewInfo","isOrigin","_args69","_context69","ga","_ref98","_callee71","googleEventsInfo","debugEnabled","originOk","_args71","_context71","analytics","google","addPostfixForTestnet","_ref99","_callee70","_context70","hitCallback","hitCallbackFail","_x83","_x84","_x82","createContract","_ref100","_callee72","_context72","_x85","_x86","_x87","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee75","activeOnly","whitelist","proposals","validProposals","_args75","_context75","_ref102","_callee74","checkedStrategies","_context74","end","author","snapshot","strategies","_ref103","_callee73","tokenContract","_context73","_x89","_x88","getAprsFromApi","_callee76","endpointInfo","aprs","_args76","_context76","_ref105","_callee77","forceStartTimestamp","frequency","order","filteredCachedData","_filteredData","apiInfo","filteredData","_args77","_context77","_x90","getTokenExchangeRate","_ref106","_callee78","exchangeRateParams","exchangeRate","_context78","_x91","_x92","getTokenDecimals","_ref107","_callee79","_context79","_x93","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee80","idleTokenConfig","feeDistributorConfig","_context80","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee81","contractPaused","_args81","_context81","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref110","_callee83","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context83","lastAllocationsPromise","_ref111","_callee82","lastAllocations","_context82","_x95","_x96","alloc","_x94","_ref112","_callee84","oldContractBalance","oldContractTokenDecimals","oldContractName","_context84","_x97","_x98","_ref113","_callee85","eventName","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args85","_context85","getBlockNumber","getContractPastEvents","callEvents","_x99","_x100","_ref114","_callee86","_args86","_context86","getPastEvents","_x101","_x102","estimateMethodGasUsage","_ref115","_callee87","methodParams","_contract$methods","functionCall","gasLimit","_ref116","_ref117","_args87","_context87","getGasPrice","estimateGas","_x103","_x104","_ref118","_callee88","userAddress","signedParameters","callback_receipt","_contract$methods2","_context88","on","once","confirmationNumber","receipt","_x105","_x106","_x107","_x108","_x109","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref119","_callee89","biconomyInfo","res","_context89","limits","apiId","headers","x-api-key","_x110","sendTxWithPermit","_ref120","_callee90","_contract$methods3","messageToSign","_this$getSignaturePar","_context90","encodeABI","personal","sign","_x111","_x112","_x113","_x114","_x115","_x116","buildBiconomyErc20ForwarderTx","_ref121","_callee91","permitType","callData","buildParams","_context91","txGas","erc20ForwarderClient","buildTx","_x117","_x118","_x119","_x120","_x121","_ref122","_callee93","_context93","_ref123","_callee92","_context92","_x123","_x124","_x122","sendBiconomyTxWithErc20Forwarder","_ref124","_callee94","req","metaInfo","txResponse","fetchReceiptIntervalId","_context94","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x125","_x126","_x127","_x128","sendBiconomyTxWithPersonalSign","_ref125","_callee95","_this$getSignaturePar2","_context95","getNonce","_x129","_x130","_x131","_x132","signPermitEIP2612","_ref126","_callee96","erc20Name","owner","spender","deadline","domain","permit","domainData","_context96","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x133","_x134","_x135","_x136","_x137","_x138","_x139","_x140","signPermit","_ref127","_callee97","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args97","_context97","net","getId","nonceMethod","round","pow","allowed","response","_x141","_x142","_x143","_ref128","_callee98","permitParams","methodAbi","useNonce","_args98","_context98","_jsonInterface","f","unshift","_x144","_x145","_x146","_x147","_x148","_x149","_x150","sendSignedTx","_ref129","_callee99","MetaTransaction","dataToSign","_context99","_x151","_x152","_x153","_x154","_x155","checkTokenApproved","_ref130","_callee100","contractAddr","_ref131","_ref132","allowance","_context100","getAllowance","gte","_x156","_x157","_x158","_ref133","_callee101","_context101","_x159","_x160","_x161","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee103","highestValue","_args103","_context103","lendRates","aprInfo","tokenAPR","_ref135","_callee102","_context102","_x162","_ref136","_callee104","_args104","_context104","_x163","_x164","calculateGaugeBoost","_ref137","_callee105","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args105","_context105","workingBalance","getTokenTotalSupply","workingSupply","_x165","_x166","availableGauges","getGaugeWeight","_ref138","_callee106","lastGaugeTimestamp","gaugeWeight","_context106","_x167","getGaugeAbsoluteWeight","_ref139","_callee107","_ref140","_ref141","totalWeight","_context107","_x168","getGaugeNextWeight","_ref142","_callee108","nextGaugeTimestamp","_context108","_x169","getGaugeRewardsTokens","_ref143","_callee109","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndex","rewardTokenAddress","_ref144","_ref145","rewardData","rewardTokenBalance","cdoConfig","_ref146","_ref147","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_args109","_context109","rate","maxRewards","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x170","_ref148","_callee111","_args111","_context111","_ref149","_callee110","tokenGlobalConfig","stakingRewardsContract","_context110","_x173","_x171","_x172","_ref150","_callee112","field","addGovTokens","_args112","_context112","loadTrancheField","_x174","_x175","_x176","_x177","_x178","_x179","_x180","_x181","_ref151","_callee113","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref152","_ref153","totalSupply","virtualPrice","_ref154","_ref155","gaugeBalance","lastPrice1","staked1","totalStaked","_ref156","_ref157","deposited1","lastPrice","_ref158","_ref159","redeemable1","staked2","_ref160","_ref161","earningsStart","trancheApy2","deposited3","earningsEnd","_ref162","_ref163","trancheFee","earningsCounter","feesEnd","feesStart","_ref164","_ref165","deposited4","redeemable3","_ref166","_ref167","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref168","_ref169","_ref170","_ref171","earningsPerc","secondsFromFirstTx","_ref172","_ref173","seniorPool","juniorPool","coverage","strategyApr","_ref174","_ref175","_ref176","_ref177","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args113","_context113","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x182","_x183","_x184","_x185","_x186","_x187","_x188","loadAssetField","_ref178","_callee114","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref179","_ref180","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref181","_ref182","amountLentCurve1","redeemableBalanceCurve","_ref183","_ref184","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref185","_ref186","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref187","_ref188","tokenPriceFirstDeposit","_ref189","_ref190","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref191","_ref192","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref193","_ref194","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref195","_ref196","amountLentCurve2","redeemableBalanceCurve1","_ref197","_ref198","redeemableBalance2","_args114","_context114","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x189","_x190","_x191","_x192","getIdleTokenSupply","_ref199","_callee115","idleTokenSupply","_args115","_context115","_x193","getIdleTokenPriceWithFee","_ref200","_callee116","_ref201","_ref202","fee","priceWFee","_args116","_context116","eq","_x194","_x195","_ref203","_callee117","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args117","_context117","_x196","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref204","_callee118","_ref205","_ref206","idleTokensTotalSupply","userShare","_context118","_x197","_x198","openWindow","open","getActiveCoverages","_callee120","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args120","_context120","coverages","_ref208","_callee119","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context119","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x199","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref209","_callee122","incidentsInfo","_ref210","_ref211","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context122","directProps","buyer","_ref212","_callee121","cover","coverId","claimSubmittedEvent","_ref213","_ref214","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref215","_ref216","_context121","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x201","_x200","getBatchedDepositExecutions","_ref217","_callee123","_context123","_x202","getBatchedDeposits","_callee125","filter_by_status","batchDepositConfig","batchedDeposits","_args125","_context125","_ref219","_callee124","currBatchIndex","batchIndex","_ref220","_ref221","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context124","_x203","getETHBalance","_ref222","_callee126","fixDecimals","_args126","_context126","_x204","_ref223","_callee127","_ref224","_ref225","_args127","_context127","ERC20","_x205","_x206","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref226","_callee128","_args128","_context128","_x207","_ref227","_callee129","_args129","_context129","_x208","_ref228","_callee130","_args130","_context130","_x209","_x210","getProtocolBalance","_ref229","_callee131","_context131","_x211","_x212","getAprs","_ref230","_callee132","_context132","addresses","_x213","genericIdleCall","_ref231","_callee133","callParams","_args133","_context133","_x214","_ref232","_callee134","_contract$methods4","_args134","_context134","_x215","_x216","_ref233","_callee136","_args136","_context136","_ref234","_callee135","_context135","_x218","_x219","_x217","getTxDecodedLogs","_ref235","_callee138","logAddr","decodeLogs","internalTransfers","_context138","_ref236","_callee137","_context137","_x224","_x225","_x220","_x221","_x222","_x223","blocksToSeconds","blocks","blocksPerSeconds","_callee139","_context139","_callee140","blockInfoToSave","_args140","_context140","getBlock","genericContractCallCachedTTLNoMulticall","_ref239","_callee141","_args141","_context141","_x226","_x227","_ref240","_callee142","useMultiCall","_args142","_context142","_x228","_x229","_ref241","_callee143","_args143","_context143","_x230","_x231","_ref242","_callee144","_args144","_context144","_x232","_x233","cachedContractCall","_ref243","_callee145","_args145","_context145","_x234","_x235","prepareMulticallData","strip0x","_ref244","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref245","_callee146","decodedParams","_args146","_context146","decodeParameters","returnFields","_x236","_ref246","_callee147","inputTypes","callHash","_args147","_context147","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x237","_x238","_ref247","_callee148","_contract$methods5","_args148","_context148","_x239","_x240","_ref248","_callee149","async","_args149","_context149","_x241","_x242","getUnlentBalance","_ref249","_callee150","unlentBalance","_context150","_x243","_ref250","_callee151","_args151","_context151","_x244","getLastAllocations","_ref251","_callee153","tokenAllocations","_context153","_ref252","_callee152","_context152","_x246","_x247","_x245","_ref253","_callee154","protocolsAprs","_ref254","_ref255","govTokensBalances","_args154","_context154","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","total","_x248","getPoolTokenPrice","_ref256","_callee155","protocolContract","_ref257","_ref258","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref259","_ref260","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_args155","_context155","_x249","getSushiswapPoolTokenPrice","_ref261","_callee156","_ref262","_ref263","_ref264","_ref265","_context156","getSushiswapConversionRate","_x250","getSushiswapConversionRate_old","_ref266","_callee157","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context157","_x251","_x252","getCustomProtocolConversionRate","_ref267","_callee158","useWETH","forceTokenConfig","invertTokens","routerMethod","underlyingTokenConfig","unires","_args158","_context158","addressForPrice","conversionRateForceToken","conversionRateDirectConversion","conversionRateInvertTokens","conversionRouterMethod","_x253","_x254","getQuickswapConversionRate","_ref268","_callee159","_args159","_context159","_x255","_x256","_ref269","_callee160","_args160","_context160","_x257","_x258","_ref270","_callee161","_args161","_context161","_x259","_x260","getCurveDepositedTokens","_ref271","_callee162","idleTokensBalances","remainingCurveTokens","_args162","_context162","_x261","getCurveUnevenTokenAmounts","_ref272","_callee163","amounts","max_burn_amount","unevenAmounts","_context163","getCurveDepositContract","_x262","_x263","_callee164","curveRatesInfo","_args164","_context164","_callee165","_context165","strategyTokens","getCurveAPYContract","_callee166","blocksForPrevTokenPrice","_ref276","_ref277","prevTokenPrice","blocksMultiplier","curveAPR","_context166","getCurveTokenSupply","_callee167","_context167","getCurvePoolContract","_callee168","_args168","_context168","_callee169","_args169","_context169","_ref281","_callee170","_ref282","_ref283","_context170","_x264","_callee171","depositContractInfo","_context171","getCurveZapContract","_callee172","zapContractInfo","_context172","_callee173","poolContractInfo","_context173","getCurveSwapContract","_callee174","migrationContractInfo","_context174","getCurveIdleTokensAmounts","_callee176","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args176","_context176","_ref289","_callee175","coinIndex","curveIdleTokens","_context175","migrationParams","_x265","getCurveTokensAmounts","_callee178","useCoinIndex","_args178","_context178","_ref291","_callee177","_ref292","_ref293","idleTokenPrice","totalTokenSupply","_context177","_x266","getCurveAmounts","_ref294","_callee180","_args180","_context180","_ref295","_callee179","_context179","_x269","_x267","_x268","getCurveTokenAmount","_ref296","_callee181","_args181","_context181","_x270","getCurveSlippage","_ref297","_callee182","uneven_amounts","depositContract","_ref298","_ref299","Sv","_args182","_context182","_x271","_x272","_ref300","_callee183","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref301","_ref302","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args183","_context183","IAaveIncentivesController","emissionPerSecond","_x273","_callee185","_args185","_context185","_ref304","_callee184","_ref305","_ref306","_context184","_x274","getWMaticApr","_ref307","_callee186","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args186","_context186","_x275","_x276","getStkAaveApr","_ref308","_callee187","aaveConversionRate","stkAaveAPR","stkAaveValue","_args187","_context187","_x277","_x278","getCompAPR","_ref309","_callee188","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args188","_context188","_x279","_x280","getCompSpeed","_ref310","_callee189","cTokenAddress","compSpeed","_context189","_x281","_ref311","_callee190","cTokenInfo","compoundAllocationPerc","_ref312","_ref313","cTokenTotalSupply","compoundPoolShare","_args190","_context190","_x282","_callee192","_args192","_context192","_ref315","_callee191","_ref316","_ref317","_context191","_x283","_callee194","_args194","_context194","_ref319","_callee193","_ref320","_ref321","compApr","_context193","_x284","getTokensCsv","_callee197","csv","_context197","prototype","sum","pv","cv","avg","_ref323","_callee196","_context196","_ref324","_callee195","rates","header","rows","aprAvg","scoreAvg","lastRow","_context195","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x286","_x285","_callee199","convertToken","_args199","_context199","_ref326","_callee198","compTokenBalance","_context198","_x287","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref327","_callee201","govTokensUserDistribution","_args201","_context201","_ref328","_callee200","_context200","_x289","_x288","getGovTokensDistributionSpeed","_ref329","_callee203","govTokensDistribution","_args203","_context203","_ref330","_callee202","govSpeed","_context202","_x291","_x290","getGovTokensAprs","_ref331","_callee205","govTokensAprs","_args205","_context205","_ref332","_callee204","_ref333","_ref334","_ref335","_ref336","cTokenConfig","_context204","aprTooltipMode","_x294","_x292","_x293","_callee207","_args207","_context207","_ref338","_callee206","govTokenBalance","fromTokenConfig","_context206","_x295","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee208","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args208","_context208","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref340","_callee210","govTokensAmounts","_context210","getGovTokensUserAmounts","_ref341","_callee209","govTokenIndex","govTokenAddress","_context209","getGovTokenAddessByIndex","_x298","_x299","_x296","_x297","_ref342","_callee211","_context211","_x300","_x301","_ref343","_callee212","_context212","_x302","_x303","_callee215","govTokenConfigForced","_args215","_context215","_ref345","_callee214","_context214","_ref346","_callee213","_context213","_x305","_x306","_x304","getTokenFees","_callee216","_args216","_context216","_callee217","_ref349","_ref350","feePercentage","gain","fees","_args217","_context217","_ref351","_callee218","_args218","_context218","_x307","getTotalTVL","_callee219","tokensTVL","_context219","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee223","_context223","_ref354","_callee222","_context222","_ref355","_callee221","oldTokenTVL","idleTokenName","_ref356","_ref357","oldTokenConfig","_ref361","_ref362","oldTokenPrice","oldTotalSupply","_context221","showAUM","_ref358","_callee220","_ref359","_ref360","govTokenConversionRate","govTokenBalanceConverted","_context220","_x310","oldProtocols","oldProtocol","protocolPos","_x309","_x308","getSubstackLatestFeed","_callee224","idleSubstackFeed","latestFeed","_context224","getTrancheAggregatedStats","_callee228","totalAUM","_args228","_context228","_ref365","_callee227","_context227","_ref366","_callee226","_context226","_ref367","_callee225","_ref368","_ref369","_context225","_x313","_x312","_x311","getAggregatedStats","_callee230","allNetworks","networkIds","callsFailed","tvls","_args230","_context230","_ref371","_callee229","_context229","_x314","getAggregatedStats_chain","_callee235","avgAPR","_args235","_context235","availableStrategiesNetworks","_ref373","_callee234","_context234","_ref374","_callee233","_context233","_ref375","_callee232","tokenAUM","_context232","_ref376","_callee231","_ref377","_ref378","_context231","_x318","_x317","_x316","_x315","getTokenApy","_ref379","_callee236","_context236","_x319","getTokensToMigrate","_callee239","_args239","_context239","_ref381","_callee238","_context238","_ref382","_callee237","_ref383","_context237","_x321","_x320","getProtocolsTokensBalances","_callee241","tokenBalances","minTokenBalance","protocolsTokens","_args241","_context241","_ref385","_callee240","_context240","_x322","getTokenConversionRateField","getTrancheTokenConversionRate","_ref386","_callee242","trancheTokenConfig","trancheTokenConversionRate","_args242","_context242","isPoolToken","conversionRateProtocolContract","_x323","_ref387","_callee243","_args243","_context243","_x324","_x325","_ref388","_callee244","_args244","_context244","_x326","_x327","_x328","getAvgAPYStats","_ref389","_callee245","apiResults","_args245","_context245","_x329","_x330","_ref390","_callee246","statsTokenConfig","ToTokenConfig","_args246","_context246","addressForPriceFrom","conversionRateUseWETH","_x331","_ref391","_callee247","count","_conversionRate","_args247","_context247","_x332","_x333","getTokenScore","_ref392","_callee248","_ref393","_ref394","tokenScore","_context248","protocolScore","getTokenScoreApi","_x334","_x335","_ref395","_callee249","scores","_context249","_x336","_x337","_ref396","_callee250","idleGovTokenShowAPR","idleAPR","_args250","_context250","_x338","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","defaultOpacity","hidden","clickable","rainbow","DashboardCardContext","createContext","DashboardCard","isClickable","isRainbow","active","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","_Title_Title__WEBPACK_IMPORTED_MODULE_5__","as","lineHeight","titleProps","description","Provider","Consumer","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","goBack","preventDefault","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","bg","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","TableRow","FieldComponent","fieldComponent","hasClickFunction","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","allowZeroValue","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","getPermitTransactionParams","getTransactionParams_async","eventValue","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","checkPermit","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","nextProps","nextState","stateChanged","contractsChanged","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","voteUserSlope","claimableRewards","oldPowerUsed","power","loadGauges","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","gaugeDistributionRatePerSecond","userBoostedShare","_this7","userDistributionRate","idleApy","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","_this8","votingWeight","depositedAmount","withdrawnAmount","_this9","votingPowerPercentage","gaugeAddress","_this10","setSelectedAction","setStakeAction","setClaimToken","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","Title","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","Faquestion","isShowingAnswer","isOpened","h4","question","answer","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","src_Faquestion_Faquestion","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","ModalCard","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","flexBasis","TrancheField","showSelectButton","selectTrancheType","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","allowAAWithdraw","allowBBWithdraw","modalAction","poolUtilizationRate","selectedTrancheOption","selectedStakeAction","penaltyFee","Pool","_referral","getReferralAddress","referralEnabled","trancheTokenToRedeem","checkModal","selectedActionChanged","selectedStakeActionChanged","modal","utilizationRate","isStake","isDeposit","isWithdraw","maxPoolUtilizationRateReached","maxUtilizationRate","withdrawEnabled","showReferral","modalEnabled","option","selectTranche","borderTop","ImageButton","unstakeWithBalance","unstake","contractApprovedCallback","messages","buyInstructions","PortfolioEquityTranches","transactionsList","walletProvider","subgraphEnabled","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","blocksTimestamps","conversionRateBlocksCalls","conversionRatesTimestamps","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","lastUpdate","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","availableTranchesChanged","param3","tranchesTvls","tvl","tranchesOrdering","loadQueryParams","then","defineProperty","depositedCdos","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","isDashboard","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","bestYieldDisabledMessage","aysShort","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","themeTogglerEnabled","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","QuickswapRouter","QuickswapV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","hex","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","enabledStatsNetworks","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","DQUICK","CXETHWETH","ALUSD3CRV","MUSD3CRV","PBTCCRV","MUSD","ANGLE","PNT","3EUR","STECRV","SPELL","CPOOL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","FEI","TRU","AGEUR","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","quickswap","convex","mstable","euler","wintermute","clearpool","truefi","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","secondsPerDay","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","polygonscan","REACT_APP_POLYGONSCAN_KEY","REACT_APP_POLYGONSCAN_KEY2","REACT_APP_POLYGONSCAN_KEY3","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","stETH","LiquidityGauge","multiRewards","steCRV","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","orderedTranches","protocolTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageDepositKey","disabledMessageRedeemKey","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","Web3Connectors","setNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","attempsTimeoutIds","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","maxCount","_args","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","h2","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","checkGnosisSafeNetwork","currentSafeNetworkId","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyEnabled","biconomyWeb3Provider","_args8","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args9","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","defaultNetworkID","defaultWeb3","_args22","getNetworkType","getNetworkId","currentNetworkChanged","_args24","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","ScrollToTop","pathname","useLocation","useEffect","currYear","getFullYear","governanceEnabled","columnWidth","footer","role","aria-label","PageNotFound","h1","Header_styles","src_Footer_Footer","IdleCDOPolygon","IdleStrategy","TrancheStakingRewards","IdleCDO","IdleCDOTrancheRewards","adaptiveYieldSplitEnabled","levUSDC","Clearpool","TruefiPool","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","node","Dashboard","lazy","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","web3Connectors","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","getConnectors","dist_default","web3Api","libraryName","dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","buttonState","ctaType","ctas","ButtonComponent","Button","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","titles","ctaPrimaryText","hover","secondary","dropdownBg","flashBg","cardBgActive","paused","disabledBg","exit","bg-bottom-right","bg-noise","titleType","HeadingComponent","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_10__","lineWidth","react__WEBPACK_IMPORTED_MODULE_13___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_20__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_21__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","trancheChanged","protocolChanged","fieldChanged","formattedValue","rimble_ui__WEBPACK_IMPORTED_MODULE_22__","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_17__","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_15__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_12___default","_isBigNumber","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_16__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_19__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_14__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_19__","earningsCurve","tooltipMode","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_20__"],"mappings":"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","file":"static/js/main.d7222616.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3],\n        justifyContent:'center'\n      },\n      this.props.cardProps\n    );\n\n    const textProps = {...this.props.textProps};\n    if (this.props.isActive){\n      textProps.color = 'primary';\n    }\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        backgroundColor={\"blue\"}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align || \"center\"}\n          mx={this.props.margin ? this.props.margin : 0}\n        >\n          {\n            this.props.iconBgColor && !this.props.useIconOnly ? (\n              <Flex\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                backgroundColor={this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem}\n              >\n                {\n                  this.props.image ? (\n                    <Image\n                      align={\"center\"}\n                      src={this.props.image}\n                      height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      {...this.props.imageProps}\n                    />\n                  ) : (\n                    <Icon\n                      align={\"center\"}\n                      name={this.props.icon}\n                      size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                      {...this.props.iconProps}\n                    />\n                  )\n                }\n              </Flex>\n            ) : this.props.image ? (\n              <Image\n                mr={1}\n                align={\"center\"}\n                src={this.props.image}\n                height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                {...this.props.imageProps}\n              />\n            ) : this.props.icon && (\n              <Icon\n                mr={1}\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                {...this.props.iconProps}\n              />\n            )\n          }\n          <Text\n            fontWeight={3}\n            fontSize={[1, 2]}\n            {...textProps}\n          >\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__AZvaE\",\"mobile\":\"TrancheWelcome_mobile__8mpVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__2_KWY\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__KcFts\",\"bgContainer\":\"PageNotFound_bgContainer__31oWs\",\"list\":\"PageNotFound_list__lpaEt\",\"textContainer\":\"PageNotFound_textContainer__IPqbe\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'primary'}\n             fontFamily={'titles'}\n             hoverColor={'primary'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  fontFamily={'titles'}\n                  hoverColor={'primary'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'primary' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      justifyContent:'center',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled,\n      contrastColor:'ctaPrimaryText'\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n        type={'primary'}\n        buttonProps={buttonProps}\n        handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'ctaPrimaryText'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      // if (props.menuIsOpen) {\n      //   cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      // }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"dropdownBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    // console.log(this.props.eventData,{\n    //   eventCategory: 'Transaction',\n    //   eventLabel: this.props.methodName,\n    //   eventAction: this.props.contractName,\n    //   ...this.props.eventData\n    // });\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName,\n        ...this.props.eventData\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.svg`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass GenericModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    if (!this.props.checkboxEnabled){\n      this.toggleDontShowAgain(true)\n    }\n    this.props.closeModal();\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage(this.props.id,'true');\n    } else {\n      this.functionsUtil.removeStoredItem(this.props.id);\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            icon={this.props.icon}\n            title={this.props.title}\n            iconHeight={this.props.iconHeight || '40px'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{\n                  __html: this.props.text\n                }}\n              />\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.props.checkboxEnabled && (\n                  <Checkbox\n                    mb={3}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                )\n              }\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                {this.props.buttonText}\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GenericModal;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  timeoutIds = [];\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    this.timeoutIds.forEach( timeoutId => window.clearTimeout(timeoutId) );\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          this.timeoutIds.push(window.setTimeout(() => {\n            this.initProgressBar();\n          },1000));\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__FSkvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__XFIHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__3gfAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__22U7L\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__XwnoZ\",\"empty\":\"Header_empty__sl23U\",\"select\":\"Header_select__3MUn8\",\"selectDark\":\"Header_selectDark__2UhPg\",\"input\":\"Header_input__33yby\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    // console.log('setProps',props.contracts);\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  initContract = async (contractName,address,abi) => {\n    const contractInfo = await this.props.initContract(contractName, address, abi);\n    const contractFound = this.getContractByName(contractName);\n    if (!contractFound && contractInfo){\n      this.props.contracts.push(contractInfo);\n    }\n    return contractInfo;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (protocolToken) => {\n        const tokenConfig = protocolConfig[protocolToken];\n        const token = tokenConfig.token;\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,18);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,18);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,18).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  cdo:tokenConfig.CDO.name,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,'trancheStakedBalance',trancheStakedBalance.toFixed(),'amountDeposited',amountDeposited.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheEarnings',trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig && rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getOnChainTokenConversionRate(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits,\n      trancheToken_received,\n      trancheToken_sent\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserTransactionsEvents',account,tokenConfig.token,trancheToken_transfers_in,trancheToken_transfers_out);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    if (trancheToken_received){\n      trancheToken_received.forEach( tx => {\n        tx.type = 'trancheReceived';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_received = [];\n    }\n\n    if (trancheToken_sent){\n      trancheToken_sent.forEach( tx => {\n        tx.type = 'trancheSent';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_sent = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const trancheTypes = trancheConfig_filter ? [trancheConfig_filter.tranche] : Object.keys(this.getGlobalConfig(['tranches']));\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n\n          const gaugeConfig = this.getTrancheGaugeConfig(tokenConfig.protocol,tokenConfig.token);\n\n          const trancheTokenAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n          const cdoRewardsContractAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].CDORewards.address.toLowerCase()) ).filter( addr => addr !== '0x0000000000000000000000000000000000000000' );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          const stakingContractAddresses = cdoRewardsContractAddresses;\n          if (gaugeConfig){\n            stakingContractAddresses.push(gaugeConfig.address.toLowerCase());\n          }\n\n          const isTrancheReceived = tx.from.toLowerCase() !== '0x0000000000000000000000000000000000000000' && !stakingContractAddresses.includes(tx.from.toLowerCase()) && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheSent = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() !== '0x0000000000000000000000000000000000000000' && !stakingContractAddresses.includes(tx.to.toLowerCase());\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          } else if (isTrancheReceived){\n            type = 'trancheReceived';\n          } else if (isTrancheSent){\n            type = 'trancheSent';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          // if (type){\n          //   console.log('tx',tokenConfig.token,tx.hash,tx.from,tx.to,stakingContractAddresses,type);\n          // }\n\n          return type;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress=null,contractAddress,toAddress,fromBlock=0,toBlock='latest',sort='asc',limit=null) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    let endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=${sort}`;\n    if (limit && parseInt(limit)>0){\n      endpoint = endpoint+`&limit=${limit}`;\n    }\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => ((!fromAddress || tx.from.toLowerCase() === fromAddress.toLowerCase()) && tx.to.toLowerCase() === toAddress.toLowerCase()));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  loadTrancheStrategyContract = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = strategyConfig.address || await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress){\n      await this.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      return idleStrategyAddress;\n    }\n    return false;\n  }\n  getTrancheLastHarvest = async (tokenConfig,trancheConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const harvestEnabled = strategyConfig.harvestEnabled === undefined ? true : strategyConfig.harvestEnabled;\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n\n    if (!harvestEnabled || (!autoFarming || !Object.keys(autoFarming).length)){\n      return null;\n    }\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.loadTrancheStrategyContract(tokenConfig);\n\n    if (idleStrategyAddress) {\n      let limit = null;\n      let startBlock = tokenConfig.blockNumber;\n      let latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n\n      if (!latestHarvestBlock || !parseInt(latestHarvestBlock)){\n        return null;\n      }\n\n      startBlock = latestHarvestBlock;\n      latestHarvestBlock++;\n\n      let transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, idleStrategyAddress, null, tokenConfig.address, idleStrategyAddress, startBlock, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length) {\n\n        if (limit){\n          transfers = transfers.slice(0,limit);\n        }\n\n        let timestamp = null;\n        const totalAmount = transfers.reduce( (amount,t) => {\n          if (!timestamp){\n            timestamp = t.timeStamp;\n          }\n          amount = amount.plus(this.BNify(t.returnValues.value));\n          return amount;\n        },this.BNify(0));\n\n        return {\n          timestamp,\n          amount:totalAmount,\n          blockNumber:latestHarvestBlock,\n          transactionHash:transfers[0].transactionHash\n        };\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      poolSupply,\n      conversionRate,\n    ] = await Promise.all([\n      this.convertTrancheTokenBalance(poolSupply,poolTokenConfig),\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n    ]);\n\n    // console.log('getGovTokenApr',govToken,govTokenConfig,poolTokenConfig.token,poolSupply.toFixed(),conversionRate.toFixed());\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let firstBlockInfo = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      // let firstBlockPoolSize = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getTokenConfig(token);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length >= 2) {\n          const prevHarvest = transfers[transfers.length - 2];\n          const latestHarvest = transfers[transfers.length - 1];\n          \n          const firstBlock = prevHarvest.blockNumber;\n          [\n            firstBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            // firstBlockPoolSize,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getOnChainTokenConversionRate(govTokenConfig),\n            // this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, firstBlock),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (firstBlockInfo && lastBlockInfo) {\n            lastBlockPoolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            let poolSize = lastBlockPoolSize;\n\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - firstBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            // totalAmount = transfers.reduce((total, t) => {\n            //   total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            //   return total;\n            // }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              prevHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n\n            // console.log(token, prevHarvest.hash, latestHarvest.hash, (conversionRate? conversionRate.toFixed():null), totalAmount.toFixed(),elapsedSeconds,tokensPerYear.toFixed(),convertedTokensPerYear.toFixed(),poolSize.toFixed(),tokenApr.toFixed());\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem','trancheReceived','trancheSent'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      // const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n      const [\n        blockInfo,\n        tokenConversionRate,\n        tranchePrice\n      ] = await Promise.all([\n        this.getBlockInfo(trancheTokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,trancheTokenTransferEvent.blockNumber),\n        this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address], {}, trancheTokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[trancheTokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tranchePrice,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n\n      const tranchePrice = this.fixTokenDecimals(blocksInfo[trancheTokenTransferEvent.blockNumber].tranchePrice, tokenConfig.decimals);\n\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n      const tokenAmount = tokenTransferEvent ? this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals) : trancheTokenAmount.times(tranchePrice);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed());\n\n      // const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[trancheTokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${trancheTokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        cdo: tokenConfig.CDO.name,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: trancheTokenTransferEvent.transactionHash,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n        blockNumber: trancheTokenTransferEvent.blockNumber,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[trancheTokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      // if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      if (['trancheDeposit','trancheReceived'].includes(trancheTokenTransferEvent.type)) {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      // } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      } else if (['trancheRedeem','trancheSent'].includes(trancheTokenTransferEvent.type)) {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        \n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = totalAmountDeposited.gt(0) ? avgBuyPrice.div(totalAmountDeposited) : this.BNify(0);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = this.props.maticPOSClient ? await this.props.maticPOSClient.isCheckPointed(polygonTx.hash) : false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included && this.props.maticPOSClient){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetworkId]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    // const currentNetwork = this.getRequiredNetwork();\n    const resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        txs = await this.filterEthereumTxs(results, allAvailableTokens);\n        \n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled || !subgraphConfig.availableNetworks.includes(requiredNetworkId)){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n    const networkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    if (!subgraphConfig.availableNetworks.includes(networkId)){\n      return null;\n    }\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n\n    let results = [];\n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n    if (!size){\n      return false;\n    }\n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    if (!results || !results.length){\n      return null;\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranchesNetworks[networkId]).forEach( protocol => {\n      Object.keys(this.props.availableTranchesNetworks[networkId][protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  cleanStringify = (object) => {\n    if (object && typeof object === 'object') {\n      object = copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n\n    function copyWithoutCircularReferences(references, object) {\n      var cleanObject = {};\n      Object.keys(object).forEach(function(key) {\n        var value = object[key];\n        if (value && typeof value === 'object') {\n          if (references.indexOf(value) < 0) {\n            references.push(value);\n            cleanObject[key] = copyWithoutCircularReferences(references, value);\n            references.pop();\n          } else {\n            cleanObject[key] = '###_Circular_###';\n          }\n        } else if (typeof value !== 'function') {\n          cleanObject[key] = value;\n        }\n      });\n      return cleanObject;\n    }\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,callEvents) => {\n      callEvents.forEach( e => {\n        if (e){\n          events.push(e);\n        }\n      });\n      // events = events.concat(callEvents);\n      return events;\n    },[]);\n  }\n\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    if (!permitConfig.nonceMethod || !baseContract.methods[permitConfig.nonceMethod]){\n      return false;\n    }\n\n    // console.log('signPermit',baseContractName,baseContract,baseContract.methods,permitConfig.nonceMethod);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = await baseContract.methods[permitConfig.nonceMethod](holder).call();\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    // console.log('checkTokenApproved', contractName, contractAddr, walletAddr, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    // const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}_${methodName}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTrancheStakedBalance (CACHED)',cachedDataKey,cachedData)\n\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return stakedBalance;\n        // return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim,\n      workingSupply:working_supply\n    };\n  }\n  getTrancheGaugeConfig = (protocol, token) => {\n    const availableGauges = this.getGlobalConfig(['tools','gauges','props','availableGauges'])\n    const gaugeToken = Object.keys(availableGauges).find( gaugeToken => availableGauges[gaugeToken].protocol.toLowerCase() === protocol.toLowerCase() && gaugeToken.toLowerCase() === token.toLowerCase() );\n    if (gaugeToken){\n      return availableGauges[gaugeToken];\n    }\n    return null;\n  }\n  getGaugeWeight = async (gaugeConfig) => {\n    const currTimestamp = parseInt(Date.now()/1000);\n    let lastGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    if (!lastGaugeTimestamp){\n      lastGaugeTimestamp = currTimestamp;\n    }\n\n    const params = [gaugeConfig.address];\n\n    if (lastGaugeTimestamp<currTimestamp){\n      params.push(lastGaugeTimestamp);\n    }\n\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',params);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeAbsoluteWeight = async (gaugeConfig) => {\n    let [\n      totalWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      this.genericContractCall('GaugeController','get_total_weight'),\n      this.genericContractCall('GaugeController','get_gauge_weight',[gaugeConfig.address])\n    ]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    totalWeight = this.fixTokenDecimals(totalWeight,19);\n\n    return this.normalizeTokenAmount(gaugeWeight.div(totalWeight),18);\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp]);\n\n    // console.log('getGaugeNextWeight',gaugeConfig.protocol,gaugeConfig.underlyingToken,gaugeConfig.address,blockInfo.timestamp,nextGaugeTimestamp,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN() || gaugeWeight.lte(0)){\n      gaugeWeight = await this.getGaugeAbsoluteWeight(gaugeConfig);\n    }\n\n    // if (gaugeWeight.isNaN()){\n    //   gaugeWeight = await this.getGaugeWeight(gaugeConfig);\n    // }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      for (let tokenIndex=0; tokenIndex<multiRewardsConfig.maxRewards; tokenIndex++){\n      // await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      };\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getTokenConfig(tokenConfig.token);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n      if (!methodAbi){\n        return;\n      }\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let paused = false;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = tokenConfig.multiCallDisabled === undefined ? true : tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n\n    const tokenName = this.getTokenConfig(tokenConfig.token).label || this.capitalize(tokenConfig.token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = gaugeConfig || (stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false);\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    await this.loadTrancheStrategyContract(tokenConfig);\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = '$ '+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n\n      case 'seniorPoolConvertedNoLabel':\n        output = await this.loadTrancheField('poolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolConvertedNoLabel':\n        output = await this.loadTrancheField('poolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.fixTokenDecimals(output, 5);\n        }\n\n        if (this.BNify(output).isNaN()) {\n          output = this.BNify(0);\n        }\n\n        if (formatValue){\n          output = output.times(100)+'%';\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            gaugeBalance,\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals, trancheConfig.functions.stakedBalance)\n          ]);\n\n          let totalStaked = this.BNify(0);\n          if (staked1){\n            totalStaked = totalStaked.plus(staked1);\n          }\n          if (gaugeBalance){\n            totalStaked = totalStaked.plus(gaugeBalance);\n          }\n\n          if (!totalStaked.isNaN() && lastPrice1) {\n            output = this.BNify(totalStaked).times(lastPrice1);\n            // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'seniorCoverage':\n        const [\n          seniorPool,\n          juniorPool\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false),\n        ]);\n\n        output = '0%';\n        if (this.BNify(seniorPool).gt(0) && this.BNify(juniorPool).gt(0)){\n          // output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          // output = '$'+this.abbreviateNumber(juniorPool, decimals, maxPrecision, minPrecision)\n          let coverage = juniorPool.div(seniorPool);\n          \n          if (this.BNify(coverage).isNaN()){\n            coverage = this.BNify(0);\n          }\n\n          if (formatValue){\n            output = '$1 is covered by $'+this.abbreviateNumber(coverage, decimals, maxPrecision, minPrecision)\n          } else {\n            output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          }\n        }\n      break;\n      case 'strategyApr':\n        output = await this.genericContractCallCached(tokenConfig.Strategy.name,'getApr');\n        if (!output){\n          output = 0;\n        }\n        output = this.fixTokenDecimals(output,18);\n        if (formatValue){\n          output = output.toFixed(decimals) + '%';\n        }\n      break;\n      case 'apyBoost':\n        let strategyApr = 0;\n        [\n          trancheApy,\n          strategyApr\n        ] =  await Promise.all([\n          this.loadTrancheFieldRaw('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('strategyApr', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n        ]);\n\n        // console.log('trancheApy' ,this.BNify(trancheApy).toString(), 'strategyApr', this.BNify(strategyApr).toString());\n\n        output = this.BNify(strategyApr).gt(0) ? this.BNify(trancheApy).div(this.BNify(strategyApr)) : this.BNify(0);\n\n        if (formatValue){\n          output = `${output.toFixed(1)}x`;// (${strategyApr.toFixed(2)}%)`;\n        }\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toFixed(0)+\"/\"+(100-output).toFixed(0);\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusIcon':\n        paused = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'paused');\n        if (paused){\n          output = 'paused';\n        }\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        paused = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'paused');\n        if (paused){\n          output = 'paused';\n        } else {\n          output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'limit', 3600);\n          if (output){\n            output = this.fixTokenDecimals(output, tokenConfig.decimals);\n\n            if (field === 'trancheLimit'){\n              if (output.gt(0)){\n                if (formatValue) {\n                  output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n                }\n              } else {\n                output = this.BNify(0);\n                if (formatValue){\n                  output = 'None';\n                }\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : null));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getTokenConfig(govToken);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getTokenConfig(contractName);\n      if (tokenConfig){\n        await this.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getPoolTokenPrice = async (contractName, protocolContract=null) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getOnChainTokenConversionRate(token0_config, 'latest', protocolContract),\n        this.getOnChainTokenConversionRate(token1_config, 'latest', protocolContract)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log('getPoolTokenPrice',contractName,protocolContract,token0_address,token1_address,token0_price.toFixed(),token1_price.toFixed(),poolTokenPrice.toFixed());\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate_old = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  getCustomProtocolConversionRate = async (tokenConfigFrom, tokenConfigDest, protocolContract=null, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = {...tokenConfigDest};\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Force token from - in case DAI doesn't exist\n    if (tokenConfigDest.conversionRateForceToken){\n      const forceTokenConfig = this.getTokenConfig(tokenConfigDest.conversionRateForceToken);\n      if (forceTokenConfig){\n        tokenConfigFrom = forceTokenConfig;\n      }\n    }\n\n    // Check if has to convert without passing through WETH\n    if (typeof tokenConfigDest.conversionRateDirectConversion !== 'undefined'){\n      useWETH = useWETH && !tokenConfigDest.conversionRateDirectConversion;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `customProtocolConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const invertTokens = !!tokenConfigDest.conversionRateInvertTokens;\n      const routerMethod = tokenConfigDest.conversionRouterMethod || 'getAmountsIn';\n\n      const path = [];\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigDest.address : tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigFrom.address : tokenConfigDest.address);\n\n      let decimals = tokenConfigDest.decimals || 18;\n      \n      // Use decimals of underlying token if set\n      if (routerMethod === 'getAmountsOut'){\n        if (tokenConfigDest.underlying){\n          const underlyingTokenConfig = this.getTokenConfig(tokenConfigDest.underlying);\n          if (underlyingTokenConfig){\n            decimals = underlyingTokenConfig.decimals;\n          }\n        }\n      }\n      const one = this.normalizeTokenDecimals(decimals);\n      const unires = await this.genericContractCallNoMulticall(protocolContract, routerMethod, [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getCustomProtocolConversionRate',protocolContract, routerMethod, [one.toFixed(), path], unires);\n\n      if (unires) {\n        let price = this.BNify(unires[0]).div(one);\n        if (routerMethod === 'getAmountsOut'){\n          price = this.BNify(unires[2]).div(this.normalizeTokenDecimals(18));\n        }\n        if (invertTokens){\n          price = this.BNify(1).div(price);\n        }\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      // console.log('getUniswapConversionRate - ERROR',tokenConfigFrom,tokenConfigDest);\n      return null;\n    }\n  }\n\n  getQuickswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'QuickswapRouter', blockNumber, useWETH);\n  }\n\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'SushiswapRouter', blockNumber, useWETH);\n  }\n\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'UniswapRouter', blockNumber, useWETH);\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (/*tokenConfig.enabled && */tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getTokenConfig(convertToken);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let callsFailed = false;\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    // Add 10s timeout to request\n    // config.timeout = 10000;\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // callsFailed = true;\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (callsFailed || !totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalAUM)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalAUM));\n        // console.log('getAggregatedStats',tvls);\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    // const requiredNetworkId = parseInt(this.props.network.required.id);\n\n    // console.log('getAggregatedStats_chain',this.props.availableStrategiesNetworks);\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n\n      // console.log('START network LOOP - ',networkId);\n\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n\n        // console.log('START strategy LOOP - ',networkId,strategy);\n\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n          // const props = {...this.props};\n          // props.network.required.id = networkId;\n          // this.setProps(props);\n\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n            // console.log('START',networkId,strategy,token,tokenConfig.idle.token+'V4',tokenAUM.toFixed(),totalAUM.toFixed());\n          }\n\n          // Add Gov Tokens\n          if (parseInt(networkId) === 1) {\n            const govTokens = this.getTokenGovTokens(tokenConfig);\n            if (govTokens) {\n              await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(networkId)) )), async (govToken) => {\n                const govTokenConfig = govTokens[govToken];\n                const [\n                  tokenBalance,\n                  tokenConversionRate\n                ] = await Promise.all([\n                  this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                  this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n                ]);\n\n                if (tokenBalance && tokenConversionRate) {\n                  const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                  if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                    totalAUM = totalAUM.plus(tokenBalanceConverted);\n                  }\n                }\n              });\n            }\n          }\n\n          // console.log('END',networkId,strategy,token,tokenConfig.idle.token+'V4',totalAUM.toFixed());\n\n          // Get old token allocation\n          /*\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n          */\n        });\n        // console.log('END strategy LOOP - ',networkId,strategy);\n      });\n      // console.log('END network LOOP - ',networkId);\n    });\n\n    // console.log('getAggregatedStats_chain',totalAUM.toFixed());\n    // const props = {...this.props};\n    // props.network.required.id = requiredNetworkId;\n    // this.setProps(props);\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  getTrancheTokenConversionRate = async (trancheTokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    let trancheTokenConversionRate = this.BNify(1);\n\n    // Get pool token price\n    const tokenConfig = this.getTokenConfig(trancheTokenConfig.token);\n    if (!!tokenConfig.isPoolToken){\n      // Get custom protocol for conversion rate\n      const protocolContract = tokenConfig.conversionRateProtocolContract;\n      trancheTokenConversionRate = await this.getPoolTokenPrice(trancheTokenConfig.token, protocolContract);\n    // Convert underlying token\n    } else {\n      const conversionRateField = this.getTokenConversionRateField(trancheTokenConfig.token);\n      if (conversionRateField) {\n        trancheTokenConversionRate = await this.getOnChainTokenConversionRate(trancheTokenConfig,blockNumber);\n      }\n    }\n\n    if (!trancheTokenConversionRate || this.BNify(trancheTokenConversionRate).isNaN()){\n      trancheTokenConversionRate = this.BNify(1);\n    }\n\n    return trancheTokenConversionRate;\n  }\n  convertTrancheTokenBalance = async (tokenBalance, trancheTokenConfig, blockNumber='latest') => {\n    const trancheTokenConversionRate = await this.getTrancheTokenConversionRate(trancheTokenConfig, blockNumber);\n    return tokenBalance = this.BNify(tokenBalance).times(trancheTokenConversionRate);\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getOnChainTokenConversionRate = async (tokenConfig, blockNumber='latest', protocolContract=null) => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getTokenConfig(tokenConfig.token) : null;\n\n    let useWETH = true;\n\n    if (statsTokenConfig){\n      // Replace from token address\n      if (statsTokenConfig.addressForPriceFrom){\n        DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n      }\n\n      // Set custom protocol (uniswap, sushiswap, quickswap)\n      if (!protocolContract && statsTokenConfig.conversionRateProtocolContract){\n        protocolContract = statsTokenConfig.conversionRateProtocolContract;\n      }\n\n      // Override useWETH based on token config\n      if (typeof statsTokenConfig.conversionRateUseWETH !== 'undefined'){\n        useWETH = statsTokenConfig.conversionRateUseWETH;\n      } else {\n        // Don't use WETH in the path\n        useWETH = !statsTokenConfig.addressForPriceFrom;\n      }\n    }\n\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    let conversionRate = null;\n    const currentNetworkId = this.getRequiredNetworkId();\n    if (protocolContract){\n      conversionRate = await this.getCustomProtocolConversionRate(DAITokenConfig, ToTokenConfig, protocolContract, blockNumber, useWETH);\n    } else {\n      conversionRate = currentNetworkId === 1 ? await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH) : await this.getSushiswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    }\n\n    // console.log('getOnChainTokenConversionRate',currentNetworkId,protocolContract,ToTokenConfig.address,blockNumber, useWETH, conversionRate);\n\n    if (this.BNify(conversionRate).isNaN()) {\n      conversionRate = this.BNify(1);\n    }\n\n    return conversionRate\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__3Ly5d\",\"hidden\":\"DashboardCard_hidden__1_j_O\",\"clickable\":\"DashboardCard_clickable__3ibwM\",\"rainbow\":\"DashboardCard_rainbow__25Ce5\",\"disabled\":\"DashboardCard_disabled__g_nwH\"};","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Card, Tooltip } from \"rimble-ui\";\n\nconst DashboardCardContext = React.createContext();\n\nclass DashboardCard extends Component {\n\n  static Consumer = DashboardCardContext.Consumer;\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isClickable = typeof this.props.handleClick === 'function';\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border:0,\n      display:'flex',\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      flexDirection:'column',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (!this.props.cardProps || !this.props.cardProps.backgroundColor){\n      if (isInteractive && this.state.mouseOver) {\n        cardProps.backgroundColor = 'cardBgHover';\n      }\n      if (isActive){\n        cardProps.backgroundColor = 'cardBgActive';\n      }\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isClickable ? styles.clickable : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    // const childrenWithProps = React.Children.map(this.props.children, child => {\n    //   if (React.isValidElement(child)) {\n    //     return React.cloneElement(child, { mouseOver:this.state.mouseOver });\n    //   }\n    //   return child;\n    // });\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {/*{this.props.children}*/}\n        <DashboardCardContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const hasClickFunction = typeof this.props.handleClick === 'function';\n    const isInteractive = hasClickFunction || !!this.props.isInteractive;\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={hasClickFunction ? e => this.props.handleClick(this.props) : null}\n      >\n        <DashboardCard.Consumer>\n          {({\n            mouseOver\n          }) => {\n            return (\n              <Flex\n                flexDirection={'row'}\n                id={this.props.rowId}\n              >\n                {\n                  this.props.cols.map((colInfo,colIndex) => {\n                    const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n                    if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                      return null;\n                    }\n                    return (\n                      <Flex\n                        key={`col-${colIndex}`}\n                        {...colInfo.props}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          {...colInfo.parentProps}\n                        >\n                          {\n                            colInfo.fields.map((fieldInfo,fieldIndex) => {\n                              if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                                return null;\n                              }\n                              const CustomComponent = fieldInfo.fieldComponent;\n\n                              let fieldProps = fieldInfo.props;\n\n                              // Merge with funcProps\n                              if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                                fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                              }\n\n                              return (\n                                <Flex\n                                  height={'100%'}\n                                  flexDirection={'column'}\n                                  alignItems={'flex-start'}\n                                  justifyContent={'center'}\n                                  {...fieldInfo.parentProps}\n                                  style={fieldInfo.style || {\n                                    overflow:'hidden'\n                                  }}\n                                  width={colInfo.fields.length>1 ? 'auto' : 1}\n                                  id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                  key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                >\n                                  {\n                                    CustomComponent ? (\n                                      <CustomComponent\n                                        {...this.props}\n                                        {...fieldProps}\n                                        mouseOver={mouseOver}\n                                      />\n                                    ) : (\n                                      <FieldComponent\n                                        {...this.props}\n                                        mouseOver={mouseOver}\n                                        fieldInfo={fieldInfo}\n                                        colProps={colInfo.props}\n                                        parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                      />\n                                    )\n                                  }\n                                </Flex>\n                              );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    )\n                  })\n                }\n              </Flex>\n            );\n          }}\n          </DashboardCard.Consumer>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'primary' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        handleClick={this.props.handleClick}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    const allowZeroValue = !!this.props.allowZeroValue;\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || (allowZeroValue ? amount.lt(0) : amount.lte(0)) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Approve',\n          eventLabel: tx ? tx.status : null,\n          eventAction: this.props.tokenConfig.token\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log(this.props.eventData,{\n      //   eventCategory: methodName,\n      //   eventValue: inputValue.toFixed(),\n      //   eventAction: this.props.tokenConfig.token,\n      //   ...this.props.eventData\n      // });\n\n      const callback = (tx,error) => {\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        // Send Google Analytics event\n        if (tx){\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: methodName,\n            eventValue: inputValue.toFixed(),\n            eventAction: this.props.tokenConfig.token,\n            ...this.props.eventData\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n        }\n\n        this.setState({\n          txSucceeded,\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n\n        if (txSucceeded){\n          // Reset input\n          this.changeInputValue({\n            target:{\n              value:0\n            }\n          },false);\n          this.setState({\n            showPermitBox:false\n          });\n          // Call upper component callback\n          if (typeof this.props.callback === 'function'){\n            this.props.callback(tx,_amount,params);\n          }\n        }\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    let contractApproved = false;\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      contractApproved = true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      contractApproved = true;\n    }\n      \n    if (!contractApproved){\n      contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    }\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        border={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              handleClick={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import Title from '../Title/Title';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    eventData:{},\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    allowZeroValue:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || accountChanged || contractsChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n      // const protocolConfig = this.functionsUtil.getGlobalConfig(['stats','protocols',gaugeConfig.protocol]);\n\n      const tokenConfig = {};\n      tokenConfig.token = gaugeConfig.underlyingToken;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote,\n      voteUserSlope,\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address]),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_slopes',[this.props.account,gaugeConfig.address])\n    ]);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed);\n    let oldPowerUsed = this.functionsUtil.BNify(voteUserSlope.power);\n    const availableVotingPower = this.functionsUtil.BNify(10000).minus(votingPowerUsed).plus(oldPowerUsed).div(10000);\n\n    votingPowerUsed = votingPowerUsed.div(10000);\n    oldPowerUsed = oldPowerUsed.div(10000);\n\n    // console.log('availableVotingPower',votingPowerUsed.toFixed(),oldPowerUsed.toFixed(),availableVotingPower);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      availableVotingPower,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let eventData = {\n      eventAction:trancheTokenConfig.token\n    };\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        // const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.availableVotingPower);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Gauge_Vote';\n\n        // Unlock total voting balance if nextUnlockTime reached\n        // if (canVote && this.state.votingPowerUsed.gte(1)){\n        //   balanceProp = this.state.veTokenBalance.times(this.state.availableVotingPower);\n        // }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Deposit';\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Claim';\n\n            switch (this.state.claimToken){\n              case 'additional':\n                eventData.eventLabel = (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? Object.keys(this.state.claimableRewardsTokens).join('_') : 'multi_rewards';\n              break;\n              default:\n              case 'default':\n                eventData.eventLabel = this.props.toolProps.veToken.rewardToken;\n              break;\n            }\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Redeem';\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('eventData',eventData);\n\n    this.setState({\n      canVote,\n      eventData,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    const internal_view = this.functionsUtil.getQueryStringParameterByName('internal_view');\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          trancheTokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall(trancheConfig.CDO.name, 'virtualPrice', [trancheConfig.AA.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        trancheTokenPrice = this.functionsUtil.fixTokenDecimals(trancheTokenPrice,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        // Calculate IDLE apr for internal view\n        const gaugeDistributionRatePerSecond = gaugeDistributionRate.div(this.functionsUtil.getGlobalConfig(['network','secondsPerDay']));\n        const gaugeUnderlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeToken);\n        const gaugeTotalSupplyUnderlying = gaugeTotalSupply.times(trancheTokenPrice);\n        const idleApr = internal_view ? await this.functionsUtil.getGovTokenApr(veTokenConfig.rewardToken,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,gaugeDistributionRatePerSecond) : null;\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n        } else {\n          stakedBalance = '-';\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(3)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (${userBoostedDistribution.toFixed(3)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (${userDistributionRate.toFixed(3)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            let text = `${gaugeDistributionRate.toFixed(3)} ${token}/day`;\n            if (idleApr){\n              let idleApy = idleApr.apy.toFixed(2);\n              if (parseFloat(idleApy)>9999){\n                idleApy = '>9999';\n              }\n              text += ` (${idleApy}% APY)`;\n            }\n            return text;\n          } else {\n            const tokenApy = rewardsTokens[token].apy;\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(3)} ${token}/day (${tokenApy.toFixed(2)}% APY)`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let allowZeroValue = false;\n    let balanceSelectorInfo = {...this.state.balanceSelectorInfo};\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        allowZeroValue = true;\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        } else {\n          infoBox = {\n            icon:'Info',\n            text:`You are about to reset your voting power for this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      allowZeroValue,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'primary'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                          iconBgColor={this.state.stakeAction === 'deposit' ? '#ffffff' : '#ced6ff'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                          iconBgColor={this.state.stakeAction === 'claim' ? '#ffffff' : '#ffd979'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                          iconBgColor={this.state.stakeAction === 'withdraw' ? '#ffffff' : '#ceeff6'}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : this.state.selectedAction === 'vote' && this.functionsUtil.BNify(this.state.availableVotingPower).lte(0) ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'Info'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You already allocated 100% of your voting power, reduce the allocation from one of the gagues you voted for or stake more ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:3,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`stake`)}\n                      >\n                        Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                      </RoundButton>\n                    </IconBox>\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      allowZeroValue={this.state.allowZeroValue}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                eventData={this.state.eventData}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                eventData={this.state.eventData}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                isInteractive={true}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.11]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.07],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.19],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    // const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    // const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          /*\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n          */\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[3,4]}\n            >\n              {trancheDetails.name}\n            </Title>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    minPrecision:2,\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                text={'APY'}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'APY Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  },\n                  name:'trancheAPRRatio'\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                {\n                  this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                }\n              </Text>\n              <Flex\n                mt={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    props:{\n                      decimals:2,\n                      minPrecision:2,\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    },\n                    name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <RoundButton\n                  type={'primary'}\n                  buttonProps={{\n                    mt:3,\n                    icon:trancheDetails.icon,\n                    contrastColor:'ctaPrimaryText',\n                  }}\n                  handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </RoundButton>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericModal from '../utilities/components/GenericModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    eventData:{},\n    infoText:null,\n    modalApy:null,\n    trancheFee:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    lastHarvest:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    contractPaused:false,\n    buttonDisabled:false,\n    selectedTranche:null,\n    allowAAWithdraw:false,\n    allowBBWithdraw:false,\n    availableTranches:null,\n    modalAction:'deposited',\n    approveDescription:null,\n    gaugeStakedBalance:null,\n    selectedAction:'deposit',\n    poolUtilizationRate:null,\n    balanceSelectorInfo:null,\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.checkModal();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  checkModal(){\n    const modalEnabled = this.props.tokenConfig.modal && this.props.tokenConfig.modal.enabled;\n    if (modalEnabled){\n      const modalAlreadyOpened = this.functionsUtil.getStoredItem(this.props.tokenConfig.modal.id);\n      if (!modalAlreadyOpened){\n        this.setState({\n          activeModal:this.props.tokenConfig.modal.id\n        });\n      }\n    }\n  }\n\n  async loadData(){\n\n    // Init Pool contract\n    if (this.props.tokenConfig.Pool){\n      await this.functionsUtil.initContract(this.props.tokenConfig.Pool.name, this.props.tokenConfig.Pool.address, this.props.tokenConfig.Pool.abi);\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      contractPaused,\n      lastHarvest,\n      allowAAWithdraw,\n      allowBBWithdraw,\n      gaugeStakedBalance,\n      poolUtilizationRate,\n      stakedBalance,\n      trancheFee,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'paused'),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'allowAAWithdraw'),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'allowBBWithdraw'),\n      this.props.gaugeConfig ? this.functionsUtil.getTokenBalance(this.props.gaugeConfig.name,this.props.account) : null,\n      this.props.trancheConfig.functions.utilizationRate ? this.functionsUtil.genericContractCallCached(this.props.tokenConfig.Pool.name, this.props.trancheConfig.functions.utilizationRate) : null,\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheField('trancheFee',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    // console.log('lastHarvest',lastHarvest);\n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n    // console.log('utilizationRate', this.props.trancheConfig.functions.utilizationRate, poolUtilizationRate);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      trancheFee,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      contractPaused,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      allowAAWithdraw,\n      allowBBWithdraw,\n      availableTranches,\n      gaugeStakedBalance,\n      poolUtilizationRate,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData = async () => {\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n    let balanceSelectorInfo = null;\n    let eventData = {\n      eventAction:this.props.trancheConfig.token\n    };\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Deposit';\n\n        if (this.state.trancheFee){\n          balanceSelectorInfo = {\n            text:`Performance fee: ${this.state.trancheFee}`,\n            tooltip:this.functionsUtil.getGlobalConfig(['messages', 'performanceFee'])\n          }\n        }\n        \n        if (this.props.gaugeConfig && this.props.gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your tranche tokens (${this.props.gaugeConfig.trancheToken.token}) in the Liquidity Gauge and get additional rewards.`;\n        }\n\n        // Disabled info text for disabled tranche\n        if (!!this.props.tokenConfig.disabled){\n          infoText = null;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n\n        // Set data for ga custom event\n        eventData.eventCategory = this.functionsUtil.capitalize(this.state.selectedStakeAction);\n\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set or the tranche is disabled\n            if (this.props.gaugeConfig || !this.state.stakeEnabled || !this.props.tokenConfig.enabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Redeem';\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        } else {\n          // Overwrite default action message\n          if (this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0)){\n            infoText = `To withdraw your ${this.props.selectedToken} make sure to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    this.setState({\n      infoBox,\n      infoText,\n      eventData,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    })\n  }\n\n  changeInputCallback = async (inputValue) => {\n\n    // Calculate exit fee for TrueFi - USDC\n    if (this.state.selectedAction === 'withdraw' && this.props.trancheConfig.functions.penaltyFee && this.props.tokenConfig.Pool && this.functionsUtil.BNify(inputValue).gt(0)){\n      const amount = this.functionsUtil.normalizeTokenAmount(inputValue, this.props.tokenConfig.decimals);\n      let penaltyFee = await this.functionsUtil.genericContractCall(this.props.tokenConfig.Pool.name, this.props.trancheConfig.functions.penaltyFee, [amount])\n\n      if (penaltyFee){\n        penaltyFee = this.functionsUtil.BNify(10000).minus(penaltyFee).div(100)\n        const balanceSelectorInfo = {\n          text:`Penalty fee: <span style=\"color:${this.props.theme.colors.alert}\">${penaltyFee.toFixed(2)}%</span>`\n        }\n\n        this.setState({\n          balanceSelectorInfo\n        });\n      }\n    }\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams = (amount,selectedPercentage) => {\n    let methodName = null;\n    let methodParams = null;\n    const _referral = this.getReferralAddress();\n    const referralEnabled = this.props.tokenConfig.referralEnabled;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'deposit' && _referral && referralEnabled){\n        methodParams = [amount,_referral];\n      } else if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice, this.props.tokenConfig.decimals));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n    const isDisabled = !!this.props.tokenConfig.disabled;\n\n    const maxPoolUtilizationRateReached = this.props.tokenConfig.maxUtilizationRate && !this.functionsUtil.BNify(this.state.poolUtilizationRate).isNaN() && this.functionsUtil.fixTokenDecimals(this.state.poolUtilizationRate, 18).gte(this.props.tokenConfig.maxUtilizationRate);\n\n    const withdrawEnabled = ((this.props.trancheConfig.tranche === 'AA' && this.state.allowAAWithdraw) || (this.props.trancheConfig.tranche === 'BB' && this.state.allowBBWithdraw));\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const _referral = this.getReferralAddress();\n    const showReferral = !this.state.contractPaused && this.props.tokenConfig.referralEnabled && this.state.userHasAvailableFunds && _referral && isDeposit;\n\n    const modalEnabled = this.props.tokenConfig.modal && this.props.tokenConfig.modal.enabled;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              minPrecision:2,\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:'trancheAPRRatio'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        {\n                          this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                        }\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              decimals:2,\n                              minPrecision:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    (this.props.tokenConfig.description || this.state.lastHarvest) && (\n                      <Flex\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        {\n                          this.props.tokenConfig.description && (\n                            <Flex\n                              pt={2}\n                              width={1}\n                              flexDirection={'column'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={[1,2]}\n                                color={'primary'}\n                                fontWeight={[2,3]}\n                              >\n                                Strategy Description\n                              </Text>\n                              <Flex\n                                mt={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                  textAlign={'justify'}\n                                  dangerouslySetInnerHTML={{__html:this.props.tokenConfig.description}}\n                                >\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              mt={this.props.tokenConfig.description ? 2 : 0}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                /*\n                this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0) && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To withdraw your ${this.props.selectedToken} you need to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`}\n                  />\n                ) :*/\n                /*\n                !this.props.tokenConfig.adaptiveYieldSplitEnabled && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To improve the capital efficiency of tranches, the apy ratio will be updated to the new Adaptive Yield Split on Wed July 20th. No action required. Read more in the <a href=\"https://gov.idle.finance/t/adaptive-yield-split-implementation-for-existing-pyts/1019\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">Forum Proposal</a>.`}\n                  />\n                )\n                */\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0,\n                      disabled:!this.state.stakingEnabled && !this.props.gaugeConfig\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/stake.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '45px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && !this.state.contractPaused && !maxPoolUtilizationRateReached && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'primary'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              {\n                showReferral && (\n                  <IconBox\n                    cardProps={{\n                      py: 3,\n                      px: 2,\n                      mt: 3,\n                      width:1,\n                    }}\n                    icon={'Share'}\n                    isActive={false}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'cellText'\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You are depositing with the following referral address:\n                      </Text>\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        fontWeight={500}\n                        textAlign={'center'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      >\n                        {_referral}\n                      </Text>\n                    </Flex>\n                  </IconBox>\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  this.state.contractPaused && (this.state.selectedAction !== 'withdraw' || !withdrawEnabled) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={`Deposits${!withdrawEnabled ? '/Withdraws' : '' } for this tranche are temporarily suspended due to Smart-Contract maintenance.`}\n                    />\n                  ) : maxPoolUtilizationRateReached ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={`This pool has reached the maximum utilization rate (${(this.props.tokenConfig.maxUtilizationRate*100).toFixed(0)}%), therefore ${this.state.selectedAction}s are temporarily unavailable.`}\n                    />\n                  ) : isDisabled && (isDeposit || (isStake && this.state.selectedStakeAction === 'stake')) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={`Deposits have been disabled for this tranche, please redeem your funds.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={ e => this.setSelectedAction('withdraw') }\n                      >\n                        Redeem\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.props.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      {\n                        this.state.stakedBalance.gt(0) ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MonetizationOn'}\n                            />\n                            <Text\n                              mt={1}\n                              mb={3}\n                              fontSize={[2,3]}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                            </Text>\n                            <ExecuteTransaction\n                              params={[]}\n                              {...this.props}\n                              Component={RoundButton}\n                              parentProps={{\n                                width:1,\n                                alignItems:'center',\n                                justifyContent:'center'\n                              }}\n                              componentProps={{\n                                value:'Unstake',\n                                buttonProps:{\n                                  size:'medium',\n                                  width:[1,1/3],\n                                }\n                              }}\n                              action={'Unstake'}\n                              eventData={this.state.eventData}\n                              contractName={this.state.contractInfo.name}\n                              callback={this.transactionSucceeded.bind(this)}\n                              methodName={this.props.trancheConfig.functions.unstake}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MoneyOff'}\n                            />\n                            <Text\n                              mt={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any <strong>{this.state.tokenConfig.label}</strong> to unstake.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`+(this.props.gaugeConfig ? `<br />Stake your tranche tokens in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a> to get additional rewards!` : ``)}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n              {\n                modalEnabled && (\n                  <GenericModal\n                    {...this.props.tokenConfig.modal}\n                    closeModal={this.resetModal}\n                    isOpen={this.state.activeModal === this.props.tokenConfig.modal.id}\n                  />\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n              // Reset amountLent if below zero\n              if (amountLent.lt(0)){\n                amountLent = this.functionsUtil.BNify(0);\n              }\n            break;\n            default:\n            break;\n          }\n\n          // console.log(tx.action,tx.protocol,tx.token,tokenAmount.toString(),amountLent.toString());\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const requiredNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const subgraphConfig = this.functionsUtil.getGlobalConfig(['network','providers','subgraph','tranches']);\n    const subgraphEnabled = subgraphConfig.enabled && subgraphConfig.availableNetworks.includes(requiredNetworkId);\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTrancheTokenConversionRate(tokenConfig) : this.functionsUtil.BNify(1),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTxTimestamp);\n\n        const trancheInfos = trancheAAInfos ? trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1)) : null;\n\n        const blocksTimestamps = {};\n        const conversionRateBlocksCalls = {};\n        const conversionRatesTimestamps = {};\n\n        if (conversionRateField){\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            if (subgraphEnabled && trancheInfos){\n              const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n                const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n                if (blockInfo.distance === null || distance<blockInfo.distance){\n                  blockInfo.distance = distance;\n                  blockInfo.trancheInfo = trancheInfo;\n                }\n                return blockInfo;\n              },{\n                distance:null,\n                trancheInfo:null\n              });\n\n              if (blockInfo && blockInfo.trancheInfo){\n                if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                  blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n                }\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n                // Gnosis cannot fetch past blocks data\n                conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getTrancheTokenConversionRate(tokenConfig,blockInfo.trancheInfo.blockNumber);\n              }\n            } else {\n              if (!blocksTimestamps[timeStamp]){\n                blocksTimestamps[timeStamp] = [];\n              }\n              blocksTimestamps[timeStamp].push(timeStamp);\n              conversionRateBlocksCalls[timeStamp] = new Promise(resolve => resolve(lastConversionRate));\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n        }\n\n         // console.log(token,conversionRateBlocksCalls);\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (subgraphEnabled){\n          if (trancheAAInfos){\n            trancheAAInfos.forEach( (trancheInfo,index) => {\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n            });\n          }\n\n          if (trancheBBInfos){\n            trancheBBInfos.forEach( (trancheInfo,index) => {\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataBB);\n            });\n          }\n        } else {\n          Object.keys(conversionRateBlocksCalls).forEach( blockNumber => {\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n            });\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData', tokensData);\n    // console.log('transactions', transactions);\n    // console.log('tokensBalance', tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = tokenConfig ? tokenConfig.decimals : 18;\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n\n                  // console.log(token,trancheTokens.toString(),tranchePrice.toString(),newBalance.toString());\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  // if (token === 'USDC'){\n                  //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,tx.trancheTokens.toFixed());\n                  // }\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n\n          // console.log(token,trancheTokenBalance[token][tranche].toString(),lastTx.tranchePrice.toString(),lastTxBalance.toString());\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n      \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const pointSize = chartData[0].data.length === 1 ? 10 : 0;\n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      pointSize,\n      gridYValues,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getTokenConfig(rewardToken);\n      if (!tokenConfig){\n        return;\n      }\n\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      let tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      if (!tokenBalance){\n        tokenBalance = this.functionsUtil.BNify(0);\n      }\n\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:RoundButton,\n                      componentProps:{\n                        value:'Claim',\n                        buttonProps:{\n                          style:{\n                            width:'100%'\n                          },\n                          size:this.props.isMobile ? 'small' : 'medium'\n                        }\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.cdo.toLowerCase() === this.props.tokenConfig.CDO.name.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.cdo.toLowerCase() === this.props.tokenConfig.CDO.name.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('userHasFunds', userHasFunds, this.props.portfolio.tranchesBalance, this.props.tokenConfig.CDO.name)\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);  \n\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n\n      // Select first tranche is not available\n      if (!this.functionsUtil.getArrayPath([protocol,token],this.props.availableTranchesNetworks[networkId])){\n        protocol = Object.keys(this.props.availableTranchesNetworks[networkId])[0];\n        token = Object.keys(this.props.availableTranchesNetworks[networkId][protocol])[0];\n      }\n    }\n    \n    const tokenConfig = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex\n                mt={2}\n                mb={3}\n                alignItems={\"center\"}\n              >\n                <Image\n                  ml={3}\n                  mr={2}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex\n                  mx={1}\n                >\n                  <Title\n                    as={'h2'}\n                    ml={[2, 0]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Title>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        color: 'primary',\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        }\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={2}\n                    fontSize={1}\n                    fontWeight={3}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for <strong>{this.state.token}</strong>\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mb={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                }}\n                handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n              >\n                {this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Title\n              textAlign={'left'}\n            >\n              {flashData.subtitle}\n            </Title>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"primary\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"AA\",\"bubble\"])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"BB\",\"bubble\"])}\n            />\n            <Text\n              mx={2}\n              mt={[0, 2]}\n              mb={[2, 1]}\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                as={'h1'}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      unitProps={{\n                        color:'primary'\n                      }}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      color={'primary'}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.primary,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    lastUpdate:null,\n    transactions:[],\n    tokenConfig:null,\n    gaugeConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    selectedTranche:null,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTranchesChanged = JSON.stringify(nextProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    return stateChanged || accountChanged || availableTranchesChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.functionsUtil.objectsDiff(prevProps,this.props),this.functionsUtil.objectsDiff(prevState,this.state));\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        componentLoaded:false,\n        portfolioLoaded:false\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  loadQueryParams(){\n    const trancheRoute = this.props.urlParams.param1;\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n    if (trancheDetails !== undefined) {\n      const trancheType = trancheDetails.type;\n      const selectedTranche = this.props.urlParams.param3;\n      const selectedProtocol = this.props.urlParams.param2;\n      const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedTranche] ? this.props.availableTranches[selectedProtocol][selectedTranche] : null) : null;\n      const selectedToken = tokenConfig ? tokenConfig.token : null;\n      const gaugeConfig = tokenConfig ? this.functionsUtil.getTrancheGaugeConfig(selectedProtocol,selectedTranche) : null;\n\n      this.setState({\n        trancheType,\n        tokenConfig,\n        gaugeConfig,\n        trancheRoute,\n        selectedToken,\n        trancheDetails,\n        selectedTranche,\n        selectedProtocol\n      });\n    } else {\n      const selectedTranche = this.props.urlParams.param2;\n      const selectedProtocol = this.props.urlParams.param1;\n      const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedTranche] ? this.props.availableTranches[selectedProtocol][selectedTranche] : null;\n      if (tokenConfig){\n        const selectedToken = tokenConfig.token;\n        const gaugeConfig = this.functionsUtil.getTrancheGaugeConfig(selectedProtocol,selectedTranche);\n        this.setState({\n          tokenConfig,\n          gaugeConfig,\n          selectedToken,\n          selectedTranche,\n          selectedProtocol\n        });\n      }\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.availableTranches){\n      return false;\n    }\n\n    const tranchesTvls = [];\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches[protocol]), async (token) => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        const trancheConfig = tokenConfig.AA;\n        tranchesTvls.push({\n          token,\n          protocol,\n          tvl:parseFloat(await this.functionsUtil.loadTrancheFieldRaw('tranchePoolConverted', {decimals:2,maxPrecision:999,minPrecision:0}, protocol, token, null, tokenConfig, trancheConfig))\n        });\n      });\n    });\n\n    const tranchesOrdering = tranchesTvls.sort((a, b) => (parseInt(a.tvl) < parseInt(b.tvl) ? 1 : -1));\n\n    this.setState({\n      tranchesOrdering\n    });\n\n    this.loadQueryParams();\n\n    this.loadPortfolio().then( () => {\n\n      if (!!this.state.trancheDetails) {\n\n        if (this.state.userHasFunds && !this.state.tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        const useTrancheType = !this.state.userHasFunds;\n        this.setState({\n          useTrancheType\n        });\n      }\n\n      this.setState({\n        componentLoaded:true\n      });\n    });\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    let availableTranches = {...this.props.availableTranches};\n    if (this.state.selectedProtocol && this.state.selectedTranche){\n      availableTranches = {\n        [this.state.selectedProtocol]:{\n          [this.state.selectedTranche]:availableTranches[this.state.selectedProtocol][this.state.selectedTranche]\n        }\n      }\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(availableTranches,this.props.account);\n\n    // console.log('portfolio', this.state.selectedProtocol, this.state.selectedTranche, portfolio);\n\n    if (portfolio){\n      const depositedCdos = [];\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n\n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n\n        // Push deposited CDO instead of token\n        depositedCdos.push(trancheInfo.cdo);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(availableTranches).forEach( protocol => {\n        Object.keys(availableTranches[protocol]).forEach( token => {\n          const tokenConfig = availableTranches[protocol][token];\n          if(depositedCdos.includes(tokenConfig.CDO.name)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][token]={}\n              depositedTranches[protocol][token]=availableTranches[protocol][token];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][token]={};\n            remainingTranches[protocol][token]=availableTranches[protocol][token];\n          }\n        })\n      })\n\n      // console.log('tranchesTokens', tranchesTokens)\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4],\n              color:'primary'\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig && govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4],\n                color:'primary'\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const lastUpdate = Date.now();\n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        lastUpdate,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedTranche] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedTranche] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedTranche}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedTranche);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedTranche);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedTranche){\n      breadcrumbPath.push(this.state.selectedTranche);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              gaugeConfig={this.state.gaugeConfig}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:16,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:70,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Deposited Tranches\n                      </Title>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'statusIcon',\n                              props:{\n                                ml:2,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.14],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.09 : 0.08],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolConvertedNoLabel` : 'poolConverted',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.13],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                height:'45px',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      tranchesOrdering={this.state.tranchesOrdering}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Title\n                      as={'h4'}\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Title>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.15]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'statusIcon',\n                            props:{\n                              ml:2,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.11],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolConvertedNoLabel` : 'poolConverted',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              height:'45px',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    tranchesOrdering={this.state.tranchesOrdering}\n                    availableTranches={this.props.account ? this.state.remainingTranches : this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'copyColor'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={RoundButton}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  buttonProps:{\n                    size:'small',\n                    width:'auto',\n                    style:{\n                      fontSize:'14px',\n                    }\n                  },\n                  value:'Reduce allowance'\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Input } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    eventData:{},\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n\n        let eventData = {};\n        switch (this.state.increaseAction){\n          case 'time':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseTime',\n              eventValue:this.state.lockPeriodInput\n            };\n          break;\n          case 'amount':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseAmount'\n            };\n          break;\n          default:\n          break;\n        }\n\n        // console.log('eventData',eventData);\n\n        this.setState({\n          eventData,\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let eventData = {};\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_Lock',\n          eventLabel:_unlock_time\n        };\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_IncreaseAmount'\n        };\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      eventData\n    });\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // if (newState.increaseAction !== this.state.increaseAction){\n    //   this.setIncreaseAction(newState.increaseAction);\n    // }\n\n    // Select Withdraw if the lock has expired\n    if (['Increase Lock','Lock'].includes(selectedAction) && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                ) : this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={RoundButton}\n                                          componentProps={{\n                                            buttonProps:{\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              disabled:this.state.buttonDisabled\n                                            },\n                                            value:'Increase Time',\n                                          }}\n                                          action={'Increase Time'}\n                                          eventData={this.state.eventData}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        eventData={this.state.eventData}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',  \n                                    width:[1,1/2],\n                                  },\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                eventData={{\n                                  eventCategory:'Staking_Withdraw',\n                                  eventAction:this.props.selectedToken\n                                }}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={RoundButton}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    value:'Claim',\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/3],\n                                    }\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  eventData={{\n                                    eventCategory:'Staking_Claim',\n                                    eventValue:this.state.claimable.toFixed(8),\n                                    eventAction:this.props.contractInfo.rewardToken\n                                  }}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={RoundButton}\n                                  componentProps={{\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/2],\n                                    },\n                                    value:'Approve',\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={RoundButton}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    disabled:this.state.buttonDisabled\n                                  },\n                                  value:'Buy Coverage',\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.claimableAmount) ? this.state.selectedCoverToClaim.claimableAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Title\n              as={'h4'}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Title>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    return stateChanged || accountChanged || availableTokensChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1,\n                                  border:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Tools\n                      </Title>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Assets to migrate\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Deposited assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Available assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={RoundButton}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      buttonProps:{\n                                                        width:[1,1/3],\n                                                        size:'medium',\n                                                        height:'45px',\n                                                      },\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={RoundButton}\n                                        componentProps={{\n                                          buttonProps:{\n                                            size:'medium',\n                                          },\n                                          value:'Claim',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Input } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n        const gaugeWorkingSupply = userBoostInfo.workingSupply;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(this.functionsUtil.BNify(gaugeWorkingSupply).plus(userWorkingBalance));\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        // console.log(gaugeToken,gaugeWeight.toFixed(),userBoostInfo,this.functionsUtil.BNify(userWorkingBalance).toFixed(),this.functionsUtil.BNify(gaugeWorkingSupply).toFixed(),userBoostedShare.toFixed());\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={isActive ? 'primary' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport QuickswapV2Router02 from \"../abis/quickswap/QuickswapV2Router02.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v7.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://app.idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://app.idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio: \"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    bestYieldDisabledMessage: \"Deposits for this strategy are no longer available, please redeem your funds.\",\n    aysShort: \"This strategy automatically adjusts the yield split between the Senior and the Junior tranche\",\n    autoFarming: \"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://app.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://app.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"\",\n    theme: {\n      mode: \"dark\",\n      darkModeEnabled: true,\n      themeTogglerEnabled: false\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: false,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n      QuickswapRouter: {\n        abi: QuickswapV2Router02,\n        address: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#2272C8\",\n        rgb: [34, 114, 200],\n        hsl: [\"211\", \"71%\", \"46%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FFD15C\",\n        rgb: [255, 209, 92],\n        hsl: [\"43\", \"100%\", \"68%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      availableNetworks: [1],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    /*\n    polygon: {\n      visible: true,\n      networkId: 137,\n      type: \"tranche\",\n      enabledEnvs: [],\n      color: \"#f32121\",\n      comingSoon: false,\n      token: \"CXETHWETH\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      protocol: \"quickswap\",\n      govTokensEnabled: true,\n      availableNetworks: [137],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    */\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      enabledStatsNetworks: [1],\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      DQUICK:{\n        decimals: 18,\n        enabled: true,\n        label: 'DQUICK',\n        token: 'DQUICK',\n        icon: \"images/tokens/DQUICK.png\",\n        color: {\n          hex: '#1d8bcf',\n          rgb: [29, 139, 207],\n          hsl: ['203', '75%', '46%']\n        },\n        conversionRateInvertTokens:true,\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n      },\n      CXETHWETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'CXETHWETH',\n        token: 'CXETHWETH',\n        conversionRateField: \"ETHDAIPrice\",\n        icon: \"images/tokens/CXETHWETH.png\",\n        color: {\n          hex: '#f73bac',\n          rgb: [247, 59, 172],\n          hsl: ['324', '92%', '60%']\n        },\n        isPoolToken: true, // Get Pool Token price for conversion rate\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        // addressForPrice: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        underlying: 'WBTC', // Used for decimals\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        conversionRateField: 'PBTCDAIPrice',\n        conversionRouterMethod: 'getAmountsOut',\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587',\n        addressForPrice: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      PNT: {\n        token: 'PNT',\n        decimals: 18,\n        enabled: true,\n        label: 'pNetwork',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      CPOOL: {\n        decimals: 18,\n        enabled: true,\n        label: 'CPOOL',\n        token: 'CPOOL',\n        color: {\n          hex: '#5F73F4',\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        },\n        address: '0x66761fa41377003622aee3c7675fc7b5c1c2fac5'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: false,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      TRU: {\n        token: 'TRU',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#195bff',\n          rgb: [25, 91, 255],\n          hsl: [\"223\", \"100%\", \"55%\"]\n        },\n        disabledCharts: ['score'],\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x4c19596f5aaff459fa38b0f7ed92f11ae6543784',\n      },\n      AGEUR: {\n        decimals: 18,\n        enabled: true,\n        token: 'AGEUR',\n        color: {\n          hex: '#fbcea9',\n          rgb: [251, 206, 169],\n          hsl: ['27', '91%', '82%']\n        },\n        // conversionRateForceToken: 'USDC',\n        // conversionRateInvertTokens: true,\n        // conversionRateField: 'ageurDAIPrice',\n        // conversionRateDirectConversion: true,\n        // conversionRouterMethod: 'getAmountsOut',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        endTimestamp:\"2022-05-22 23:59:59\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: false,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: false,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      quickswap: {\n        legend: false,\n        enabled: true,\n        label: \"QuickSwap\",\n        icon: \"quickswap.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      euler: {\n        label: \"Euler\",\n        legend: false,\n        enabled: true,\n        color: {\n          rgb: [228, 97, 94],\n          hsl: [\"1\", \"71%\", \"63%\"]\n        }\n      },\n      wintermute: {\n        legend: false,\n        enabled: true,\n        label: \"Wintermute\",\n        color: {\n          rgb: [163, 236, 38],\n          hsl: [\"82\", \"84%\", \"54%\"]\n        }\n      },\n      clearpool: {\n        legend: false,\n        enabled: true,\n        label: \"Clearpool\",\n        color: {\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        }\n      },\n      truefi: {\n        legend: false,\n        enabled: true,\n        label: \"TrueFi\",\n        color: {\n          rgb: [25, 91, 255],\n          hsl: [\"223\", \"100%\", \"55%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: false,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    secondsPerDay: 86400,\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      polygonscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_POLYGONSCAN_KEY,\n          env.REACT_APP_POLYGONSCAN_KEY2,\n          env.REACT_APP_POLYGONSCAN_KEY3,\n        ],\n        endpoints: {\n          137: 'https://api.polygonscan.com/api',\n          80001: 'https://api-testnet.polygonscan.com/api',\n        },\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://polygonscan.com',\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          availableNetworks:[1],\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          AGEUR:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'AGEUR',\n            name: \"LiquidityGauge_aa_euler_ageur\",\n            token: \"LiquidityGauge_aa_euler_ageur\",\n            address:'0x8f195979f7af6c500b4688e492d07036c730c1b2',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_AGEUR',\n              token: 'AA_euler_AGEUR',\n              address: '0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n            }\n          },\n          USDC:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDC',\n            name: \"LiquidityGauge_aa_euler_usdc\",\n            token: \"LiquidityGauge_aa_euler_usdc\",\n            address:'0x1cd24f833af78ae877f90569eaec3174d6769995',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDC',\n              token: 'AA_euler_USDC',\n              address: '0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n            }\n          },\n          DAI:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'DAI',\n            name: \"LiquidityGauge_aa_euler_dai\",\n            token: \"LiquidityGauge_aa_euler_dai\",\n            address:'0x57d59d4bbb0e2432f1698f33d4a47b3c7a9754f3',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_DAI',\n              token: 'AA_euler_DAI',\n              address: '0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n            }\n          },\n          USDT:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDT',\n            name: \"LiquidityGauge_aa_euler_usdt\",\n            token: \"LiquidityGauge_aa_euler_usdt\",\n            address:'0x0c3310b0b57b86d376040b755f94a925f39c4320',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDT',\n              token: 'AA_euler_USDT',\n              address: '0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    let orderedTranches = [];\n    if (this.props.tranchesOrdering){\n      this.props.tranchesOrdering.forEach( t => {\n        if (enabledProtocols.includes(t.protocol)){\n          const token = t.token;\n          const protocol = t.protocol;\n          if (this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token]){\n            const tokenConfig = this.props.availableTranches[protocol][token];\n            orderedTranches.push({\n              token,\n              protocol,\n              tokenConfig\n            });\n          }\n        }\n      });\n    } else {\n      enabledProtocols.forEach(protocol => {\n        const protocolTranches = this.props.availableTranches[protocol];\n        if (!protocolTranches){\n          return null;\n        }\n        Object.keys(protocolTranches).forEach( token => {\n          const tokenConfig = protocolTranches[token];\n          if (tokenConfig){\n            orderedTranches.push({\n              token,\n              protocol,\n              tokenConfig\n            });\n          }\n         })\n      })\n    }\n\n    const depositedTokens = this.props.depositedTokens;\n    if (depositedTokens){\n      orderedTranches = orderedTranches.filter( t => {\n        return depositedTokens.find( d => d.token === t.token && d.protocol === t.protocol )\n      });\n    }\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n        id={\"tranches-list-container\"}\n      >\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        {\n          orderedTranches && orderedTranches.length>0 && (\n            <Flex\n              id={\"tranches-list\"}\n              flexDirection={'column'}\n            >\n              {\n                orderedTranches.map( p => {\n                  const token = p.token;\n                  const protocol = p.protocol;\n                  const tokenConfig = p.tokenConfig;\n                  const tranche = this.props.trancheType || null;\n                  return (\n                    <TableRow\n                      {...this.props}\n                      token={token}\n                      tranche={tranche}\n                      protocol={protocol}\n                      tokenConfig={tokenConfig}\n                      rowId={`tranche-col-${protocol}`}\n                      cardId={`tranche-card-${protocol}`}\n                      key={`tranche-${protocol}-${token}`}\n                      fieldComponent={this.props.fieldComponent || TrancheField}\n                    />\n                  )\n                })\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: ['beta'],\n        canDeposit: {\n          enabled: false,\n          disabledMessageDepositKey: 'bestYieldDisabledMessage'\n        },\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider && this.walletLink){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, rpc, ...rest } = kwargs;\n    super(rest);\n\n    this.rpc = rpc;\n    this.provider = null;\n    this.infuraId = infuraId;\n    this.WalletConnectProvider = WalletConnectProvider;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      const params = {\n        infuraId:this.infuraId\n      };\n      if (this.rpc){\n        params.rpc = this.rpc;\n      }\n      this.provider = new this.WalletConnectProvider(params);\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nexport default class Web3Connectors {\n\n  defaultNetwork = globalConfigs.network.requiredNetwork;\n\n  constructor(networkId=null){\n    this.setNetwork(networkId);\n  }\n\n  setNetwork(networkId){\n    if (networkId && globalConfigs.network.enabledNetworks.includes(networkId)){\n      this.defaultNetwork = networkId;\n    }\n  }\n\n  getConnectors(){\n\n    const {\n      InjectedConnector,\n      NetworkOnlyConnector,\n      TrezorConnector,\n      LedgerConnector,\n      FortmaticConnector,\n      PortisConnector\n    } = Connectors;\n\n    const env = process.env;\n\n    const defaultNetwork = this.defaultNetwork;\n    const portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\n    const portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n    const manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\n    const manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\n    const fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\n\n    const supportedNetworkURLs = {};\n\n    globalConfigs.network.enabledNetworks.forEach((networkId,index) => {\n      networkId = parseInt(networkId);\n      const provider = globalConfigs.network.availableNetworks[networkId].provider;\n      const providerConfig = globalConfigs.network.providers[provider];\n      supportedNetworkURLs[networkId] = providerConfig.rpc[networkId]+providerConfig.key;\n    });\n\n    // console.log('supportedNetworkURLs',defaultNetwork,supportedNetworkURLs);\n\n    const Injected = new InjectedConnector({\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Infura = new NetworkOnlyConnector({\n      providerURL: supportedNetworkURLs[defaultNetwork]\n    });\n\n\n    const Trezor = new TrezorConnector({\n      api: TrezorApi,\n      supportedNetworkURLs,\n      defaultNetwork,\n      manifestEmail,\n      manifestAppUrl\n    });\n\n    const Ledger = new LedgerConnector({\n      supportedNetworkURLs,\n      defaultNetwork\n    });\n\n    const WalletConnect = new WalletConnectConnector({\n      defaultNetwork,\n      rpc:supportedNetworkURLs,\n      api: WalletConnectProvider,\n      infuraId: env.REACT_APP_INFURA_KEY,\n      bridge: \"https://bridge.walletconnect.org\",\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Fortmatic = new FortmaticConnector({\n      api: FortmaticApi,\n      apiKey: fortmaticApiKey,\n      logoutOnDeactivation: false\n    });\n\n    const Portis = new PortisConnector({\n      api: PortisApi,\n      dAppId: portisDAppId,\n      network: portisNetwork\n    });\n\n    const Authereum = new AuthereumConnector({\n      api: AuthereumApi,\n      network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n    });\n\n    const walletLink = new WalletLinkConnector({\n      api: WalletLink,\n      darkMode: false,\n      chainId: defaultNetwork,\n      appName: globalConfigs.appName,\n      infuraUrl: supportedNetworkURLs[defaultNetwork],\n      appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n    });\n\n    const Torus = new TorusConnector({\n      api: TorusApi,\n      initParams:{\n        buildEnv: 'production', // default: production\n        enableLogging: false, // default: false\n        network: {\n          host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n          chainId: defaultNetwork, // default: 1\n          networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n        },\n        showTorusButton: false // default: true\n      }\n    });\n\n    const gnosis = new GnosisSafeConnector(SafeAppConnector);\n\n    return {\n      Injected,\n      Infura,\n      WalletConnect,\n      gnosis,\n      walletLink,\n      Fortmatic,\n      Portis,\n      Authereum,\n      Torus,\n      Trezor,\n      Ledger,\n    };\n  }\n\n}","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 100;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    attempsTimeoutIds:{},\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 1000;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      attempsTimeoutIds:{},\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = window.setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash,count=0,maxCount=400) => {\n      return new Promise( (resolve, reject) => {\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId]){\n          this.multiCallsStats.attempsTimeoutIds[batchId] = {};\n        }\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId][resultHash]){\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash] = {\n            count,\n            result:null,\n            timeoutId:null,\n            maxCountReached:false\n          };\n        }\n\n        const maxCountReached = maxCount && count>=maxCount;\n        const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined' ? true : false;\n\n        // Update attempt count\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].count = count;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].maxCountReached = maxCountReached;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result = resultIsDefined ? this.multiCallsResults[batchId][resultHash] : 'undefined';\n\n        // console.log('attempt',batchId,resultHash,count,resultIsDefined,maxCountReached,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result);\n\n        if (resultIsDefined || maxCountReached) {\n\n          // Force rejected response\n          if (maxCountReached && !resultIsDefined){\n            if (!this.multiCallsResults[batchId]){\n              this.multiCallsResults[batchId] = {};\n            }\n            this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n          }\n\n          // Handle rejection\n          if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n            // this.timeLog('REJECTED',batchId,resultHash);\n\n            // Add hash to rejected hashes\n            this.addRejectedHash(resultHash);\n\n            resolve('REJECTED');\n          } else {\n            // this.timeLog('RESOLVED',batchId,resultHash);\n            this.addResolvedHash(resultHash);\n            resolve(this.multiCallsResults[batchId][resultHash]);\n          }\n\n          // Increment processed count\n          this.multiCallsStats.processedCount++;\n\n          // Remove hash from missing hashes\n          delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          delete this.multiCallsStats.attempsTimeoutIds[batchId][resultHash];\n        } else {\n          // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId = window.setTimeout(()=>{\n            resolve(checkMulticallData(batchId,resultHash,count+1,maxCount));\n          },50);\n\n          // console.log('new_attempt',batchId,resultHash,count+1,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId);\n        }\n      });\n    }\n\n    // console.log('makeMulticall',callBatchId,callDataHash);\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    // console.log('data',callBatchId,callDataHash,data);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => window.setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const isGnosisSafe = !!props.connectors.gnosis.provider.safe;\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (props.connectors.Portis) {\n    if (registerPage) {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(props.connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    href={\"#\"}\n                    color={'blue'}\n                    fontWeight={'0'}\n                    textAlign={'center'}\n                    onClick={this.toggleShowTxFees}\n                    title={\"Learn about Ethereum transaction fees\"}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark-white.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectors={this.props.connectors}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <RoundButton\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={ e => this.setCurrentSection(e,'instructions') }\n            >\n              READ INSTRUCTIONS\n            </RoundButton>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <RoundButton\n              className={[styles.gradientButton,styles.empty]}\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={this.resetModal}\n            >\n              BACK\n            </RoundButton>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n\n      window.ethereum.on('accountsChanged', async (accounts) => {\n        this.initAccount(accounts[0]);\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n    window.connectors = this.props.connectors;\n  }\n\n  checkGnosisSafeNetwork = async () => {\n    const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n    // console.log('isGnosisSafe',this.state.web3.currentProvider.constructor.name);\n    if (isGnosisSafe){\n      const currentSafeNetworkId = await this.props.connectors.gnosis.getChainId();\n      console.log('currentSafeNetworkId',this.props.connectors.gnosis.provider.safe,currentSafeNetworkId,this.state.network.current.id);\n      if (!this.state.web3 || !this.state.network.current.id || this.state.network.current.id !== currentSafeNetworkId){\n        await this.checkNetwork(currentSafeNetworkId);\n      }\n    }\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    if (walletProvider === 'gnosis'){\n      return false;\n    }\n    \n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n\n        // Check Gnosis Network\n        this.checkGnosisSafeNetwork();\n\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded',this.props.connectors.gnosis.provider.safe);\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('connectorNameChanged',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.checkNetwork(null,this.initWeb3);\n    } else if ( prevProps.context.active !== this.props.context.active || prevProps.context.connectorName !== this.props.context.connectorName || JSON.stringify(prevProps.context.error) !== JSON.stringify(this.props.context.error) ) {\n      // console.log('contextChanged',this.props.connectorName,this.props.context.connectorName,this.props.context.active,this.props.context.error);\n\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.checkNetwork(null,this.initWeb3);\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.checkNetwork(null,this.initWeb3);\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName && setConnectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('connectorNameChanged_2',this.props.context.connectorName,this.props.context.connectorName,this.props.connectorName);\n      setConnectorName = this.props.connectorName;\n      this.checkNetwork(null,this.initWeb3);\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n      // this.initWeb3();\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n\n    // console.log('initWeb3','networkInitialized',this.state.networkInitialized);\n\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    let useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n    // let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      useWeb3Provider = false; // Disable web3 provider for Infura\n      context.unsetConnector();\n      // setConnectorName = null;\n    } else if (connectorName !== 'Infura') {\n      const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n      // console.log('initWeb3 connectorNameChanged',connectorName,context.connectorName,setConnectorName,!context.active,connectorNameChanged);\n\n      // Set the connector\n      if (connectorName !== 'ledgerLive'){\n        if (!context.active || connectorNameChanged) {\n          // Select preferred web3 provider\n          if (connectorName && connectorNameChanged){\n\n            if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n              return false;\n            }\n\n            // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n            setConnectorName = connectorName;\n            await context.setConnector(connectorName);\n            // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n            // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n            // return this.initWeb3();\n            return web3;\n          }\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    // Forse enable provider\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    const web3Callback = async (initWeb3Index=null) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index && initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',initWeb3Index,this.state.network.current.id,this.state.network.required.id,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        await this.checkGnosisSafeNetwork();\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const biconomyEnabled = biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()));\n\n    // console.log('initWeb3',initWeb3Index,biconomyEnabled,connectorName,web3,context,web3Provider,'UPDATE',web3 !== this.state.web3);\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyEnabled){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            // if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n            //   console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n            //   return false;\n            // }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          biconomy:false\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = (this.state.network.isCorrectNetwork ? this.state.web3 : (networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : this.state.web3Providers[this.state.network.required.id]));\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      await this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=null) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (!account && this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      let wallets = null;\n\n      if (!account){\n        wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n      \n      // console.log('initAccount',wallets,this.props.context.account,this.state.account,account);\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks,this.state.web3);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    // const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranchesNetworks){\n      Object.keys(this.props.availableTranchesNetworks).forEach( networkId => {\n        const protocols = this.props.availableTranchesNetworks[networkId];\n        Object.keys(protocols).forEach( protocol => {\n          const tokens = this.props.availableTranchesNetworks[networkId][protocol];\n          Object.keys(tokens).forEach( token => {\n            const tokenConfig = tokens[token];\n            // if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (parseInt(networkId) === parseInt(requiredNetworkId)){\n              if (tokenConfig.abi){\n                contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n              }\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n\n              const strategyConfig = tokenConfig.Strategy;\n              if (strategyConfig.address){\n                contracts.push(this.initContractWithoutSet(tokenConfig.Strategy.name,strategyConfig.address,strategyConfig.abi));\n              }\n            }\n\n            if (tokenConfig.abi){\n              contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,networkId));\n            }\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,networkId));\n          });\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = (networkId=null) => {\n    const defaultNetworkID = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n    if (!networkId || !globalConfigs.network.enabledNetworks.includes(networkId)){\n      networkId = defaultNetworkID;\n    }\n    const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n    return {\n      id: networkId,\n      name: networkName\n    };\n   }\n\n   getCurrentNetwork = async (networkId=null,defaultWeb3=null) => {\n     const currentWeb3 = defaultWeb3 || this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     \n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null,callback=null) => {\n    const network = {...this.state.network};\n\n    // Get selected web3 provider\n    const defaultWeb3 = this.props.context && this.props.context.active && this.props.context.library ? this.props.context.library : null;\n\n    network.required = this.getRequiredNetwork(networkId);\n    network.current = await this.getCurrentNetwork(networkId,defaultWeb3);\n\n    const networkInitialized = !!network.current.id;\n    // Network is correct if not connected\n    network.isCorrectNetwork =  !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','defaultWeb3:',defaultWeb3,'networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', isCorrectNetwork: '+network.isCorrectNetwork,'networkInitialized: '+networkInitialized,', update: '+updateNetwork);\n\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      },()=>{\n        if (typeof callback === 'function'){\n          callback();\n        }\n      });\n    } else {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n        // Update transaction with receipt details\n        if (transaction.confirmationCount===1){\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        }\n\n        if (call_callback){\n          callback(transaction);\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction,transaction.transactionHash);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          connectors={this.props.connectors}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import DAI from '../abis/tokens/DAI.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport TruefiPool from '../abis/truefi/TruefiPool.json';\nimport Clearpool from '../abis/clearpool/Clearpool.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOPolygon from '../contracts/IdleCDOPolygon.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nimport QuickswapLiquidityPool from \"../abis/quickswap/QuickswapLiquidityPool.json\";\nconst availableTranches = {\n  137:{\n    quickswap:{\n      CXETHWETH:{\n        decimals:18,\n        token:'CXETHWETH',\n        protocol:'quickswap',\n        blockNumber:28501471,\n        referralEnabled:true,\n        autoFarming:['WMATIC'],\n        abi:QuickswapLiquidityPool,\n        address:'0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        CDO:{\n          decimals:18,\n          abi:IdleCDOPolygon,\n          name:'IdleCDO_quickswap_CXETHWETH',\n          address:'0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_quickswap_CXETHWETH'\n        },\n        messages:{\n          buyInstructions:'To get CXETHWETH token your have to supply liquidity into the <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://quickswap.exchange/#/add/0xfe4546feFe124F30788c4Cc1BB9AA6907A7987F9/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\">Quickswap cxETH-ETH pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_AA',\n            address:'0x466cFDfF869666941CdB89daa412c3CddC55D6c1'\n          },\n          blockNumber:28501471,\n          label:'AA-CXETHWETH-LP',\n          name:'AA_quickswap_CXETHWETH',\n          token:'AA_quickswap_CXETHWETH',\n          address:'0x967b2fdEc06c0178709F1BFf56E0aA9367c3225c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_BB',\n            address:'0x727d9c331e9481167Dc61A9289C948da25bE825e'\n          },\n          blockNumber:28501471,\n          label:'BB-CXETHWETH-LP',\n          name:'BB_quickswap_CXETHWETH',\n          token:'BB_quickswap_CXETHWETH',\n          address:'0x1aFf460F388E3822756F5697f05A7E2AEB8Db7ef'\n        }\n      }\n    }\n  },\n  1:{\n    idle:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        disabled:true,\n        protocol:'idle',\n        blockNumber:13054628,\n        enabledEnvs: ['beta'],\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          decimals:18,\n          abi:IdleCDO,\n          name:'IdleCDO_idleDAIYield',\n          address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleDAIYield',\n          address:'0x48a48c6694168093A3dEE02E9e8AC5a14169a652'\n        },\n        description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n            address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI AA',\n          blockNumber:13054628,\n          name:'AA_idleDAIYield',\n          token:'AA_idleDAIYield',\n          address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n            address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:false,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI BB',\n          blockNumber:13054628,\n          name:'BB_idleDAIYield',\n          token:'BB_idleDAIYield',\n          address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n        }\n      },\n      FEI:{\n        token:'FEI',\n        decimals:18,\n        disabled:true,\n        protocol:'idle',\n        blockNumber:13575397,\n        enabledEnvs: ['beta'],\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_idleFEIYield',\n          address:'0x77648a2661687ef3b05214d824503f6717311596'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleFEIYield',\n          address:'0x73A44027bDAF5D71296d2C73cfb13e561c76a916'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n            address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleFEI AA',\n          blockNumber:13575397,\n          name:'AA_idleFEIYield',\n          token:'AA_idleFEIYield',\n          address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          label:'idleFEI BB',\n          blockNumber:13575397,\n          name:'BB_idleFEIYield',\n          token:'BB_idleFEIYield',\n          address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n        }\n      }\n    },\n    lido:{\n      stETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'stETH',\n        protocol:'lido',\n        blockNumber:13776954,\n        address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_stETH',\n          address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          harvestEnabled:false,\n          name:'IdleStrategy_lido_stETH',\n          address:'0x0cac674ebD77bBD899f6079932768f6d59Da089A'\n        },\n        messages:{\n          buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:false,\n            stakingRewards:[\n              {\n                token:'LDO',\n                enabled:true,\n                address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n              }\n            ],\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_stETH_AA',\n            address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n          },\n          blockNumber:13776954,\n          name:'AA_lido_stETH',\n          token:'AA_lido_stETH',\n          label:'lido stETH AA',\n          address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_stETH_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13776954,\n          name:'BB_lido_stETH',\n          token:'BB_lido_stETH',\n          label:'lido stETH BB',\n          address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n        }\n      }\n    },\n    /*\n    mstable:{\n      mUSD:{\n        abi:ERC20,\n        decimals:18,\n        token:'mUSD',\n        protocol:'mstable',\n        autoFarming:['MTA'],\n        blockNumber:14184007,\n        address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_mstable_mUSD',\n          address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_mstable_mUSD'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_mstable_mUSD_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'AA_mstable_mUSD',\n          token:'AA_mstable_mUSD',\n          label:'mstable mUSD AA',\n          address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'BB_mstable_mUSD',\n          token:'BB_mstable_mUSD',\n          label:'mstable mUSD BB',\n          address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n        }\n      }\n    },\n    */\n    convex:{\n      FRAX3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'FRAX3CRV',\n        protocol:'convex',\n        blockNumber:13812864,\n        autoFarming:['CVX','CRV'],\n        curveApyPath:['apy','day','frax'],\n        address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_frax3crv',\n          address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_frax3crv',\n          address:'0xBc1707D16541108b7035E52e1DAeb27ca4B6B79F'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'AA_convex_frax3crv',\n          token:'AA_convex_frax3crv',\n          label:'convex frax3crv AA',\n          address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'BB_convex_frax3crv',\n          token:'BB_convex_frax3crv',\n          label:'convex frax3crv BB',\n          address:'0x18cf59480d8c16856701f66028444546b7041307'\n        }\n      },\n      MIM3CRV:{\n        abi:ERC20,\n        decimals:18,\n        disabled:true,\n        token:'MIM3CRV',\n        protocol:'convex',\n        blockNumber:13848124,\n        enabledEnvs: ['beta'],\n        curveApyPath:['apy','day','mim'],\n        autoFarming:['CVX','CRV','SPELL'],\n        address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_mim3crv',\n          address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_mim3crv',\n          address:'0x35168324dC1981aDDc3bC915788e200BeDF77865'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'AA_convex_mim3crv',\n          token:'AA_convex_mim3crv',\n          label:'convex mim3crv AA',\n          address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'BB_convex_mim3crv',\n          token:'BB_convex_mim3crv',\n          label:'convex mim3crv BB',\n          address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n        }\n      },\n      steCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'steCRV',\n        protocol:'convex',\n        blockNumber:14182975,\n        autoFarming:['CVX','CRV','LDO'],\n        curveApyPath:['apy','day','steth'],\n        address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_steCRV',\n          address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_steCRV',\n          address:'0x3bCbA0AfD36C9B350f46c570f89ab70817D122CB'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'AA_convex_steCRV',\n          token:'AA_convex_steCRV',\n          label:'convex steCRV AA',\n          address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'BB_convex_steCRV',\n          token:'BB_convex_steCRV',\n          label:'convex steCRV BB',\n          address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n        }\n      },\n      ALUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        protocol:'convex',\n        token:'ALUSD3CRV',\n        blockNumber:14177732,\n        autoFarming:['CVX','CRV'],\n        address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_alusd3crv',\n          address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_alusd3crv',\n          address:'0xDb7306Ddba67DD9d5aF08204E314F4DE6c29e20d'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'AA_convex_alusd3crv',\n          token:'AA_convex_alusd3crv',\n          label:'convex alusd3crv AA',\n          address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'BB_convex_alusd3crv',\n          token:'BB_convex_alusd3crv',\n          label:'convex alusd3crv BB',\n          address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n        }\n      },\n      \"3EUR\":{\n        abi:ERC20,\n        decimals:18,\n        token:'3EUR',\n        protocol:'convex',\n        blockNumber:14177892,\n        autoFarming:['CVX','CRV','ANGLE'],\n        address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_3eur',\n          address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_3eur',\n          address:'0x4Ae60BC9A3eFc160AE2EbA70947a9b47Ad2b9094'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'AA_convex_3eur',\n          token:'AA_convex_3eur',\n          label:'convex 3eur AA',\n          address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'BB_convex_3eur',\n          token:'BB_convex_3eur',\n          label:'convex 3eur BB',\n          address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n        }\n      },\n      MUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        disabled:true,\n        token:'MUSD3CRV',\n        protocol:'convex',\n        blockNumber:14177794,\n        enabledEnvs: ['beta'],\n        autoFarming:['CVX','CRV'],\n        address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_musd3crv',\n          address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_musd3crv',\n          address:'0x271cE5dED4cCbD28833bddF8a8093517299920f0'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'AA_convex_musd3crv',\n          token:'AA_convex_musd3crv',\n          label:'convex musd3crv AA',\n          address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'BB_convex_musd3crv',\n          token:'BB_convex_musd3crv',\n          label:'convex musd3crv BB',\n          address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n        }\n      },\n      PBTCCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'PBTCCRV',\n        protocol:'convex',\n        blockNumber:14570195,\n        multiCallDisabled:true,\n        autoFarming:['CVX','CRV','PNT'],\n        address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_pbtccrv',\n          address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_pbtccrv',\n          address:'0x0198792f2849397908C092b6B57654e1a57a4CDC'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'AA_convex_pbtccrv',\n          token:'AA_convex_pbtccrv',\n          label:'convex pbtccrv AA',\n          address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'BB_convex_pbtccrv',\n          token:'BB_convex_pbtccrv',\n          label:'convex pbtccrv BB',\n          address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n        }\n      }\n    },\n    euler:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14785127,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDC',\n          address:'0xf5a3d259bfe7288284bd41823ec5c8327a314054'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDC',\n          address:'0x5DaD2eEF80a8cdFD930aB8f0353cA13Bd48c4346'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDC',\n          blockNumber:14785127,\n          token:'AA_euler_USDC',\n          label:'euler USDC AA',\n          address:'0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14785127,\n          name:'BB_euler_USDC',\n          token:'BB_euler_USDC',\n          label:'euler USDC BB',\n          address:'0xe11679CDb4587FeE907d69e9eC4a7d3F0c2bcf3B'\n        }\n      },\n      levUSDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        protocol:'euler',\n        blockNumber:15445762,\n        enabledEnvs: ['beta'],\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_levUSDC',\n          address:'0xcb2bd49d4b7874e6597dedfaa3e7b4e01831c5af'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_levUSDC',\n          address:'0xee5ec95ce2c8700a2d152db3249fa13b163f0073'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_levUSDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15445762,\n          label:'euler USDC AA',\n          name:'AA_euler_levUSDC',\n          token:'AA_euler_levUSDC',\n          address:'0x9F94fa97cC2d48315015040708D12aB855283164'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_levUSDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15445762,\n          label:'euler USDC BB',\n          name:'BB_euler_levUSDC',\n          token:'BB_euler_levUSDC',\n          address:'0x617648B846512E2F49dC21Bf27e4505C285E6977'\n        }\n      },\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961854,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_DAI',\n          address:'0x46c1f702a6aad1fd810216a5ff15aab1c62ca826'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_DAI',\n          address:'0xc7F1B9C72B8230E470420A4b69af7c50781A3f44'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_DAI_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_DAI',\n          blockNumber:14961854,\n          token:'AA_euler_DAI',\n          label:'euler DAI AA',\n          address:'0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_DAI_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14961854,\n          name:'BB_euler_DAI',\n          token:'BB_euler_DAI',\n          label:'euler DAI BB',\n          address:'0x6629baA8C7c6a84290Bf9a885825E3540875219D'\n        }\n      },\n      USDT:{\n        abi:ERC20,\n        decimals:6,\n        token:'USDT',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961973,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDT',\n          address:'0xD5469DF8CA36E7EaeDB35D428F28E13380eC8ede'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDT',\n          address:'0x3d1775dA27Dd9c6d936795Ac21b94CDeD8baBD69'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDT_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDT',\n          blockNumber:14961973,\n          token:'AA_euler_USDT',\n          label:'euler USDT AA',\n          address:'0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDT_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'BB_euler_USDT',\n          blockNumber:14961973,\n          token:'BB_euler_USDT',\n          label:'euler USDT BB',\n          address:'0xb1EC065abF6783BCCe003B8d6B9f947129504854'\n        }\n      },\n      AGEUR:{\n        abi:ERC20,\n        decimals:18,\n        token:'AGEUR',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:15055915,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_AGEUR',\n          address:'0x2398Bc075fa62Ee88d7fAb6A18Cd30bFf869bDa4'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_AGEUR',\n          address:'0x8468B8Efe7eeA52978Ccfe3C0248Ca6F6895e166'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_AGEUR_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_AGEUR',\n          blockNumber:15055915,\n          token:'AA_euler_AGEUR',\n          label:'euler AGEUR AA',\n          address:'0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_AGEUR_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15055915,\n          name:'BB_euler_AGEUR',\n          token:'BB_euler_AGEUR',\n          label:'euler AGEUR BB',\n          address:'0xcf5FD05F72cA777d71FB3e38F296AAD7cE735cB7'\n        }\n      }\n    },\n    clearpool:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabledEnvs:[],\n        blockNumber:15044679,\n        protocol:'clearpool',\n        autoFarming:['CPOOL'],\n        maxUtilizationRate:0.99,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_clearpool_USDC',\n          address:'0xDBCEE5AE2E9DAf0F5d93473e08780C9f45DfEb93'\n        },\n        Pool:{\n          abi:Clearpool,\n          name:'Pool_clearpool_USDC',\n          address:'0xcb288b6d30738db7e3998159d192615769794b5b'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_clearpool_USDC',\n          address:'0x54ae90be2dee0a960953c724839541e75bb1f471'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.clearpool.finance/pool/0xCb288b6d30738db7E3998159d192615769794B5b\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Clearpool Wintermute USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_clearpool_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_clearpool_USDC',\n          token:'AA_clearpool_USDC',\n          label:'clearpool USDC AA',\n          address:'0xb86264c21418aA75F7c337B1821CcB4Ff4d57673'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_clearpool_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_clearpool_USDC',\n          token:'BB_clearpool_USDC',\n          label:'clearpool USDC BB',\n          address:'0x4D9d9AA17c3fcEA05F20a87fc1991A045561167d'\n        }\n      }\n    },\n    truefi:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        protocol:'truefi',\n        autoFarming:['TRU'],\n        blockNumber:15326147,\n        enabledEnvs: ['beta'],\n        multiCallDisabled:true,\n        // adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_truefi_USDC',\n          address:'0x1f5A97fB665e295303D2F7215bA2160cc5313c8E'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_truefi_USDC',\n          address:'0x62B17c9083Db5941197E83BD385985B8878B58Fb'\n        },\n        Pool:{\n          abi:TruefiPool,\n          name:'Pool_truefi_USDC',\n          address:'0xA991356d261fbaF194463aF6DF8f0464F8f1c742'\n        },\n        modal:{\n          enabled:true,\n          buttonText:'Continue',\n          title:'Truefi exit fee',\n          icon:'images/warning-2.png',\n          id:'modal_truefi_usdc_exit_fee',\n          text:'This strategy is subject to an exit fee between 0.05% and 10% depending on the utilization ratio of the Truefi pool, in addition to the performance fee. Read more at <a href=\"https://docs.truefi.io/faq/dao-managed-pools/pool#what-is-liquid-exit\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://docs.truefi.io/faq/dao-managed-pools/pool#what-is-liquid-exit</a>'\n        },\n        messages:{\n          withdraw:'This strategy is subject to an exit fee between 0.05% and 10% depending on the utilization ratio of the Truefi pool.',\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.truefi.io/pools/0xA991356d261fbaF194463aF6DF8f0464F8f1c742\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Truefi USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            penaltyFee:'liquidExitPenalty'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_truefi_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_truefi_USDC',\n          token:'AA_truefi_USDC',\n          label:'truefi USDC AA',\n          address:'0x868bb78fb045576162B510ba33358C9f93e7959e'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            penaltyFee:'liquidExitPenalty'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_truefi_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_truefi_USDC',\n          token:'BB_truefi_USDC',\n          label:'truefi USDC BB',\n          address:'0x6EdE2522347E6a5A0420F41f42e021246e97B540'\n        }\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport themeDark from \"../theme-dark\";\nimport Web3Provider from \"web3-react\";\nimport Web3Connectors from \"./connectors\"\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport { ThemeProvider, Box, Flex } from \"rimble-ui\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Lazy Loading\n// const Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    availableTranches: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableTranchesNetworks: null,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  web3Connectors = null;\n\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (!this.web3Connectors){\n      this.web3Connectors = new Web3Connectors();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n      this.web3Connectors.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = clear_all ? {} : { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableTranchesNetworks = availableTranches;\n    newState.availableTranches = Object.keys(availableTranches[requiredNetwork]).reduce( (output,protocol) => {\n      const tokens = availableTranches[requiredNetwork][protocol];\n      Object.keys(tokens).forEach( token => {\n        const tokenConfig = tokens[token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (envEnabled){\n          if (!output[protocol]){\n            output[protocol] = {};\n          }\n          output[protocol][token] = tokenConfig;\n        }\n      });\n      return output;\n    },{});\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(this.state.availableTranches && Object.keys(this.state.availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.selectedProtocol = selectedProtocol;\n            newState.availableTokens = this.state.availableTranches;\n            newState.tokenConfig = this.state.availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        // const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        const themeMode = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    const connectors = this.web3Connectors.getConnectors();\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    availableTranches={this.state.availableTranches}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableTranchesNetworks={this.state.availableTranchesNetworks}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        availableTranches={this.state.availableTranches}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route\n                                        path=\"/:section?/:param1?/:param2?/:param3?\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              web3Infura={web3Infura}\n                                              web3Polygon={web3Polygon}\n                                              initAccount={initAccount}\n                                              multiCall={this.multiCall}\n                                              permitClient={permitClient}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              maticPOSClient={maticPOSClient}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              validateAccount={validateAccount}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              contractsNetworks={contractsNetworks}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              networkInitialized={networkInitialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              erc20ForwarderClient={erc20ForwarderClient}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              selectedProtocol={this.state.selectedProtocol}\n                                              userRejectedValidation={userRejectedValidation}\n                                              availableTranches={this.state.availableTranches}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              initContractCustomProvider={initContractCustomProvider}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                              availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Button } from \"rimble-ui\";\nimport theme from \"../theme-dark\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  state = {\n    buttonState:'default'\n  };\n\n  render() {\n    const ctaType = this.props.type || 'primary';\n\n    const buttonProps = Object.assign({\n      fontSize:2,\n      width:'auto',\n      fontWeight:4,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:1,\n      fontFamily:'ctas',\n      border:theme.colors.ctas[ctaType][this.state.buttonState].border,\n      contrastColor:theme.colors.ctas[ctaType][this.state.buttonState].text,\n      mainColor:theme.colors.ctas[ctaType][this.state.buttonState].background\n    },this.props.buttonProps);\n\n    const ButtonComponent = ctaType === 'secondary' ? Button.Outline : Button;\n\n    return (\n       <ButtonComponent\n        {...buttonProps}\n        onMouseEnter={(data, e) => {\n          this.setState({\n            buttonState:'hover'\n          });\n        }}\n        onMouseLeave={(data, e) => {\n          this.setState({\n            buttonState:'default'\n          });\n        }}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </ButtonComponent>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [14, 16, 16, 20, 20, 28, 36, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    ctas: '\"Open Sans\"',\n    labels: '\"Open Sans\"',\n    titles: '\"Open Sans\"',\n    sansSerif: '\"Source Sans Pro\"',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '5px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #C6CBD2', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#FFFFFF',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#CDD0D6',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#FFFFFF',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#CDD0D6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    CTAs\n    */\n    ctaPrimaryText:'#1B1E27',\n    ctas:{\n      primary:{\n        default:{\n          border:'none',\n          text:'#1B1E27',\n          background:'#FFFFFF'\n        },\n        hover:{\n          border:'none',\n          text:'#FFFFFF',\n          background:'#2272C8'\n        }\n      },\n      secondary:{\n        default:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        },\n        hover:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        }\n      }\n    },\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2272C8\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#293243',\n    selectBg: '#293243',\n    backButtonBg: '#FFFFFF',\n    lineChartStroke: '#CDD0D6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#1B1E27',\n    statValue: '#FFFFFF',\n    boxBorder: '#eeeeee',\n    cellTitle: '#CDD0D6',\n    cellText: '#CDD0D6',\n    divider: '#CDD0D6',\n    counter: '#CDD0D6',\n    redeem: '#00a9fe',\n    link: '#FFFFFF',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#C6CBD2',\n    cardBg: '#293243',\n    menuBg: '#293243',\n    menuHover: '#293243',\n    dropdownBg: '#4C5976',\n    flashBg: '#04117B',\n    flashColor: '#eeeeee',\n    cardBgHover: '#4b5a76',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    // cardBgActive: \"#04117B\",\n    // cardBgActive: \"#0c48a4\",\n    cardBgActive: \"#2272C8\",\n    cardBgContrast: \"#293243\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    paused: \"#ff7100\",\n    disabledBg: '#8e8d8d',\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n  },\n  buttons: {\n    primary: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      // use css custom props\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    normal: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__dKXq3\",\"bg-bottom-right\":\"ModalCard_bg-bottom-right__32tBy\",\"bg-noise\":\"ModalCard_bg-noise__1pVkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3sgMk\",\"link\":\"Footer_link__1VFp9\"};","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      color:'primary',\n      textAlign:'center',\n      fontFamily:'titles',\n      lineHeight:'initial',\n    };\n\n    // Get title height\n    const as = this.props.as && Heading[this.props.as] ? this.props.as : 'h1';\n    const titleType = parseInt(as.substr(1));\n\n    // Set font size for h1\n    if (titleType === 1){\n      props.fontSize = [5,6];\n    } else if (titleType>=3){ // Reduce weight for h3...h6\n      props.fontWeight = 3;\n    }\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent =  this.props.component ? this.props.component : Heading[as];\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      right={'0'}\n      zIndex={999}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'dashboardBg'}\n    >\n      <Flex\n        zIndex={1}\n        width={'100%'}\n        height={'100%'}\n        position={'absolute'}\n      >\n        <Flex\n          className={[styles.bg,styles['bg-bottom-right']]}\n        />\n        <Flex\n          className={[styles.bg,styles['bg-noise']]}\n        />\n      </Flex>\n      <Flex\n        zIndex={2}\n        height={'100%'}\n        flex={'1 1 auto'}\n        style={{\n          overflow: 'auto',\n        }}\n        position={'relative'}\n        flexDirection={'column'}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    mb={2}\n    width={1}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '40px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'primary'}\n        textAlign={'center'}\n        fontFamily={'titles'}\n        mt={props.icon ? 2 : 0}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    py={3}\n    px={[0,3]}\n    borderTop={0}\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderColor={'light-gray'}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                whiteSpace:'nowrap',\n                color:this.props.theme.colors.primary,\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontSize={2}\n              fontWeight={3}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__E1F2u\",\"genericSelector\":\"GenericSelector_genericSelector__3epuw\",\"dark\":\"GenericSelector_dark__3Fh8V\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__1c1_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2H7IC\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__1TQOS\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1cH4G\"};","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton.js\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <RoundButton\n        handleClick={this.props.handleClick}\n        buttonProps={{width:'auto',...this.props.buttonProps}}\n      >\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          {\n            this.props.isLoading ? (\n              <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n                <LoadingSpinner />\n              </Flex>\n            ) : this.props.buttonText\n          }\n        </Flex>\n      </RoundButton>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    const textProps = Object.assign({\n      color:'primary',\n      fontFamily:'ctas'\n    },this.props.textProps);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const portfolioChanged = this.props.portfolio ? ((this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio)) : false;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || portfolioChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    let formattedValue = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // console.log('mouseOver',fieldInfo.name,this.props.mouseOver);\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'statusIcon':\n        output = null;\n        if (!!this.props.tokenConfig.disabled) {\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool has been disabled, please redeem your funds`}\n            >\n              <Image src={`images/warning-2.png`} {...fieldProps} />\n            </Tooltip>\n          )\n        } else if (this.state.statusIcon === 'paused') {\n          output = (<Tooltip\n            placement={'top'}\n            message={`Deposits for this pool have been temporarily paused due to Smart-Contract maintenance`}\n          >\n            <Image src={`images/pause.svg`} {...fieldProps} />\n          </Tooltip>)\n        } else {\n          output = (\n            <TrancheField\n              {...this.props}\n              fieldInfo={{\n                ...fieldInfo,\n                name:'experimentalBadge'\n              }}\n            />\n          );\n        }\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.functionsUtil.BNify(this.state[fieldInfo.name]).gt(0) && this.functionsUtil.BNify(this.state[fieldInfo.name]).lte(5000000)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state[fieldInfo.name], 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (!!this.props.tokenConfig.disabled){\n            badgeText = 'Disabled';\n            badgeColor = 'disabledBg';\n          } else if (!this.functionsUtil.BNify(this.state.statusBadge).isNaN() && this.functionsUtil.BNify(this.state.statusBadge).gt(0) && this.functionsUtil.BNify(this.state.statusBadge).lte(5000000)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else if (this.state.statusBadge === 'paused'){\n            badgeText = 'Deposits Paused';\n            badgeColor = 'paused';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getTokenConfig(this.props.tokenConfig.token);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.tokenConfig.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n            mouseOver={this.props.mouseOver}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheAPRSplitRatio':\n        output = this.state[fieldInfo.name];\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n            {\n              (typeof this.props.tokenConfig.adaptiveYieldSplitEnabled === 'undefined' || this.props.tokenConfig.adaptiveYieldSplitEnabled) && (\n                <Tooltip\n                  placement={'top'}\n                  message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n                >\n                  <Image ml={2} src={`images/ays.svg`} height={['1.4em','1.8em']} {...fieldProps} />\n                </Tooltip>\n              )\n            }\n          </Flex>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n      case 'trancheAYS':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n          >\n            <Image src={`images/ays.svg`} height={['1.4em','2em']} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Text, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Text\n        fontWeight={4}\n        color={'cellTitle'}\n        fontSize={['12px',0]}\n        fontFamily={'titles'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Text>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        componentHasChildren = true;\n        CustomComponent = RoundButton;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n        fieldProps.buttonProps = fieldProps;\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    if (fieldInfo.name !== 'button'){\n      fieldProps.fontWeight = 3;\n      fieldProps.fontSize = [0,2];\n    }\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}