{"version":3,"sources":["IconBox/IconBox.js","CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","RoundIconButton/RoundIconButton.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AllocationChart/AllocationChart.js","utilities/components/GenericModal.js","PortfolioEquity/PortfolioEquity.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","TooltipText/TooltipText.js","TransactionField/TransactionField.js","utilities/components/Header.module.scss","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","utilities/components/BuyModal.js","TableRow/TableRow.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","Faquestion/Faquestion.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","ScrollToTop/ScrollToTop.js","Footer/Footer.js","PageNotFound/PageNotFound.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","RoundButton/RoundButton.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","theme-dark.js","utilities/components/ModalCard.module.scss","Footer/Footer.module.scss","Title/Title.js","utilities/components/ModalCard.js","VariationNumber/VariationNumber.js","AssetsUnderManagement/AssetsUnderManagement.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","FlexLoader/FlexLoader.js","colors.js","TrancheField/TrancheField.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ExtLink/ExtLink.js","ImageButton/ImageButton.js"],"names":["IconBox","cardProps","Object","assign","p","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isActive","isVisible","isInteractive","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","alignItems","flexDirection","size","color","name","icon","iconProps","text","mt","fontSize","textAlign","dangerouslySetInnerHTML","__html","textProps","children","Component","CardIconButton","py","width","px","justifyContent","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_6___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_8__","backgroundColor","isDisabled","handleClick","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","my","align","mx","margin","iconBgColor","useIconOnly","borderRadius","mr","isSidebar","theme","colors","transactions","actionBg","redeem","image","src","height","isMobile","imageProps","iconColor","fontWeight","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","unitProps","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","fontFamily","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","RoundIconButton","mainColor","disabled","contrastColor","minWidth","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","GenericSelector","loadComponents","selectedTokenChanged","selectedToken","optionsChanged","JSON","stringify","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","cursor","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","CustomIndicatorSeparator","CustomMenu","zIndex","boxShadow","position","outerColor","selectProps","value","label","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","fonts","sansSerif","cardBg","className","styles","searchInput","themeMode","dark","menuIsOpen","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","_this3","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","v","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","tx","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","status","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","account","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","action","waitText","capitalize","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","labels","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","protocolIcon","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","GenericModal","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","dontShowAgain","componentDidUpdate","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","wrap","_context","prev","next","stop","closeModal","_callee2","_context2","checkboxEnabled","toggleDontShowAgain","setLocalStorage","removeStoredItem","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_8__","closeFunc","Header","pt","title","iconHeight","Body","required","checked","target","_RoundButton_RoundButton_js__WEBPACK_IMPORTED_MODULE_11__","buttonText","React","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","availableTokens","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_callee3","filteredTxs","amountLent","_context3","values","filter","token","BNify","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","timeoutIds","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","resolve","reject","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_callee8","_context8","window","timeoutId","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","twitterIcon","radioBtn","button","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","mouseOver","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","gradientButton","empty","select","selectDark","input","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","initContract","abi","contractInfo","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","_args7","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","_ref4","protocol","protocolConfig","_ref5","protocolToken","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","cdo","CDO","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getOnChainTokenConversionRate","getAccountPortfolio","orderedTokensBalance","depositedTokens","tokensToMigrate","totalBalanceConverted","_ref15","_ref17$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_x9","_ref19","_ref20","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","_x10","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args11","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_callee13","_args13","_context13","idleTokensBalance","getFirstDepositTx","_callee14","deposits","_args14","_context14","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee15","firstDepositTxs","_args15","_context15","reduce","acc","getTrancheUserTransactionsEvents","_ref26","_callee16","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref27","_ref28","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","trancheToken_received","trancheToken_sent","_context16","getContractEvents","_x11","_x12","_x13","_ref29","_callee17","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","trancheTypes","endpoint","etherscanTxlist","_args17","_context17","endpoints","makeEtherscanApiRequest","result","some","getTrancheGaugeConfig","trancheTokenAddresses","trancheType","cdoRewardsContractAddresses","addr","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","stakingContractAddresses","isTrancheReceived","isTrancheSent","returnValues","_x14","getEtherscanTokenTransfers","_ref30","_callee18","walletAddr","fromAddress","toAddress","fromBlock","toBlock","sort","limit","transferEvents","eventFilters","_args18","_context18","_x15","_x16","getTrancheStakingRewardsDistributions","_ref31","_callee20","stakingDistributions","_context20","_ref32","_callee19","transfers","_context19","_x19","_x17","_x18","getTrancheHarvests","_ref33","_callee22","_ref34","_ref35","stakingRewardsDistributions","autoFarming","harvestsList","_context22","_ref36","_callee21","_context21","_x22","_x20","_x21","loadTrancheStrategyContract","_ref37","_callee23","strategyConfig","idleStrategyAddress","_context23","Strategy","genericContractCallCachedTTL","_x23","getTrancheLastHarvest","_ref38","_callee24","harvestEnabled","startBlock","latestHarvestBlock","totalAmount","_context24","_x24","_x25","getGovTokenApr","_ref39","_callee25","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref40","_ref41","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context25","getTokenConfig","_address","apr2apy","apr","apy","_x26","_x27","_x28","_x29","getTrancheRewardTokensInfo","_ref42","_callee27","tokensDistribution","_context27","_ref43","_callee26","firstHarvest","lastBlockInfo","latestHarvest","firstBlockInfo","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref44","_ref45","prevHarvest","_latestHarvest","firstBlock","_ref46","_ref47","poolSize","elapsedBlocks","elapsedSeconds","_context26","rewardsRate","now","genericContractCallCached","getBlockInfo","_x32","_x30","_x31","getTrancheUnlentAmount","_ref48","_callee28","_context28","_x33","_ref49","_callee30","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args30","_context30","_ref50","_callee29","trancheTokenTransferEvent","_ref51","_ref52","blockInfo","tokenConversionRate","_context29","_x36","tokenTransferEvent","trancheTokenAmount","hashKey","trancheTokens","_x34","_x35","getTrancheUserTransactions","_ref53","_callee31","_context31","_x37","_x38","_x39","getTrancheFirstDepositTx","_ref54","_callee32","_context32","_x40","_x41","_x42","getAmountDepositedTranche","_ref55","_callee33","_context33","_x43","_x44","_x45","_ref56","_callee34","_ref57","_ref58","userAvgPrice","_context34","_x46","_x47","getAmountLent","_callee35","amountLents","_args35","_context35","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee41","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref61","_ref62","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args41","_context41","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref63","_callee36","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context36","bridgeType","getTxReceipt","web3Infura","log","hexToNumberString","topics","included","_x48","_ref64","_callee37","_context37","_x49","match","_ref65","_callee38","_context38","_x50","_ref66","_callee39","_context39","_x51","items","to_address","_ref67","_callee40","polygonTx","erc20RootToken","_context40","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x52","getPolygonBaseTxs","_callee42","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args42","_context42","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee43","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args43","_context43","filterEthereumTxs","_callee44","_args44","_context44","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee45","resultData","allAvailableTokens","_args45","_context45","processStoredTxs","_callee46","contractInstance","_context46","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","t1","checkPolygonTransactionIncluded","_ref73","_callee47","_ref74","_ref75","_context47","getTransactionReceipt","_x53","_ref76","_callee48","_args48","_context48","_x54","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref77","_callee49","processTransactions","idleTokensAddresses","_args49","_context49","mappedTx","_x55","_x56","filterEtherscanTxs","_ref78","_callee50","processTxs","_args50","_context50","_x57","_ref79","_callee51","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args51","_context51","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x58","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref80","_callee56","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args56","_context56","baseTokenConfig","baseTokenAddress","_ref81","_callee55","minedTxs","_context55","_ref82","_callee54","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context54","getCurveTokenPrice","_ref83","_callee52","_context52","_x63","_x64","baseTokensConfig","t2","_ref84","_callee53","_context53","_x65","_x66","_x61","_x62","_x60","_x59","_ref85","_callee62","txsToProcess","_args62","_context62","_ref86","_callee61","_context61","_ref87","_callee60","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context60","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref88","_callee57","_context57","_x71","_x72","_ref89","_callee58","_context58","_x73","_x74","oldContract","events","raw","_ref90","_callee59","_context59","_x75","_x76","decodeLog","_token","_x69","_x70","_x68","_x67","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref91","_callee63","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args63","_context63","availableNetworks","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x77","getBestTranche","_callee64","maxApy","trancheStrategyConfig","_args64","_context64","timetamp","splice","availableTranchesNetworks","availableTrancheInfo","tInfo","_ref93","_callee65","error_callback","config","_args65","_context65","post","catch","_x78","_ref94","_callee66","_args66","_context66","_x79","_ref95","_callee67","apiKeyIndex","apiKey","_args67","_context67","_x80","_ref96","_callee68","return_data","_args68","_context68","_x81","makeCachedPostRequest","_ref97","_callee69","_args69","_context69","_x82","code","errorCode","split","getGlobalConfigs","cleanStringify","object","copyWithoutCircularReferences","references","cleanObject","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee70","page","googlePageviewInfo","isOrigin","_args70","_context70","ga","_ref99","_callee72","googleEventsInfo","debugEnabled","originOk","_args72","_context72","analytics","google","addPostfixForTestnet","_ref100","_callee71","_context71","hitCallback","hitCallbackFail","_x84","_x85","_x83","createContract","_ref101","_callee73","_context73","_x86","_x87","_x88","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee76","activeOnly","whitelist","proposals","validProposals","_args76","_context76","_ref103","_callee75","checkedStrategies","_context75","end","author","snapshot","strategies","_ref104","_callee74","tokenContract","_context74","_x90","_x89","getAprsFromApi","_callee77","endpointInfo","aprs","_args77","_context77","_ref106","_callee78","forceStartTimestamp","frequency","order","filteredCachedData","_filteredData","apiInfo","filteredData","_args78","_context78","_x91","getTokenExchangeRate","_ref107","_callee79","exchangeRateParams","exchangeRate","_context79","_x92","_x93","getTokenDecimals","_ref108","_callee80","_context80","_x94","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee81","idleTokenConfig","feeDistributorConfig","_context81","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee82","contractPaused","_args82","_context82","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref111","_callee84","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context84","lastAllocationsPromise","_ref112","_callee83","lastAllocations","_context83","_x96","_x97","alloc","_x95","_ref113","_callee85","oldContractBalance","oldContractTokenDecimals","oldContractName","_context85","_x98","_x99","_ref114","_callee86","eventName","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args86","_context86","getBlockNumber","getContractPastEvents","callEvents","_x100","_x101","_ref115","_callee87","_args87","_context87","getPastEvents","_x102","_x103","estimateMethodGasUsage","_ref116","_callee88","methodParams","_contract$methods","functionCall","gasLimit","_ref117","_ref118","_args88","_context88","getGasPrice","estimateGas","_x104","_x105","_ref119","_callee89","userAddress","signedParameters","callback_receipt","_contract$methods2","_context89","on","once","confirmationNumber","receipt","_x106","_x107","_x108","_x109","_x110","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref120","_callee90","biconomyInfo","res","_context90","limits","apiId","headers","x-api-key","_x111","sendTxWithPermit","_ref121","_callee91","_contract$methods3","messageToSign","_this$getSignaturePar","_context91","encodeABI","personal","sign","_x112","_x113","_x114","_x115","_x116","_x117","buildBiconomyErc20ForwarderTx","_ref122","_callee92","permitType","callData","buildParams","_context92","txGas","erc20ForwarderClient","buildTx","_x118","_x119","_x120","_x121","_x122","_ref123","_callee94","_context94","_ref124","_callee93","_context93","_x124","_x125","_x123","sendBiconomyTxWithErc20Forwarder","_ref125","_callee95","req","metaInfo","txResponse","fetchReceiptIntervalId","_context95","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x126","_x127","_x128","_x129","sendBiconomyTxWithPersonalSign","_ref126","_callee96","_this$getSignaturePar2","_context96","getNonce","_x130","_x131","_x132","_x133","signPermitEIP2612","_ref127","_callee97","erc20Name","owner","spender","deadline","domain","permit","domainData","_context97","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x134","_x135","_x136","_x137","_x138","_x139","_x140","_x141","signPermit","_ref128","_callee98","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args98","_context98","net","getId","nonceMethod","round","pow","allowed","response","_x142","_x143","_x144","_ref129","_callee99","permitParams","methodAbi","useNonce","_args99","_context99","_jsonInterface","f","unshift","_x145","_x146","_x147","_x148","_x149","_x150","_x151","sendSignedTx","_ref130","_callee100","MetaTransaction","dataToSign","_context100","_x152","_x153","_x154","_x155","_x156","checkTokenApproved","_ref131","_callee101","contractAddr","_ref132","_ref133","allowance","_context101","getAllowance","gte","_x157","_x158","_x159","_ref134","_callee102","_context102","_x160","_x161","_x162","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee104","highestValue","_args104","_context104","lendRates","aprInfo","tokenAPR","_ref136","_callee103","_context103","_x163","_ref137","_callee105","_args105","_context105","_x164","_x165","calculateGaugeBoost","_ref138","_callee106","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args106","_context106","workingBalance","getTokenTotalSupply","workingSupply","_x166","_x167","availableGauges","getGaugeWeight","_ref139","_callee107","lastGaugeTimestamp","gaugeWeight","_context107","_x168","getGaugeAbsoluteWeight","_ref140","_callee108","_ref141","_ref142","totalWeight","_context108","_x169","getGaugeNextWeight","_ref143","_callee109","nextGaugeTimestamp","_context109","_x170","getGaugeRewardsTokens","_ref144","_callee110","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndex","rewardTokenAddress","_ref145","_ref146","rewardData","rewardTokenBalance","cdoConfig","_ref147","_ref148","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_args110","_context110","rate","maxRewards","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x171","_ref149","_callee112","_args112","_context112","_ref150","_callee111","tokenGlobalConfig","stakingRewardsContract","_context111","_x174","_x172","_x173","_ref151","_callee113","field","addGovTokens","_args113","_context113","loadTrancheField","_x175","_x176","_x177","_x178","_x179","_x180","_x181","_x182","_ref152","_callee114","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","stakingRewardsEnabled","stakingEnabled","show_idle_apy","idleGovTokenConfig","_ref153","_ref154","totalSupply","virtualPrice","_ref155","_ref156","gaugeBalance","lastPrice1","staked1","totalStaked","_ref157","_ref158","deposited1","lastPrice","_ref159","_ref160","redeemable1","staked2","_ref161","_ref162","earningsStart","trancheApy2","deposited3","earningsEnd","_ref163","_ref164","trancheFee","earningsCounter","feesEnd","feesStart","_ref165","_ref166","deposited4","redeemable3","_ref167","_ref168","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref169","_ref170","_ref171","_ref172","earningsPerc","secondsFromFirstTx","_ref173","_ref174","seniorPool","juniorPool","coverage","strategyApr","_ref175","_ref176","_ref177","_ref178","rewardsTokens","incentiveTokens","_stakingRewards","govTokens","_args114","_context114","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x183","_x184","_x185","_x186","_x187","_x188","_x189","loadAssetField","_ref179","_callee115","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref180","_ref181","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref182","_ref183","amountLentCurve1","redeemableBalanceCurve","_ref184","_ref185","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref186","_ref187","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref188","_ref189","tokenPriceFirstDeposit","_ref190","_ref191","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref192","_ref193","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref194","_ref195","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref196","_ref197","amountLentCurve2","redeemableBalanceCurve1","_ref198","_ref199","redeemableBalance2","_args115","_context115","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x190","_x191","_x192","_x193","getIdleTokenSupply","_ref200","_callee116","idleTokenSupply","_args116","_context116","_x194","getIdleTokenPriceWithFee","_ref201","_callee117","_ref202","_ref203","fee","priceWFee","_args117","_context117","eq","_x195","_x196","_ref204","_callee118","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args118","_context118","_x197","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref205","_callee119","_ref206","_ref207","idleTokensTotalSupply","userShare","_context119","_x198","_x199","openWindow","open","getActiveCoverages","_callee121","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args121","_context121","coverages","_ref209","_callee120","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context120","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x200","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref210","_callee123","incidentsInfo","_ref211","_ref212","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context123","directProps","buyer","_ref213","_callee122","cover","coverId","claimSubmittedEvent","_ref214","_ref215","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref216","_ref217","_context122","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x202","_x201","getBatchedDepositExecutions","_ref218","_callee124","_context124","_x203","getBatchedDeposits","_callee126","filter_by_status","batchDepositConfig","batchedDeposits","_args126","_context126","_ref220","_callee125","currBatchIndex","batchIndex","_ref221","_ref222","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context125","_x204","getETHBalance","_ref223","_callee127","fixDecimals","_args127","_context127","_x205","_ref224","_callee128","_ref225","_ref226","_args128","_context128","ERC20","_x206","_x207","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref227","_callee129","_args129","_context129","_x208","_ref228","_callee130","_args130","_context130","_x209","_ref229","_callee131","_args131","_context131","_x210","_x211","getProtocolBalance","_ref230","_callee132","_context132","_x212","_x213","getAprs","_ref231","_callee133","_context133","addresses","_x214","genericIdleCall","_ref232","_callee134","callParams","_args134","_context134","_x215","_ref233","_callee135","_contract$methods4","_args135","_context135","_x216","_x217","_ref234","_callee137","_args137","_context137","_ref235","_callee136","_context136","_x219","_x220","_x218","getTxDecodedLogs","_ref236","_callee139","logAddr","decodeLogs","internalTransfers","_context139","_ref237","_callee138","_context138","_x225","_x226","_x221","_x222","_x223","_x224","blocksToSeconds","blocks","blocksPerSeconds","_callee140","_context140","_callee141","blockInfoToSave","_args141","_context141","getBlock","genericContractCallCachedTTLNoMulticall","_ref240","_callee142","_args142","_context142","_x227","_x228","_ref241","_callee143","useMultiCall","_args143","_context143","_x229","_x230","_ref242","_callee144","_args144","_context144","_x231","_x232","_ref243","_callee145","_args145","_context145","_x233","_x234","cachedContractCall","_ref244","_callee146","_args146","_context146","_x235","_x236","prepareMulticallData","strip0x","_ref245","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref246","_callee147","decodedParams","_args147","_context147","decodeParameters","returnFields","_x237","_ref247","_callee148","inputTypes","callHash","_args148","_context148","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x238","_x239","_ref248","_callee149","_contract$methods5","_args149","_context149","_x240","_x241","_ref249","_callee150","async","_args150","_context150","_x242","_x243","getUnlentBalance","_ref250","_callee151","unlentBalance","_context151","_x244","_ref251","_callee152","_args152","_context152","_x245","getLastAllocations","_ref252","_callee154","tokenAllocations","_context154","_ref253","_callee153","_context153","_x247","_x248","_x246","_ref254","_callee155","protocolsAprs","_ref255","_ref256","govTokensBalances","_args155","_context155","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","total","_x249","getPoolTokenPrice","_ref257","_callee156","protocolContract","_ref258","_ref259","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref260","_ref261","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_args156","_context156","_x250","getSushiswapPoolTokenPrice","_ref262","_callee157","_ref263","_ref264","_ref265","_ref266","_context157","getSushiswapConversionRate","_x251","getSushiswapConversionRate_old","_ref267","_callee158","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context158","_x252","_x253","getCustomProtocolConversionRate","_ref268","_callee159","useWETH","forceTokenConfig","invertTokens","routerMethod","underlyingTokenConfig","unires","_args159","_context159","addressForPrice","conversionRateForceToken","conversionRateDirectConversion","conversionRateInvertTokens","conversionRouterMethod","_x254","_x255","getQuickswapConversionRate","_ref269","_callee160","_args160","_context160","_x256","_x257","_ref270","_callee161","_args161","_context161","_x258","_x259","_ref271","_callee162","_args162","_context162","_x260","_x261","getCurveDepositedTokens","_ref272","_callee163","idleTokensBalances","remainingCurveTokens","_args163","_context163","_x262","getCurveUnevenTokenAmounts","_ref273","_callee164","amounts","max_burn_amount","unevenAmounts","_context164","getCurveDepositContract","_x263","_x264","_callee165","curveRatesInfo","_args165","_context165","_callee166","_context166","strategyTokens","getCurveAPYContract","_callee167","blocksForPrevTokenPrice","_ref277","_ref278","prevTokenPrice","blocksMultiplier","curveAPR","_context167","getCurveTokenSupply","_callee168","_context168","getCurvePoolContract","_callee169","_args169","_context169","_callee170","_args170","_context170","_ref282","_callee171","_ref283","_ref284","_context171","_x265","_callee172","depositContractInfo","_context172","getCurveZapContract","_callee173","zapContractInfo","_context173","_callee174","poolContractInfo","_context174","getCurveSwapContract","_callee175","migrationContractInfo","_context175","getCurveIdleTokensAmounts","_callee177","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args177","_context177","_ref290","_callee176","coinIndex","curveIdleTokens","_context176","migrationParams","_x266","getCurveTokensAmounts","_callee179","useCoinIndex","_args179","_context179","_ref292","_callee178","_ref293","_ref294","idleTokenPrice","totalTokenSupply","_context178","_x267","getCurveAmounts","_ref295","_callee181","_args181","_context181","_ref296","_callee180","_context180","_x270","_x268","_x269","getCurveTokenAmount","_ref297","_callee182","_args182","_context182","_x271","getCurveSlippage","_ref298","_callee183","uneven_amounts","depositContract","_ref299","_ref300","Sv","_args183","_context183","_x272","_x273","_ref301","_callee184","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref302","_ref303","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args184","_context184","IAaveIncentivesController","emissionPerSecond","_x274","_callee186","_args186","_context186","_ref305","_callee185","_ref306","_ref307","_context185","_x275","getWMaticApr","_ref308","_callee187","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args187","_context187","_x276","_x277","getStkAaveApr","_ref309","_callee188","aaveConversionRate","stkAaveAPR","stkAaveValue","_args188","_context188","_x278","_x279","getCompAPR","_ref310","_callee189","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args189","_context189","_x280","_x281","getCompSpeed","_ref311","_callee190","cTokenAddress","compSpeed","_context190","_x282","_ref312","_callee191","cTokenInfo","compoundAllocationPerc","_ref313","_ref314","cTokenTotalSupply","compoundPoolShare","_args191","_context191","_x283","_callee193","_args193","_context193","_ref316","_callee192","_ref317","_ref318","_context192","_x284","_callee195","_args195","_context195","_ref320","_callee194","_ref321","_ref322","compApr","_context194","_x285","getTokensCsv","_callee198","csv","_context198","prototype","sum","pv","cv","avg","_ref324","_callee197","_context197","_ref325","_callee196","rates","header","rows","aprAvg","scoreAvg","lastRow","_context196","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x287","_x286","_callee200","convertToken","_args200","_context200","_ref327","_callee199","compTokenBalance","_context199","_x288","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref328","_callee202","govTokensUserDistribution","_args202","_context202","_ref329","_callee201","_context201","_x290","_x289","getGovTokensDistributionSpeed","_ref330","_callee204","govTokensDistribution","_args204","_context204","_ref331","_callee203","govSpeed","_context203","_x292","_x291","getGovTokensAprs","_ref332","_callee206","govTokensAprs","_args206","_context206","_ref333","_callee205","_ref334","_ref335","_ref336","_ref337","cTokenConfig","_context205","aprTooltipMode","_x295","_x293","_x294","_callee208","_args208","_context208","_ref339","_callee207","govTokenBalance","fromTokenConfig","_context207","_x296","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee209","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args209","_context209","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref341","_callee211","govTokensAmounts","_context211","getGovTokensUserAmounts","_ref342","_callee210","govTokenIndex","govTokenAddress","_context210","getGovTokenAddessByIndex","_x299","_x300","_x297","_x298","_ref343","_callee212","_context212","_x301","_x302","_ref344","_callee213","_context213","_x303","_x304","_callee216","govTokenConfigForced","_args216","_context216","_ref346","_callee215","_context215","_ref347","_callee214","_context214","_x306","_x307","_x305","getTokenFees","_callee217","_args217","_context217","_callee218","_ref350","_ref351","feePercentage","gain","fees","_args218","_context218","_ref352","_callee219","_args219","_context219","_x308","getTotalTVL","_callee220","tokensTVL","_context220","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee224","_context224","_ref355","_callee223","_context223","_ref356","_callee222","oldTokenTVL","idleTokenName","_ref357","_ref358","oldTokenConfig","_ref362","_ref363","oldTokenPrice","oldTotalSupply","_context222","showAUM","_ref359","_callee221","_ref360","_ref361","govTokenConversionRate","govTokenBalanceConverted","_context221","_x311","oldProtocols","oldProtocol","protocolPos","_x310","_x309","getSubstackLatestFeed","_callee225","idleSubstackFeed","latestFeed","_context225","getTrancheAggregatedStats","_callee229","totalAUM","_args229","_context229","_ref366","_callee228","_context228","_ref367","_callee227","_context227","_ref368","_callee226","_ref369","_ref370","_context226","_x314","_x313","_x312","getAggregatedStats","_callee231","allNetworks","networkIds","callsFailed","tvls","_args231","_context231","_ref372","_callee230","_context230","_x315","getAggregatedStats_chain","_callee236","avgAPR","_args236","_context236","availableStrategiesNetworks","_ref374","_callee235","_context235","_ref375","_callee234","_context234","_ref376","_callee233","tokenAUM","_context233","_ref377","_callee232","_ref378","_ref379","_context232","_x319","_x318","_x317","_x316","getTokenApy","_ref380","_callee237","_context237","_x320","getTokensToMigrate","_callee240","_args240","_context240","_ref382","_callee239","_context239","_ref383","_callee238","_ref384","_context238","_x322","_x321","getProtocolsTokensBalances","_callee242","tokenBalances","minTokenBalance","protocolsTokens","_args242","_context242","_ref386","_callee241","_context241","_x323","getTokenConversionRateField","getTrancheTokenConversionRate","_ref387","_callee243","trancheTokenConfig","trancheTokenConversionRate","_args243","_context243","isPoolToken","conversionRateProtocolContract","_x324","_ref388","_callee244","_args244","_context244","_x325","_x326","_ref389","_callee245","_args245","_context245","_x327","_x328","_x329","getAvgAPYStats","_ref390","_callee246","apiResults","_args246","_context246","_x330","_x331","_ref391","_callee247","statsTokenConfig","ToTokenConfig","_args247","_context247","addressForPriceFrom","conversionRateUseWETH","_x332","_ref392","_callee248","count","_conversionRate","_args248","_context248","_x333","_x334","getTokenScore","_ref393","_callee249","_ref394","_ref395","tokenScore","_context249","protocolScore","getTokenScoreApi","_x335","_x336","_ref396","_callee250","scores","_context250","_x337","_x338","_ref397","_callee251","idleGovTokenShowAPR","idleAPR","_args251","_context251","_x339","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","defaultOpacity","hidden","clickable","rainbow","DashboardCardContext","createContext","DashboardCard","isClickable","isRainbow","active","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","_Title_Title__WEBPACK_IMPORTED_MODULE_5__","as","lineHeight","titleProps","description","Provider","Consumer","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","goBack","preventDefault","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","bg","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","TableRow","FieldComponent","fieldComponent","hasClickFunction","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","allowZeroValue","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","getPermitTransactionParams","getTransactionParams_async","eventValue","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","checkPermit","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","nextProps","nextState","stateChanged","contractsChanged","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","voteUserSlope","claimableRewards","oldPowerUsed","power","loadGauges","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","gaugeDistributionRatePerSecond","userBoostedShare","_this7","userDistributionRate","idleApy","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","_this8","votingWeight","depositedAmount","withdrawnAmount","_this9","votingPowerPercentage","gaugeAddress","_this10","setSelectedAction","setStakeAction","setClaimToken","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","Title","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","Faquestion","isShowingAnswer","isOpened","h4","question","answer","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","src_Faquestion_Faquestion","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","ModalCard","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","flexBasis","TrancheField","showSelectButton","selectTrancheType","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","lastHarvest","unlentAmount","stakeEnabled","unstakeEnabled","trancheBaseApy","allowAAWithdraw","allowBBWithdraw","modalAction","poolUtilizationRate","selectedTrancheOption","selectedStakeAction","maxPoolUtilizationRateReached","penaltyFee","Pool","_referral","getReferralAddress","referralEnabled","trancheTokenToRedeem","checkModal","selectedActionChanged","selectedStakeActionChanged","modal","utilizationRate","maxUtilizationRate","isStake","isDeposit","isWithdraw","maxPoolUtilizationRateReachedText","withdrawEnabled","showReferral","modalEnabled","option","selectTranche","borderTop","ImageButton","unstakeWithBalance","unstake","contractApprovedCallback","messages","buyInstructions","PortfolioEquityTranches","transactionsList","walletProvider","subgraphEnabled","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","blocksTimestamps","conversionRateBlocksCalls","conversionRatesTimestamps","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","lastUpdate","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","availableTranchesChanged","param3","tranchesTvls","tvl","tranchesOrdering","loadQueryParams","then","defineProperty","depositedCdos","tranchesTokens","tranchesBalances","tranchesConfig","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","isDashboard","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","bestYieldDisabledMessage","aysShort","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","themeTogglerEnabled","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","QuickswapRouter","QuickswapV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","hex","rgb","bubble","stake","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","enabledStatsNetworks","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","FRAX3CRV","MIM3CRV","DQUICK","CXETHWETH","ALUSD3CRV","MUSD3CRV","PBTCCRV","MUSD","ANGLE","PNT","3EUR","STECRV","SPELL","CPOOL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","FEI","TRU","AGEUR","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","lido","quickswap","convex","mstable","euler","wintermute","clearpool","truefi","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","secondsPerDay","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","polygonscan","REACT_APP_POLYGONSCAN_KEY","REACT_APP_POLYGONSCAN_KEY2","REACT_APP_POLYGONSCAN_KEY3","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","stETH","LiquidityGauge","multiRewards","steCRV","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","orderedTranches","protocolTranches","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageDepositKey","disabledMessageRedeemKey","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","Web3Connectors","setNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","attempsTimeoutIds","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","maxCount","_args","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","h2","RimbleUtil","isMobileDevice","bold","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","checkGnosisSafeNetwork","currentSafeNetworkId","handleNetworkChanged","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyEnabled","biconomyWeb3Provider","_args8","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args9","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref21","balanceOf","determineAccountLowBalance","openConnectionModal","defaultNetworkID","defaultWeb3","_args22","getNetworkType","getNetworkId","currentNetworkChanged","_args24","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args25","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","ScrollToTop","pathname","useLocation","useEffect","currYear","getFullYear","governanceEnabled","columnWidth","footer","role","aria-label","PageNotFound","h1","Header_styles","src_Footer_Footer","IdleCDOPolygon","IdleStrategy","TrancheStakingRewards","IdleCDO","IdleCDOTrancheRewards","adaptiveYieldSplitEnabled","levUSDC","Clearpool","TruefiPool","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","node","Dashboard","lazy","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","web3Connectors","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","getConnectors","dist_default","web3Api","libraryName","dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","buttonState","ctaType","ctas","ButtonComponent","Button","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","titles","ctaPrimaryText","hover","secondary","dropdownBg","flashBg","cardBgActive","paused","disabledBg","exit","bg-bottom-right","bg-noise","titleType","HeadingComponent","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","subtitleProps","BackButton","VariationNumber","IconDirection","iconPos","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_10__","lineWidth","react__WEBPACK_IMPORTED_MODULE_13___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_20__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_21__","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","trancheChanged","protocolChanged","fieldChanged","formattedValue","rimble_ui__WEBPACK_IMPORTED_MODULE_22__","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_17__","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_15__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_12___default","_isBigNumber","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_16__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_19__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_14__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_dashboard_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_19__","earningsCurve","tooltipMode","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_20__"],"mappings":"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","file":"static/js/main.5545cded.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3],\n        justifyContent:'center'\n      },\n      this.props.cardProps\n    );\n\n    const textProps = {...this.props.textProps};\n    if (this.props.isActive){\n      textProps.color = 'primary';\n    }\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        backgroundColor={\"blue\"}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align || \"center\"}\n          mx={this.props.margin ? this.props.margin : 0}\n        >\n          {\n            this.props.iconBgColor && !this.props.useIconOnly ? (\n              <Flex\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                backgroundColor={this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem}\n              >\n                {\n                  this.props.image ? (\n                    <Image\n                      align={\"center\"}\n                      src={this.props.image}\n                      height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      {...this.props.imageProps}\n                    />\n                  ) : (\n                    <Icon\n                      align={\"center\"}\n                      name={this.props.icon}\n                      size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                      color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                      {...this.props.iconProps}\n                    />\n                  )\n                }\n              </Flex>\n            ) : this.props.image ? (\n              <Image\n                mr={1}\n                align={\"center\"}\n                src={this.props.image}\n                height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                {...this.props.imageProps}\n              />\n            ) : this.props.icon && (\n              <Icon\n                mr={1}\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"primary\"}\n                {...this.props.iconProps}\n              />\n            )\n          }\n          <Text\n            fontWeight={3}\n            fontSize={[1, 2]}\n            {...textProps}\n          >\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__AZvaE\",\"mobile\":\"TrancheWelcome_mobile__8mpVx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__2_KWY\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__KcFts\",\"bgContainer\":\"PageNotFound_bgContainer__31oWs\",\"list\":\"PageNotFound_list__lpaEt\",\"textContainer\":\"PageNotFound_textContainer__IPqbe\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'primary'}\n             fontFamily={'titles'}\n             hoverColor={'primary'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  fontFamily={'titles'}\n                  hoverColor={'primary'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'primary' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      justifyContent:'center',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled,\n      contrastColor:'ctaPrimaryText'\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n        type={'primary'}\n        buttonProps={buttonProps}\n        handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'ctaPrimaryText'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      // if (props.menuIsOpen) {\n      //   cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      // }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"dropdownBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    // console.log(this.props.eventData,{\n    //   eventCategory: 'Transaction',\n    //   eventLabel: this.props.methodName,\n    //   eventAction: this.props.contractName,\n    //   ...this.props.eventData\n    // });\n\n    const callback = (tx,error) => {\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName,\n        ...this.props.eventData\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.svg`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex, Checkbox } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass GenericModal extends React.Component {\n\n  state = {\n    dontShowAgain:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    if (!this.props.checkboxEnabled){\n      this.toggleDontShowAgain(true)\n    }\n    this.props.closeModal();\n  }\n\n  toggleDontShowAgain = (dontShowAgain) => {\n    if (dontShowAgain){\n      this.functionsUtil.setLocalStorage(this.props.id,'true');\n    } else {\n      this.functionsUtil.removeStoredItem(this.props.id);\n    }\n\n    this.setState({\n      dontShowAgain\n    });\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            icon={this.props.icon}\n            title={this.props.title}\n            iconHeight={this.props.iconHeight || '40px'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n                dangerouslySetInnerHTML={{\n                  __html: this.props.text\n                }}\n              />\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.props.checkboxEnabled && (\n                  <Checkbox\n                    mb={3}\n                    required={false}\n                    color={'mid-gray'}\n                    checked={this.state.dontShowAgain}\n                    label={`Don't show this popup again`}\n                    onChange={ e => this.toggleDontShowAgain(e.target.checked) }\n                  />\n                )\n              }\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                {this.props.buttonText}\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default GenericModal;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  timeoutIds = [];\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    this.timeoutIds.forEach( timeoutId => window.clearTimeout(timeoutId) );\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        this.timeoutIds.push(setTimeout(()=>{this.updateProgressBar()},1000));\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          this.timeoutIds.push(window.setTimeout(() => {\n            this.initProgressBar();\n          },1000));\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__FSkvs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__XFIHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__3gfAx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__22U7L\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__XwnoZ\",\"empty\":\"Header_empty__sl23U\",\"select\":\"Header_select__3MUn8\",\"selectDark\":\"Header_selectDark__2UhPg\",\"input\":\"Header_input__33yby\"};","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    // console.log('setProps',props.contracts);\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name.toLowerCase() === contractName.toLowerCase());\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  initContract = async (contractName,address,abi) => {\n    const contractInfo = await this.props.initContract(contractName, address, abi);\n    const contractFound = this.getContractByName(contractName);\n    if (!contractFound && contractInfo){\n      this.props.contracts.push(contractInfo);\n    }\n    return contractInfo;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (protocolToken) => {\n        const tokenConfig = protocolConfig[protocolToken];\n        const token = tokenConfig.token;\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,18);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,18);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,18).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  cdo:tokenConfig.CDO.name,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,'trancheStakedBalance',trancheStakedBalance.toFixed(),'amountDeposited',amountDeposited.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheEarnings',trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig && rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getOnChainTokenConversionRate(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits,\n      trancheToken_received,\n      trancheToken_sent\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { to: [this.props.account] } })\n    ]);\n\n    // console.log('getTrancheUserTransactionsEvents',account,tokenConfig.token,trancheToken_transfers_in,trancheToken_transfers_out);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    if (trancheToken_received){\n      trancheToken_received.forEach( tx => {\n        tx.type = 'trancheReceived';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_received = [];\n    }\n\n    if (trancheToken_sent){\n      trancheToken_sent.forEach( tx => {\n        tx.type = 'trancheSent';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_sent = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const trancheTypes = trancheConfig_filter ? [trancheConfig_filter.tranche] : Object.keys(this.getGlobalConfig(['tranches']));\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n\n          const gaugeConfig = this.getTrancheGaugeConfig(tokenConfig.protocol,tokenConfig.token);\n\n          const trancheTokenAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n          const cdoRewardsContractAddresses = trancheTypes.map( trancheType => (tokenConfig[trancheType].CDORewards.address.toLowerCase()) ).filter( addr => addr !== '0x0000000000000000000000000000000000000000' );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          const stakingContractAddresses = cdoRewardsContractAddresses;\n          if (gaugeConfig){\n            stakingContractAddresses.push(gaugeConfig.address.toLowerCase());\n          }\n\n          const isTrancheReceived = tx.from.toLowerCase() !== '0x0000000000000000000000000000000000000000' && !stakingContractAddresses.includes(tx.from.toLowerCase()) && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheSent = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() !== '0x0000000000000000000000000000000000000000' && !stakingContractAddresses.includes(tx.to.toLowerCase());\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          } else if (isTrancheReceived){\n            type = 'trancheReceived';\n          } else if (isTrancheSent){\n            type = 'trancheSent';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          // if (type){\n          //   console.log('tx',tokenConfig.token,tx.hash,tx.from,tx.to,stakingContractAddresses,type);\n          // }\n\n          return type;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress=null,contractAddress,toAddress,fromBlock=0,toBlock='latest',sort='asc',limit=null) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    let endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=${sort}`;\n    if (limit && parseInt(limit)>0){\n      endpoint = endpoint+`&limit=${limit}`;\n    }\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => ((!fromAddress || tx.from.toLowerCase() === fromAddress.toLowerCase()) && tx.to.toLowerCase() === toAddress.toLowerCase()));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  loadTrancheStrategyContract = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = strategyConfig.address || await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress){\n      await this.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      return idleStrategyAddress;\n    }\n    return false;\n  }\n  getTrancheLastHarvest = async (tokenConfig,trancheConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    const harvestEnabled = strategyConfig.harvestEnabled === undefined ? true : strategyConfig.harvestEnabled;\n    const autoFarming = await this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n\n    if (!harvestEnabled || (!autoFarming || !Object.keys(autoFarming).length)){\n      return null;\n    }\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.loadTrancheStrategyContract(tokenConfig);\n\n    if (idleStrategyAddress) {\n      let limit = null;\n      let startBlock = tokenConfig.blockNumber;\n      let latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n\n      if (!latestHarvestBlock || !parseInt(latestHarvestBlock)){\n        return null;\n      }\n\n      startBlock = latestHarvestBlock;\n      latestHarvestBlock++;\n\n      let transfers = await this.getEtherscanTokenTransfers(tokenConfig.token, idleStrategyAddress, null, tokenConfig.address, idleStrategyAddress, startBlock, latestHarvestBlock, 'desc', limit);\n\n      if (transfers && transfers.length) {\n\n        if (limit){\n          transfers = transfers.slice(0,limit);\n        }\n\n        let timestamp = null;\n        const totalAmount = transfers.reduce( (amount,t) => {\n          if (!timestamp){\n            timestamp = t.timeStamp;\n          }\n          amount = amount.plus(this.BNify(t.returnValues.value));\n          return amount;\n        },this.BNify(0));\n\n        return {\n          timestamp,\n          amount:totalAmount,\n          blockNumber:latestHarvestBlock,\n          transactionHash:transfers[0].transactionHash\n        };\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      poolSupply,\n      conversionRate,\n    ] = await Promise.all([\n      this.convertTrancheTokenBalance(poolSupply,poolTokenConfig),\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n    ]);\n\n    // console.log('getGovTokenApr',govToken,govTokenConfig,poolTokenConfig.token,poolSupply.toFixed(),conversionRate.toFixed());\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let firstBlockInfo = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      // let firstBlockPoolSize = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getTokenConfig(token);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length >= 2) {\n          const prevHarvest = transfers[transfers.length - 2];\n          const latestHarvest = transfers[transfers.length - 1];\n          \n          const firstBlock = prevHarvest.blockNumber;\n          [\n            firstBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            // firstBlockPoolSize,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getOnChainTokenConversionRate(govTokenConfig),\n            // this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, firstBlock),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (firstBlockInfo && lastBlockInfo) {\n            lastBlockPoolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            let poolSize = lastBlockPoolSize;\n\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - firstBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            // totalAmount = transfers.reduce((total, t) => {\n            //   total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n            //   return total;\n            // }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              prevHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n\n            // console.log(token, prevHarvest.hash, latestHarvest.hash, (conversionRate? conversionRate.toFixed():null), totalAmount.toFixed(),elapsedSeconds,tokensPerYear.toFixed(),convertedTokensPerYear.toFixed(),poolSize.toFixed(),tokenApr.toFixed());\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUnlentAmount = async (tokenConfig) => {\n    return await this.getTokenBalance(tokenConfig.token, tokenConfig.CDO.address);\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem','trancheReceived','trancheSent'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      // const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n      const [\n        blockInfo,\n        tokenConversionRate,\n        tranchePrice\n      ] = await Promise.all([\n        this.getBlockInfo(trancheTokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,trancheTokenTransferEvent.blockNumber),\n        this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address], {}, trancheTokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[trancheTokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tranchePrice,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      // if (!tokenTransferEvent) {\n      //   return;\n      // }\n\n      const tranchePrice = this.fixTokenDecimals(blocksInfo[trancheTokenTransferEvent.blockNumber].tranchePrice, tokenConfig.decimals);\n\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n      const tokenAmount = tokenTransferEvent ? this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals) : trancheTokenAmount.times(tranchePrice);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed());\n\n      // const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[trancheTokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${trancheTokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        cdo: tokenConfig.CDO.name,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: trancheTokenTransferEvent.transactionHash,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n        blockNumber: trancheTokenTransferEvent.blockNumber,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[trancheTokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      // if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      if (['trancheDeposit','trancheReceived'].includes(trancheTokenTransferEvent.type)) {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      // } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n      } else if (['trancheRedeem','trancheSent'].includes(trancheTokenTransferEvent.type)) {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        \n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = totalAmountDeposited.gt(0) ? avgBuyPrice.div(totalAmountDeposited) : this.BNify(0);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = this.props.maticPOSClient ? await this.props.maticPOSClient.isCheckPointed(polygonTx.hash) : false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included && this.props.maticPOSClient){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetwork();\n    const requiredNetworkId = requiredNetwork.id;\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', requiredNetwork.explorer]);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetworkId]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    // const currentNetwork = this.getRequiredNetwork();\n    const resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        txs = await this.filterEthereumTxs(results, allAvailableTokens);\n        \n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled || !subgraphConfig.availableNetworks.includes(requiredNetworkId)){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n    const networkId = this.getRequiredNetworkId();\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    if (!subgraphConfig.availableNetworks.includes(networkId)){\n      return null;\n    }\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n\n    let results = [];\n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n    if (!size){\n      return false;\n    }\n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    if (!results || !results.length){\n      return null;\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranchesNetworks[networkId]).forEach( protocol => {\n      Object.keys(this.props.availableTranchesNetworks[networkId][protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  cleanStringify = (object) => {\n    if (object && typeof object === 'object') {\n      object = copyWithoutCircularReferences([object], object);\n    }\n    return JSON.stringify(object);\n\n    function copyWithoutCircularReferences(references, object) {\n      var cleanObject = {};\n      Object.keys(object).forEach(function(key) {\n        var value = object[key];\n        if (value && typeof value === 'object') {\n          if (references.indexOf(value) < 0) {\n            references.push(value);\n            cleanObject[key] = copyWithoutCircularReferences(references, value);\n            references.pop();\n          } else {\n            cleanObject[key] = '###_Circular_###';\n          }\n        } else if (typeof value !== 'function') {\n          cleanObject[key] = value;\n        }\n      });\n      return cleanObject;\n    }\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,callEvents) => {\n      callEvents.forEach( e => {\n        if (e){\n          events.push(e);\n        }\n      });\n      // events = events.concat(callEvents);\n      return events;\n    },[]);\n  }\n\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    if (!permitConfig.nonceMethod || !baseContract.methods[permitConfig.nonceMethod]){\n      return false;\n    }\n\n    // console.log('signPermit',baseContractName,baseContract,baseContract.methods,permitConfig.nonceMethod);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = await baseContract.methods[permitConfig.nonceMethod](holder).call();\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    // console.log('checkTokenApproved', contractName, contractAddr, walletAddr, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    // const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}_${methodName}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTrancheStakedBalance (CACHED)',cachedDataKey,cachedData)\n\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return stakedBalance;\n        // return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim,\n      workingSupply:working_supply\n    };\n  }\n  getTrancheGaugeConfig = (protocol, token) => {\n    const availableGauges = this.getGlobalConfig(['tools','gauges','props','availableGauges'])\n    const gaugeToken = Object.keys(availableGauges).find( gaugeToken => availableGauges[gaugeToken].protocol.toLowerCase() === protocol.toLowerCase() && gaugeToken.toLowerCase() === token.toLowerCase() );\n    if (gaugeToken){\n      return availableGauges[gaugeToken];\n    }\n    return null;\n  }\n  getGaugeWeight = async (gaugeConfig) => {\n    const currTimestamp = parseInt(Date.now()/1000);\n    let lastGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    if (!lastGaugeTimestamp){\n      lastGaugeTimestamp = currTimestamp;\n    }\n\n    const params = [gaugeConfig.address];\n\n    if (lastGaugeTimestamp<currTimestamp){\n      params.push(lastGaugeTimestamp);\n    }\n\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',params);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeAbsoluteWeight = async (gaugeConfig) => {\n    let [\n      totalWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      this.genericContractCall('GaugeController','get_total_weight'),\n      this.genericContractCall('GaugeController','get_gauge_weight',[gaugeConfig.address])\n    ]);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    totalWeight = this.fixTokenDecimals(totalWeight,19);\n\n    return this.normalizeTokenAmount(gaugeWeight.div(totalWeight),18);\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    let gaugeWeight = await this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp]);\n\n    // console.log('getGaugeNextWeight',gaugeConfig.protocol,gaugeConfig.underlyingToken,gaugeConfig.address,blockInfo.timestamp,nextGaugeTimestamp,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN() || gaugeWeight.lte(0)){\n      gaugeWeight = await this.getGaugeAbsoluteWeight(gaugeConfig);\n    }\n\n    // if (gaugeWeight.isNaN()){\n    //   gaugeWeight = await this.getGaugeWeight(gaugeConfig);\n    // }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      for (let tokenIndex=0; tokenIndex<multiRewardsConfig.maxRewards; tokenIndex++){\n      // await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      };\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getTokenConfig(tokenConfig.token);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n      if (!methodAbi){\n        return;\n      }\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let paused = false;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = tokenConfig.multiCallDisabled === undefined ? true : tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n\n    const tokenName = this.getTokenConfig(tokenConfig.token).label || this.capitalize(tokenConfig.token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n\n    const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = gaugeConfig || (stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false);\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    await this.loadTrancheStrategyContract(tokenConfig);\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = '$ '+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n\n      case 'seniorPoolConvertedNoLabel':\n        output = await this.loadTrancheField('poolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolConvertedNoLabel':\n        output = await this.loadTrancheField('poolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.fixTokenDecimals(output, 5);\n        }\n\n        if (this.BNify(output).isNaN()) {\n          output = this.BNify(0);\n        }\n\n        if (formatValue){\n          output = output.times(100)+'%';\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, tokenConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        if (stakingEnabled){\n          let [\n            gaugeBalance,\n            lastPrice1,\n            staked1\n          ] = await Promise.all([\n            gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n            this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals, trancheConfig.functions.stakedBalance)\n          ]);\n\n          let totalStaked = this.BNify(0);\n          if (staked1){\n            totalStaked = totalStaked.plus(staked1);\n          }\n          if (gaugeBalance){\n            totalStaked = totalStaked.plus(gaugeBalance);\n          }\n\n          if (!totalStaked.isNaN() && lastPrice1) {\n            output = this.BNify(totalStaked).times(lastPrice1);\n            // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n            if (formatValue) {\n              output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n            }\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'seniorCoverage':\n        const [\n          seniorPool,\n          juniorPool\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('tranchePoolConverted', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false),\n        ]);\n\n        output = '0%';\n        if (this.BNify(seniorPool).gt(0) && this.BNify(juniorPool).gt(0)){\n          // output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          // output = '$'+this.abbreviateNumber(juniorPool, decimals, maxPrecision, minPrecision)\n          let coverage = juniorPool.div(seniorPool);\n          \n          if (this.BNify(coverage).isNaN()){\n            coverage = this.BNify(0);\n          }\n\n          if (formatValue){\n            output = '$1 is covered by $'+this.abbreviateNumber(coverage, decimals, maxPrecision, minPrecision)\n          } else {\n            output = this.BNify(juniorPool).div(seniorPool).times(100).toFixed(0)+'%';\n          }\n        }\n      break;\n      case 'strategyApr':\n        output = await this.genericContractCallCached(tokenConfig.Strategy.name,'getApr');\n        if (!output){\n          output = 0;\n        }\n        output = this.fixTokenDecimals(output,18);\n        if (formatValue){\n          output = output.toFixed(decimals) + '%';\n        }\n      break;\n      case 'apyBoost':\n        let strategyApr = 0;\n        [\n          trancheApy,\n          strategyApr\n        ] =  await Promise.all([\n          this.loadTrancheFieldRaw('trancheApy', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n          this.loadTrancheFieldRaw('strategyApr', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, formatValue, false),\n        ]);\n\n        // console.log('trancheApy' ,this.BNify(trancheApy).toString(), 'strategyApr', this.BNify(strategyApr).toString());\n\n        output = this.BNify(strategyApr).gt(0) ? this.BNify(trancheApy).div(this.BNify(strategyApr)) : this.BNify(0);\n\n        if (formatValue){\n          output = `${output.toFixed(1)}x`;// (${strategyApr.toFixed(2)}%)`;\n        }\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toFixed(0)+\"/\"+(100-output).toFixed(0);\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusIcon':\n        paused = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'paused');\n        if (paused){\n          output = 'paused';\n        }\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        paused = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'paused');\n        if (paused){\n          output = 'paused';\n        } else {\n          output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'limit', 3600);\n          if (output){\n            output = this.fixTokenDecimals(output, tokenConfig.decimals);\n\n            if (field === 'trancheLimit'){\n              if (output.gt(0)){\n                if (formatValue) {\n                  output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n                }\n              } else {\n                output = this.BNify(0);\n                if (formatValue){\n                  output = 'None';\n                }\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : null));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getTokenConfig(govToken);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getTokenConfig(contractName);\n      if (tokenConfig){\n        await this.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getPoolTokenPrice = async (contractName, protocolContract=null) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getOnChainTokenConversionRate(token0_config, 'latest', protocolContract),\n        this.getOnChainTokenConversionRate(token1_config, 'latest', protocolContract)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log('getPoolTokenPrice',contractName,protocolContract,token0_address,token1_address,token0_price.toFixed(),token1_price.toFixed(),poolTokenPrice.toFixed());\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      totalSupply,\n      token0_address,\n      token1_address,\n      poolReserves\n    ] = await Promise.all([\n      this.getTokenTotalSupply(contractName),\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate_old = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n\n  getCustomProtocolConversionRate = async (tokenConfigFrom, tokenConfigDest, protocolContract=null, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = {...tokenConfigDest};\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Force token from - in case DAI doesn't exist\n    if (tokenConfigDest.conversionRateForceToken){\n      const forceTokenConfig = this.getTokenConfig(tokenConfigDest.conversionRateForceToken);\n      if (forceTokenConfig){\n        tokenConfigFrom = forceTokenConfig;\n      }\n    }\n\n    // Check if has to convert without passing through WETH\n    if (typeof tokenConfigDest.conversionRateDirectConversion !== 'undefined'){\n      useWETH = useWETH && !tokenConfigDest.conversionRateDirectConversion;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `customProtocolConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const invertTokens = !!tokenConfigDest.conversionRateInvertTokens;\n      const routerMethod = tokenConfigDest.conversionRouterMethod || 'getAmountsIn';\n\n      const path = [];\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigDest.address : tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(routerMethod === 'getAmountsOut' || invertTokens ? tokenConfigFrom.address : tokenConfigDest.address);\n\n      let decimals = tokenConfigDest.decimals || 18;\n      \n      // Use decimals of underlying token if set\n      if (routerMethod === 'getAmountsOut'){\n        if (tokenConfigDest.underlying){\n          const underlyingTokenConfig = this.getTokenConfig(tokenConfigDest.underlying);\n          if (underlyingTokenConfig){\n            decimals = underlyingTokenConfig.decimals;\n          }\n        }\n      }\n      const one = this.normalizeTokenDecimals(decimals);\n      const unires = await this.genericContractCallNoMulticall(protocolContract, routerMethod, [one.toFixed(), path], {}, blockNumber);\n\n      // console.log('getCustomProtocolConversionRate',protocolContract, routerMethod, [one.toFixed(), path], unires);\n\n      if (unires) {\n        let price = this.BNify(unires[0]).div(one);\n        if (routerMethod === 'getAmountsOut'){\n          price = this.BNify(unires[2]).div(this.normalizeTokenDecimals(18));\n        }\n        if (invertTokens){\n          price = this.BNify(1).div(price);\n        }\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      // console.log('getUniswapConversionRate - ERROR',tokenConfigFrom,tokenConfigDest);\n      return null;\n    }\n  }\n\n  getQuickswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'QuickswapRouter', blockNumber, useWETH);\n  }\n\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'SushiswapRouter', blockNumber, useWETH);\n  }\n\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n    return await this.getCustomProtocolConversionRate(tokenConfigFrom, tokenConfigDest, 'UniswapRouter', blockNumber, useWETH);\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (/*tokenConfig.enabled && */tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getTokenConfig(convertToken);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let callsFailed = false;\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    // Add 10s timeout to request\n    // config.timeout = 10000;\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // callsFailed = true;\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (callsFailed || !totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalAUM)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalAUM));\n        // console.log('getAggregatedStats',tvls);\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    // const requiredNetworkId = parseInt(this.props.network.required.id);\n\n    // console.log('getAggregatedStats_chain',this.props.availableStrategiesNetworks);\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n\n      // console.log('START network LOOP - ',networkId);\n\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n\n        // console.log('START strategy LOOP - ',networkId,strategy);\n\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n          // const props = {...this.props};\n          // props.network.required.id = networkId;\n          // this.setProps(props);\n\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n            // console.log('START',networkId,strategy,token,tokenConfig.idle.token+'V4',tokenAUM.toFixed(),totalAUM.toFixed());\n          }\n\n          // Add Gov Tokens\n          if (parseInt(networkId) === 1) {\n            const govTokens = this.getTokenGovTokens(tokenConfig);\n            if (govTokens) {\n              await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM && (!govTokens[govToken].availableNetworks || govTokens[govToken].availableNetworks.includes(networkId)) )), async (govToken) => {\n                const govTokenConfig = govTokens[govToken];\n                const [\n                  tokenBalance,\n                  tokenConversionRate\n                ] = await Promise.all([\n                  this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                  this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n                ]);\n\n                if (tokenBalance && tokenConversionRate) {\n                  const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                  if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                    totalAUM = totalAUM.plus(tokenBalanceConverted);\n                  }\n                }\n              });\n            }\n          }\n\n          // console.log('END',networkId,strategy,token,tokenConfig.idle.token+'V4',totalAUM.toFixed());\n\n          // Get old token allocation\n          /*\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n          */\n        });\n        // console.log('END strategy LOOP - ',networkId,strategy);\n      });\n      // console.log('END network LOOP - ',networkId);\n    });\n\n    // console.log('getAggregatedStats_chain',totalAUM.toFixed());\n    // const props = {...this.props};\n    // props.network.required.id = requiredNetworkId;\n    // this.setProps(props);\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  getTrancheTokenConversionRate = async (trancheTokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    let trancheTokenConversionRate = this.BNify(1);\n\n    // Get pool token price\n    const tokenConfig = this.getTokenConfig(trancheTokenConfig.token);\n    if (!!tokenConfig.isPoolToken){\n      // Get custom protocol for conversion rate\n      const protocolContract = tokenConfig.conversionRateProtocolContract;\n      trancheTokenConversionRate = await this.getPoolTokenPrice(trancheTokenConfig.token, protocolContract);\n    // Convert underlying token\n    } else {\n      const conversionRateField = this.getTokenConversionRateField(trancheTokenConfig.token);\n      if (conversionRateField) {\n        trancheTokenConversionRate = await this.getOnChainTokenConversionRate(trancheTokenConfig,blockNumber);\n      }\n    }\n\n    if (!trancheTokenConversionRate || this.BNify(trancheTokenConversionRate).isNaN()){\n      trancheTokenConversionRate = this.BNify(1);\n    }\n\n    return trancheTokenConversionRate;\n  }\n  convertTrancheTokenBalance = async (tokenBalance, trancheTokenConfig, blockNumber='latest') => {\n    const trancheTokenConversionRate = await this.getTrancheTokenConversionRate(trancheTokenConfig, blockNumber);\n    return tokenBalance = this.BNify(tokenBalance).times(trancheTokenConversionRate);\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getOnChainTokenConversionRate = async (tokenConfig, blockNumber='latest', protocolContract=null) => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getTokenConfig(tokenConfig.token) : null;\n\n    let useWETH = true;\n\n    if (statsTokenConfig){\n      // Replace from token address\n      if (statsTokenConfig.addressForPriceFrom){\n        DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n      }\n\n      // Set custom protocol (uniswap, sushiswap, quickswap)\n      if (!protocolContract && statsTokenConfig.conversionRateProtocolContract){\n        protocolContract = statsTokenConfig.conversionRateProtocolContract;\n      }\n\n      // Override useWETH based on token config\n      if (typeof statsTokenConfig.conversionRateUseWETH !== 'undefined'){\n        useWETH = statsTokenConfig.conversionRateUseWETH;\n      } else {\n        // Don't use WETH in the path\n        useWETH = !statsTokenConfig.addressForPriceFrom;\n      }\n    }\n\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    let conversionRate = null;\n    const currentNetworkId = this.getRequiredNetworkId();\n    if (protocolContract){\n      conversionRate = await this.getCustomProtocolConversionRate(DAITokenConfig, ToTokenConfig, protocolContract, blockNumber, useWETH);\n    } else {\n      conversionRate = currentNetworkId === 1 ? await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH) : await this.getSushiswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    }\n\n    // console.log('getOnChainTokenConversionRate',currentNetworkId,protocolContract,ToTokenConfig.address,blockNumber, useWETH, conversionRate);\n\n    if (this.BNify(conversionRate).isNaN()) {\n      conversionRate = this.BNify(1);\n    }\n\n    return conversionRate\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__3Ly5d\",\"hidden\":\"DashboardCard_hidden__1_j_O\",\"clickable\":\"DashboardCard_clickable__3ibwM\",\"rainbow\":\"DashboardCard_rainbow__25Ce5\",\"disabled\":\"DashboardCard_disabled__g_nwH\"};","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Card, Tooltip } from \"rimble-ui\";\n\nconst DashboardCardContext = React.createContext();\n\nclass DashboardCard extends Component {\n\n  static Consumer = DashboardCardContext.Consumer;\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isClickable = typeof this.props.handleClick === 'function';\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border:0,\n      display:'flex',\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      flexDirection:'column',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (!this.props.cardProps || !this.props.cardProps.backgroundColor){\n      if (isInteractive && this.state.mouseOver) {\n        cardProps.backgroundColor = 'cardBgHover';\n      }\n      if (isActive){\n        cardProps.backgroundColor = 'cardBgActive';\n      }\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isClickable ? styles.clickable : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    // const childrenWithProps = React.Children.map(this.props.children, child => {\n    //   if (React.isValidElement(child)) {\n    //     return React.cloneElement(child, { mouseOver:this.state.mouseOver });\n    //   }\n    //   return child;\n    // });\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {/*{this.props.children}*/}\n        <DashboardCardContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const hasClickFunction = typeof this.props.handleClick === 'function';\n    const isInteractive = hasClickFunction || !!this.props.isInteractive;\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={hasClickFunction ? e => this.props.handleClick(this.props) : null}\n      >\n        <DashboardCard.Consumer>\n          {({\n            mouseOver\n          }) => {\n            return (\n              <Flex\n                flexDirection={'row'}\n                id={this.props.rowId}\n              >\n                {\n                  this.props.cols.map((colInfo,colIndex) => {\n                    const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n                    if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                      return null;\n                    }\n                    return (\n                      <Flex\n                        key={`col-${colIndex}`}\n                        {...colInfo.props}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          {...colInfo.parentProps}\n                        >\n                          {\n                            colInfo.fields.map((fieldInfo,fieldIndex) => {\n                              if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                                return null;\n                              }\n                              const CustomComponent = fieldInfo.fieldComponent;\n\n                              let fieldProps = fieldInfo.props;\n\n                              // Merge with funcProps\n                              if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                                fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                              }\n\n                              return (\n                                <Flex\n                                  height={'100%'}\n                                  flexDirection={'column'}\n                                  alignItems={'flex-start'}\n                                  justifyContent={'center'}\n                                  {...fieldInfo.parentProps}\n                                  style={fieldInfo.style || {\n                                    overflow:'hidden'\n                                  }}\n                                  width={colInfo.fields.length>1 ? 'auto' : 1}\n                                  id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                  key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                >\n                                  {\n                                    CustomComponent ? (\n                                      <CustomComponent\n                                        {...this.props}\n                                        {...fieldProps}\n                                        mouseOver={mouseOver}\n                                      />\n                                    ) : (\n                                      <FieldComponent\n                                        {...this.props}\n                                        mouseOver={mouseOver}\n                                        fieldInfo={fieldInfo}\n                                        colProps={colInfo.props}\n                                        parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                      />\n                                    )\n                                  }\n                                </Flex>\n                              );\n                            })\n                          }\n                        </Flex>\n                      </Flex>\n                    )\n                  })\n                }\n              </Flex>\n            );\n          }}\n          </DashboardCard.Consumer>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'primary' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        handleClick={this.props.handleClick}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    const allowZeroValue = !!this.props.allowZeroValue;\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || (allowZeroValue ? amount.lt(0) : amount.lte(0)) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Approve',\n          eventLabel: tx ? tx.status : null,\n          eventAction: this.props.tokenConfig.token\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log(this.props.eventData,{\n      //   eventCategory: methodName,\n      //   eventValue: inputValue.toFixed(),\n      //   eventAction: this.props.tokenConfig.token,\n      //   ...this.props.eventData\n      // });\n\n      const callback = (tx,error) => {\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        // Send Google Analytics event\n        if (tx){\n          const eventData = {\n            eventLabel: tx.status,\n            eventCategory: methodName,\n            eventValue: inputValue.toFixed(),\n            eventAction: this.props.tokenConfig.token,\n            ...this.props.eventData\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n        }\n\n        this.setState({\n          txSucceeded,\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n\n        if (txSucceeded){\n          // Reset input\n          this.changeInputValue({\n            target:{\n              value:0\n            }\n          },false);\n          this.setState({\n            showPermitBox:false\n          });\n          // Call upper component callback\n          if (typeof this.props.callback === 'function'){\n            this.props.callback(tx,_amount,params);\n          }\n        }\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    let contractApproved = false;\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      contractApproved = true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      contractApproved = true;\n    }\n      \n    if (!contractApproved){\n      contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n    }\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        border={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              handleClick={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import Title from '../Title/Title';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    eventData:{},\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    allowZeroValue:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const contractsChanged = this.props.contracts.length !== nextProps.contracts.length || this.props.contracts.map( c => c.name ).filter( contractName => !nextProps.contracts.map( c => c.name ).includes(contractName) ).length>0;\n    return stateChanged || accountChanged || contractsChanged;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n      // const protocolConfig = this.functionsUtil.getGlobalConfig(['stats','protocols',gaugeConfig.protocol]);\n\n      const tokenConfig = {};\n      tokenConfig.token = gaugeConfig.underlyingToken;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote,\n      voteUserSlope,\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address]),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_slopes',[this.props.account,gaugeConfig.address])\n    ]);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed);\n    let oldPowerUsed = this.functionsUtil.BNify(voteUserSlope.power);\n    const availableVotingPower = this.functionsUtil.BNify(10000).minus(votingPowerUsed).plus(oldPowerUsed).div(10000);\n\n    votingPowerUsed = votingPowerUsed.div(10000);\n    oldPowerUsed = oldPowerUsed.div(10000);\n\n    // console.log('availableVotingPower',votingPowerUsed.toFixed(),oldPowerUsed.toFixed(),availableVotingPower);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      availableVotingPower,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let eventData = {\n      eventAction:trancheTokenConfig.token\n    };\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        // const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.availableVotingPower);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Gauge_Vote';\n\n        // Unlock total voting balance if nextUnlockTime reached\n        // if (canVote && this.state.votingPowerUsed.gte(1)){\n        //   balanceProp = this.state.veTokenBalance.times(this.state.availableVotingPower);\n        // }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Deposit';\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Claim';\n\n            switch (this.state.claimToken){\n              case 'additional':\n                eventData.eventLabel = (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? Object.keys(this.state.claimableRewardsTokens).join('_') : 'multi_rewards';\n              break;\n              default:\n              case 'default':\n                eventData.eventLabel = this.props.toolProps.veToken.rewardToken;\n              break;\n            }\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n\n            // Set data for ga custom event\n            eventData.eventCategory = 'Gauge_Redeem';\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('eventData',eventData);\n\n    this.setState({\n      canVote,\n      eventData,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    const internal_view = this.functionsUtil.getQueryStringParameterByName('internal_view');\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          trancheTokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall(trancheConfig.CDO.name, 'virtualPrice', [trancheConfig.AA.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        trancheTokenPrice = this.functionsUtil.fixTokenDecimals(trancheTokenPrice,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        // Calculate IDLE apr for internal view\n        const gaugeDistributionRatePerSecond = gaugeDistributionRate.div(this.functionsUtil.getGlobalConfig(['network','secondsPerDay']));\n        const gaugeUnderlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeToken);\n        const gaugeTotalSupplyUnderlying = gaugeTotalSupply.times(trancheTokenPrice);\n        const idleApr = internal_view ? await this.functionsUtil.getGovTokenApr(veTokenConfig.rewardToken,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,gaugeDistributionRatePerSecond) : null;\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n        } else {\n          stakedBalance = '-';\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(3)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (${userBoostedDistribution.toFixed(3)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (${userDistributionRate.toFixed(3)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            let text = `${gaugeDistributionRate.toFixed(3)} ${token}/day`;\n            if (idleApr){\n              let idleApy = idleApr.apy.toFixed(2);\n              if (parseFloat(idleApy)>9999){\n                idleApy = '>9999';\n              }\n              text += ` (${idleApy}% APY)`;\n            }\n            return text;\n          } else {\n            const tokenApy = rewardsTokens[token].apy;\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(3)} ${token}/day (${tokenApy.toFixed(2)}% APY)`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let allowZeroValue = false;\n    let balanceSelectorInfo = {...this.state.balanceSelectorInfo};\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        allowZeroValue = true;\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        } else {\n          infoBox = {\n            icon:'Info',\n            text:`You are about to reset your voting power for this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      allowZeroValue,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49,\n                        height:'55px'\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'primary'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                          iconBgColor={this.state.stakeAction === 'deposit' ? '#ffffff' : '#ced6ff'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                          iconBgColor={this.state.stakeAction === 'claim' ? '#ffffff' : '#ffd979'}\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                          iconBgColor={this.state.stakeAction === 'withdraw' ? '#ffffff' : '#ceeff6'}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : this.state.selectedAction === 'vote' && this.functionsUtil.BNify(this.state.availableVotingPower).lte(0) ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'Info'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You already allocated 100% of your voting power, reduce the allocation from one of the gagues you voted for or stake more ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:3,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`stake`)}\n                      >\n                        Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                      </RoundButton>\n                    </IconBox>\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      allowZeroValue={this.state.allowZeroValue}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])}\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                eventData={this.state.eventData}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  value:'Claim',\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/3],\n                                  }\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                eventData={this.state.eventData}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                isInteractive={true}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.11]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.07],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.19],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.16],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    // const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    // const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          /*\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n          */\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Title\n              as={'h4'}\n              fontWeight={4}\n              fontSize={[3,4]}\n            >\n              {trancheDetails.name}\n            </Title>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    minPrecision:2,\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n            >\n              <TooltipText\n                text={'APY'}\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                textProps={{\n                  color:'primary',\n                  fontFamily:'titles'\n                }}\n                text={'APY Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  },\n                  name:'trancheAPRRatio'\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[1,2],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              minHeight={['auto','60px']}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'primary'}\n                fontFamily={'titles'}\n              >\n                {\n                  this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                }\n              </Text>\n              <Flex\n                mt={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    props:{\n                      decimals:2,\n                      minPrecision:2,\n                      fontSize:[1,2],\n                      color:'copyColor'\n                    },\n                    name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <RoundButton\n                  type={'primary'}\n                  buttonProps={{\n                    mt:3,\n                    icon:trancheDetails.icon,\n                    contrastColor:'ctaPrimaryText',\n                  }}\n                  handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </RoundButton>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport { Flex, Text, Image, Box, Icon } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericModal from '../utilities/components/GenericModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    eventData:{},\n    infoText:null,\n    modalApy:null,\n    trancheFee:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    balanceProp:null,\n    lastHarvest:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    unlentAmount:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    contractPaused:false,\n    buttonDisabled:false,\n    selectedTranche:null,\n    allowAAWithdraw:false,\n    allowBBWithdraw:false,\n    availableTranches:null,\n    modalAction:'deposited',\n    approveDescription:null,\n    gaugeStakedBalance:null,\n    selectedAction:'deposit',\n    poolUtilizationRate:null,\n    balanceSelectorInfo:null,\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false,\n    maxPoolUtilizationRateReached:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.checkModal();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  checkModal(){\n    const modalEnabled = this.props.tokenConfig.modal && this.props.tokenConfig.modal.enabled;\n    if (modalEnabled){\n      const modalAlreadyOpened = this.functionsUtil.getStoredItem(this.props.tokenConfig.modal.id);\n      if (!modalAlreadyOpened){\n        this.setState({\n          activeModal:this.props.tokenConfig.modal.id\n        });\n      }\n    }\n  }\n\n  async loadData(){\n\n    // Init Pool contract\n    if (this.props.tokenConfig.Pool){\n      await this.functionsUtil.initContract(this.props.tokenConfig.Pool.name, this.props.tokenConfig.Pool.address, this.props.tokenConfig.Pool.abi);\n    }\n\n    const [\n      unlentAmount,\n      tokenBalance,\n      trancheBalance,\n      contractPaused,\n      lastHarvest,\n      allowAAWithdraw,\n      allowBBWithdraw,\n      gaugeStakedBalance,\n      poolUtilizationRate,\n      stakedBalance,\n      trancheFee,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy,\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheUnlentAmount(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'paused'),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'allowAAWithdraw'),\n      this.functionsUtil.genericContractCallCached(this.props.tokenConfig.CDO.name, 'allowBBWithdraw'),\n      this.props.gaugeConfig ? this.functionsUtil.getTokenBalance(this.props.gaugeConfig.name,this.props.account) : null,\n      this.props.trancheConfig.functions.utilizationRate ? this.functionsUtil.genericContractCallCached(this.props.tokenConfig.Pool.name, this.props.trancheConfig.functions.utilizationRate) : null,\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheField('trancheFee',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n\n    // console.log('lastHarvest',lastHarvest);\n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n    // console.log('utilizationRate', this.props.trancheConfig.functions.utilizationRate, poolUtilizationRate);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    const maxPoolUtilizationRateReached = this.props.tokenConfig.maxUtilizationRate && !this.functionsUtil.BNify(poolUtilizationRate).isNaN() && this.functionsUtil.fixTokenDecimals(poolUtilizationRate, 18).gte(this.props.tokenConfig.maxUtilizationRate);\n\n    this.setState({\n      trancheAPY,\n      trancheFee,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      unlentAmount,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      contractPaused,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      allowAAWithdraw,\n      allowBBWithdraw,\n      availableTranches,\n      gaugeStakedBalance,\n      poolUtilizationRate,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds,\n      maxPoolUtilizationRateReached\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData = async () => {\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n    let balanceSelectorInfo = null;\n    let eventData = {\n      eventAction:this.props.trancheConfig.token\n    };\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Deposit';\n\n        if (this.state.trancheFee){\n          balanceSelectorInfo = {\n            text:`Performance fee: ${this.state.trancheFee}`,\n            tooltip:this.functionsUtil.getGlobalConfig(['messages', 'performanceFee'])\n          }\n        }\n        \n        if (this.props.gaugeConfig && this.props.gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your tranche tokens (${this.props.gaugeConfig.trancheToken.token}) in the Liquidity Gauge and get additional rewards.`;\n        }\n\n        // Disabled info text for disabled tranche\n        if (!!this.props.tokenConfig.disabled){\n          infoText = null;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n\n        // Set data for ga custom event\n        eventData.eventCategory = this.functionsUtil.capitalize(this.state.selectedStakeAction);\n\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set or the tranche is disabled\n            if (this.props.gaugeConfig || !this.state.stakeEnabled || !this.props.tokenConfig.enabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // Set data for ga custom event\n        eventData.eventCategory = 'Redeem';\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        } else {\n          // Overwrite default action message\n          if (this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0)){\n            infoText = `To withdraw your ${this.props.selectedToken} make sure to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    this.setState({\n      infoBox,\n      infoText,\n      eventData,\n      actionLabel,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    })\n  }\n\n  changeInputCallback = async (inputValue) => {\n\n    if (this.state.selectedAction === 'withdraw'){\n      // Calculate exit fee for TrueFi - USDC\n      if (this.props.trancheConfig.functions.penaltyFee && this.props.tokenConfig.Pool && this.functionsUtil.BNify(inputValue).gt(0)){\n        const amount = this.functionsUtil.normalizeTokenAmount(inputValue, this.props.tokenConfig.decimals);\n        let penaltyFee = await this.functionsUtil.genericContractCall(this.props.tokenConfig.Pool.name, this.props.trancheConfig.functions.penaltyFee, [amount])\n\n        if (penaltyFee){\n          penaltyFee = this.functionsUtil.BNify(10000).minus(penaltyFee).div(100)\n          const balanceSelectorInfo = {\n            text:`Penalty fee: <span style=\"color:${this.props.theme.colors.alert}\">${penaltyFee.toFixed(2)}%</span>`\n          }\n\n          this.setState({\n            balanceSelectorInfo\n          });\n        }\n      // Handle max unlent amount while max Utilization Rate reached\n      } else {\n        let buttonDisabled = false;\n        if (this.state.maxPoolUtilizationRateReached && this.state.unlentAmount.gt(0) && this.functionsUtil.BNify(inputValue).gt(this.state.unlentAmount)){\n          buttonDisabled = true;\n        }\n        this.setState({\n          buttonDisabled\n        });\n      }\n    }\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams = (amount,selectedPercentage) => {\n    let methodName = null;\n    let methodParams = null;\n    const _referral = this.getReferralAddress();\n    const referralEnabled = this.props.tokenConfig.referralEnabled;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'deposit' && _referral && referralEnabled){\n        methodParams = [amount,_referral];\n      } else if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice, this.props.tokenConfig.decimals));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  getReferralAddress() {\n    let _referral = this.functionsUtil.getQueryStringParameterByName('_referral');\n    if (!this.functionsUtil.checkAddress(_referral)) {\n      _referral = null;\n    }\n    return _referral;\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n    const isDisabled = !!this.props.tokenConfig.disabled;\n\n    const unlentAmount = this.state.unlentAmount || this.functionsUtil.BNify(0);\n\n    let maxPoolUtilizationRateReachedText = `This pool has reached the maximum utilization rate (${(this.props.tokenConfig.maxUtilizationRate*100).toFixed(0)}%), `;\n    if (unlentAmount.gt(0)){\n      maxPoolUtilizationRateReachedText = maxPoolUtilizationRateReachedText.concat(`you can withdraw up to ${unlentAmount.toFixed(4)} ${this.props.tokenConfig.token}`);\n    } else {\n      maxPoolUtilizationRateReachedText = maxPoolUtilizationRateReachedText.concat(`therefore ${this.state.selectedAction}s are temporarily unavailable.`);\n    }\n\n    const withdrawEnabled = ((this.props.trancheConfig.tranche === 'AA' && this.state.allowAAWithdraw) || (this.props.trancheConfig.tranche === 'BB' && this.state.allowBBWithdraw));\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const _referral = this.getReferralAddress();\n    const showReferral = !this.state.contractPaused && this.props.tokenConfig.referralEnabled && this.state.userHasAvailableFunds && _referral && isDeposit;\n\n    const modalEnabled = this.props.tokenConfig.modal && this.props.tokenConfig.modal.enabled;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              minPrecision:2,\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          color:'primary',\n                          fontWeight:[2,3],\n                          fontFamily:'ctas',\n                        }}\n                        text={'APY Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:'trancheAPRRatio'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        color={'primary'}\n                        fontFamily={'titles'}\n                      >\n                        {\n                          this.props.selectedTranche === 'AA' ? 'Senior Coverage' : 'APY Boost'\n                        }\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            props:{\n                              decimals:2,\n                              minPrecision:2,\n                              fontSize:[1,2],\n                              color:'copyColor'\n                            },\n                            name:this.props.selectedTranche === 'AA' ? 'seniorCoverage' : 'apyBoost'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    (this.props.tokenConfig.description || this.state.lastHarvest) && (\n                      <Flex\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        {\n                          this.props.tokenConfig.description && (\n                            <Flex\n                              pt={2}\n                              width={1}\n                              flexDirection={'column'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={[1,2]}\n                                color={'primary'}\n                                fontWeight={[2,3]}\n                              >\n                                Strategy Description\n                              </Text>\n                              <Flex\n                                mt={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                  textAlign={'justify'}\n                                  dangerouslySetInnerHTML={{__html:this.props.tokenConfig.description}}\n                                >\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              mt={this.props.tokenConfig.description ? 2 : 0}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                /*\n                this.props.selectedTranche === 'AA' && this.functionsUtil.BNify(this.state.gaugeStakedBalance).gt(0) && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To withdraw your ${this.props.selectedToken} you need to unstake the tranche tokens from the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a> first.`}\n                  />\n                ) :*/\n                /*\n                !this.props.tokenConfig.adaptiveYieldSplitEnabled && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'primary'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`To improve the capital efficiency of tranches, the apy ratio will be updated to the new Adaptive Yield Split on Wed July 20th. No action required. Read more in the <a href=\"https://gov.idle.finance/t/adaptive-yield-split-implementation-for-existing-pyts/1019\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">Forum Proposal</a>.`}\n                  />\n                )\n                */\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0,\n                      disabled:!this.state.stakingEnabled && !this.props.gaugeConfig\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/stake.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '45px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && !this.state.contractPaused && !this.state.maxPoolUtilizationRateReached && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'primary'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              {\n                showReferral && (\n                  <IconBox\n                    cardProps={{\n                      py: 3,\n                      px: 2,\n                      mt: 3,\n                      width:1,\n                    }}\n                    icon={'Share'}\n                    isActive={false}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'cellText'\n                    }}\n                  >\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        You are depositing with the following referral address:\n                      </Text>\n                      <Text\n                        mt={1}\n                        px={2}\n                        fontSize={1}\n                        fontWeight={500}\n                        textAlign={'center'}\n                        color={this.props.theme.colors.transactions.status.completed}\n                      >\n                        {_referral}\n                      </Text>\n                    </Flex>\n                  </IconBox>\n                )\n              }\n              {\n                this.state.maxPoolUtilizationRateReached && unlentAmount.gt(0) && (\n                  <IconBox\n                    cardProps={{\n                      mt: 2\n                    }}\n                    icon={'Warning'}\n                    text={maxPoolUtilizationRateReachedText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  this.state.contractPaused && (this.state.selectedAction !== 'withdraw' || !withdrawEnabled) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={`Deposits${!withdrawEnabled ? '/Withdraws' : '' } for this tranche are temporarily suspended due to Smart-Contract maintenance.${withdrawEnabled && ' Withdrawals remain enabled.'}`}\n                    />\n                  ) : this.state.maxPoolUtilizationRateReached && (this.state.selectedAction !== 'withdraw' || unlentAmount.lte(0)) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={maxPoolUtilizationRateReachedText}\n                    />\n                  ) : isDisabled && (isDeposit || (isStake && this.state.selectedStakeAction === 'stake')) ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'Warning'}\n                      text={`Deposits have been disabled for this tranche, please redeem your funds.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={ e => this.setSelectedAction('withdraw') }\n                      >\n                        Redeem\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.props.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      {\n                        this.state.stakedBalance.gt(0) ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MonetizationOn'}\n                            />\n                            <Text\n                              mt={1}\n                              mb={3}\n                              fontSize={[2,3]}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                            </Text>\n                            <ExecuteTransaction\n                              params={[]}\n                              {...this.props}\n                              Component={RoundButton}\n                              parentProps={{\n                                width:1,\n                                alignItems:'center',\n                                justifyContent:'center'\n                              }}\n                              componentProps={{\n                                value:'Unstake',\n                                buttonProps:{\n                                  size:'medium',\n                                  width:[1,1/3],\n                                }\n                              }}\n                              action={'Unstake'}\n                              eventData={this.state.eventData}\n                              contractName={this.state.contractInfo.name}\n                              callback={this.transactionSucceeded.bind(this)}\n                              methodName={this.props.trancheConfig.functions.unstake}\n                            />\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'MoneyOff'}\n                            />\n                            <Text\n                              mt={1}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any <strong>{this.state.tokenConfig.label}</strong> to unstake.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      eventData={this.state.eventData}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`+(this.props.gaugeConfig ? `<br />Stake your tranche tokens in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.functionsUtil.capitalize(this.props.tokenConfig.protocol)} ${this.props.selectedToken} Gauge</a> to get additional rewards!` : ``)}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n              {\n                modalEnabled && (\n                  <GenericModal\n                    {...this.props.tokenConfig.modal}\n                    closeModal={this.resetModal}\n                    isOpen={this.state.activeModal === this.props.tokenConfig.modal.id}\n                  />\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n              // Reset amountLent if below zero\n              if (amountLent.lt(0)){\n                amountLent = this.functionsUtil.BNify(0);\n              }\n            break;\n            default:\n            break;\n          }\n\n          // console.log(tx.action,tx.protocol,tx.token,tokenAmount.toString(),amountLent.toString());\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const requiredNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const subgraphConfig = this.functionsUtil.getGlobalConfig(['network','providers','subgraph','tranches']);\n    const subgraphEnabled = subgraphConfig.enabled && subgraphConfig.availableNetworks.includes(requiredNetworkId);\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          conversionRateField ? this.functionsUtil.getTrancheTokenConversionRate(tokenConfig) : this.functionsUtil.BNify(1),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTxTimestamp);\n\n        const trancheInfos = trancheAAInfos ? trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1)) : null;\n\n        const blocksTimestamps = {};\n        const conversionRateBlocksCalls = {};\n        const conversionRatesTimestamps = {};\n\n        if (conversionRateField){\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            if (subgraphEnabled && trancheInfos){\n              const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n                const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n                if (blockInfo.distance === null || distance<blockInfo.distance){\n                  blockInfo.distance = distance;\n                  blockInfo.trancheInfo = trancheInfo;\n                }\n                return blockInfo;\n              },{\n                distance:null,\n                trancheInfo:null\n              });\n\n              if (blockInfo && blockInfo.trancheInfo){\n                if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                  blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n                }\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n                // Gnosis cannot fetch past blocks data\n                conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getTrancheTokenConversionRate(tokenConfig,blockInfo.trancheInfo.blockNumber);\n              }\n            } else {\n              if (!blocksTimestamps[timeStamp]){\n                blocksTimestamps[timeStamp] = [];\n              }\n              blocksTimestamps[timeStamp].push(timeStamp);\n              conversionRateBlocksCalls[timeStamp] = new Promise(resolve => resolve(lastConversionRate));\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n        }\n\n         // console.log(token,conversionRateBlocksCalls);\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (subgraphEnabled){\n          if (trancheAAInfos){\n            trancheAAInfos.forEach( (trancheInfo,index) => {\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n            });\n          }\n\n          if (trancheBBInfos){\n            trancheBBInfos.forEach( (trancheInfo,index) => {\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:trancheInfo.timeStamp,\n                tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n              };\n              const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataBB);\n            });\n          }\n        } else {\n          Object.keys(conversionRateBlocksCalls).forEach( blockNumber => {\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n\n              const tokenDataAA = {\n                tranche:'AA',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n              const tokenDataBB = {\n                tranche:'BB',\n                timeStamp:timeStamp,\n                tranchePrice:this.functionsUtil.normalizeTokenDecimals(tokenDecimals)\n              };\n\n              if (conversionRateField && conversionRatesTimestamps[momentDate]){\n                tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n                tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n              }\n              tokensData[token].push(tokenDataAA);\n              tokensData[token].push(tokenDataBB);\n            });\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData', tokensData);\n    // console.log('transactions', transactions);\n    // console.log('tokensBalance', tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = tokenConfig ? tokenConfig.decimals : 18;\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n\n                  // console.log(token,trancheTokens.toString(),tranchePrice.toString(),newBalance.toString());\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  // if (token === 'USDC'){\n                  //   console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,tx.trancheTokens.toFixed());\n                  // }\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n\n          // console.log(token,trancheTokenBalance[token][tranche].toString(),lastTx.tranchePrice.toString(),lastTxBalance.toString());\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n      \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const pointSize = chartData[0].data.length === 1 ? 10 : 0;\n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      pointSize,\n      gridYValues,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontSize:this.props.theme.fontSizes[0],\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const gaugeConfig = this.props.tokenConfig ? this.functionsUtil.getTrancheGaugeConfig(this.props.protocol,this.props.token) : null;\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = (stakingRewardsEnabled && stakingRewardsEnabled.length>0) || gaugeConfig;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getTokenConfig(rewardToken);\n      if (!tokenConfig){\n        return;\n      }\n\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      let tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      if (!tokenBalance){\n        tokenBalance = this.functionsUtil.BNify(0);\n      }\n\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:RoundButton,\n                      componentProps:{\n                        value:'Claim',\n                        buttonProps:{\n                          style:{\n                            width:'100%'\n                          },\n                          size:this.props.isMobile ? 'small' : 'medium'\n                        }\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.cdo.toLowerCase() === this.props.tokenConfig.CDO.name.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const trancheBalanceInfo = this.props.portfolio ? this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.cdo.toLowerCase() === this.props.tokenConfig.CDO.name.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) : null;\n    const userHasFunds = trancheBalanceInfo && trancheBalanceInfo.amountDeposited.gt(0);\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('userHasFunds', userHasFunds, trancheBalanceInfo);\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n    const networkId = this.functionsUtil.getRequiredNetworkId();\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);  \n\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n\n      // Select first tranche is not available\n      if (!this.functionsUtil.getArrayPath([protocol,token],this.props.availableTranchesNetworks[networkId])){\n        protocol = Object.keys(this.props.availableTranchesNetworks[networkId])[0];\n        token = Object.keys(this.props.availableTranchesNetworks[networkId][protocol])[0];\n      }\n    }\n    \n    const tokenConfig = this.props.availableTranchesNetworks[networkId][protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex\n                mt={2}\n                mb={3}\n                alignItems={\"center\"}\n              >\n                <Image\n                  ml={3}\n                  mr={2}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex\n                  mx={1}\n                >\n                  <Title\n                    as={'h2'}\n                    ml={[2, 0]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Title>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        color: 'primary',\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        }\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={2}\n                    fontSize={1}\n                    fontWeight={3}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for <strong>{this.state.token}</strong>\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mb={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                }}\n                handleClick={e => this.props.selectTrancheType(trancheDetails.route)}\n              >\n                {this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import Title from \"../Title/Title\";\nimport React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Title\n              textAlign={'left'}\n            >\n              {flashData.subtitle}\n            </Title>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"primary\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"AA\",\"bubble\"])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\"tranches\",\"BB\",\"bubble\"])}\n            />\n            <Text\n              mx={2}\n              mt={[0, 2]}\n              mb={[2, 1]}\n              fontSize={2}\n              fontWeight={2}\n              color={\"primary\"}\n              textAlign={\"left\"}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                as={'h1'}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      unitProps={{\n                        color:'primary'\n                      }}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      color={'primary'}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.primary,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport { Box, Flex, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    lastUpdate:null,\n    transactions:[],\n    tokenConfig:null,\n    gaugeConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    selectedTranche:null,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTranchesChanged = JSON.stringify(nextProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    return stateChanged || accountChanged || availableTranchesChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',this.functionsUtil.objectsDiff(prevProps,this.props),this.functionsUtil.objectsDiff(prevState,this.state));\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        componentLoaded:false,\n        portfolioLoaded:false\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  loadQueryParams(){\n    const trancheRoute = this.props.urlParams.param1;\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n    if (trancheDetails !== undefined) {\n      const trancheType = trancheDetails.type;\n      const selectedTranche = this.props.urlParams.param3;\n      const selectedProtocol = this.props.urlParams.param2;\n      const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedTranche] ? this.props.availableTranches[selectedProtocol][selectedTranche] : null) : null;\n      const selectedToken = tokenConfig ? tokenConfig.token : null;\n      const gaugeConfig = tokenConfig ? this.functionsUtil.getTrancheGaugeConfig(selectedProtocol,selectedTranche) : null;\n\n      this.setState({\n        trancheType,\n        tokenConfig,\n        gaugeConfig,\n        trancheRoute,\n        selectedToken,\n        trancheDetails,\n        selectedTranche,\n        selectedProtocol\n      });\n    } else {\n      const selectedTranche = this.props.urlParams.param2;\n      const selectedProtocol = this.props.urlParams.param1;\n      const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedTranche] ? this.props.availableTranches[selectedProtocol][selectedTranche] : null;\n      if (tokenConfig){\n        const selectedToken = tokenConfig.token;\n        const gaugeConfig = this.functionsUtil.getTrancheGaugeConfig(selectedProtocol,selectedTranche);\n        this.setState({\n          tokenConfig,\n          gaugeConfig,\n          selectedToken,\n          selectedTranche,\n          selectedProtocol\n        });\n      }\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.availableTranches){\n      return false;\n    }\n\n    const tranchesTvls = [];\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches[protocol]), async (token) => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        const trancheConfig = tokenConfig.AA;\n        tranchesTvls.push({\n          token,\n          protocol,\n          tvl:parseFloat(await this.functionsUtil.loadTrancheFieldRaw('tranchePoolConverted', {decimals:2,maxPrecision:999,minPrecision:0}, protocol, token, null, tokenConfig, trancheConfig))\n        });\n      });\n    });\n\n    const tranchesOrdering = tranchesTvls.sort((a, b) => (parseInt(a.tvl) < parseInt(b.tvl) ? 1 : -1));\n\n    this.setState({\n      tranchesOrdering\n    });\n\n    this.loadQueryParams();\n\n    this.loadPortfolio().then( () => {\n\n      if (!!this.state.trancheDetails) {\n\n        if (this.state.userHasFunds && !this.state.tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        const useTrancheType = !this.state.userHasFunds;\n        this.setState({\n          useTrancheType\n        });\n      }\n\n      this.setState({\n        componentLoaded:true\n      });\n    });\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    let availableTranches = {...this.props.availableTranches};\n    if (this.state.selectedProtocol && this.state.selectedTranche){\n      availableTranches = {\n        [this.state.selectedProtocol]:{\n          [this.state.selectedTranche]:availableTranches[this.state.selectedProtocol][this.state.selectedTranche]\n        }\n      }\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(availableTranches,this.props.account);\n\n    // console.log('portfolio', this.state.selectedProtocol, this.state.selectedTranche, portfolio);\n\n    if (portfolio){\n      const depositedCdos = [];\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n\n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheBalanceInfo => {\n        if (!tranchesBalances[trancheBalanceInfo.tranche]){\n          tranchesBalances[trancheBalanceInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheBalanceInfo.tranche].weight = tranchesBalances[trancheBalanceInfo.tranche].weight.plus(trancheBalanceInfo.trancheWeight);\n        tranchesBalances[trancheBalanceInfo.tranche].balance = tranchesBalances[trancheBalanceInfo.tranche].balance.plus(trancheBalanceInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheBalanceInfo.token]){\n          tranchesTokens[trancheBalanceInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheBalanceInfo.token] = tranchesTokens[trancheBalanceInfo.token].plus(trancheBalanceInfo.tokenBalance);\n\n        // Push deposited CDO instead of token\n        if (trancheBalanceInfo.amountDeposited.gt(0)){\n          depositedCdos.push(trancheBalanceInfo.cdo);\n        }\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      // console.log('portfolio.tranchesBalance', portfolio.tranchesBalance, depositedTokens)\n      \n      Object.keys(availableTranches).forEach( protocol => {\n        Object.keys(availableTranches[protocol]).forEach( token => {\n          const tokenConfig = availableTranches[protocol][token];\n          if(depositedCdos.includes(tokenConfig.CDO.name)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][token]={}\n              depositedTranches[protocol][token]=availableTranches[protocol][token];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][token]={};\n            remainingTranches[protocol][token]=availableTranches[protocol][token];\n          }\n        })\n      })\n\n      // console.log('tranchesTokens', tranchesTokens)\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getTokenConfig(token);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4],\n              color:'primary'\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig && govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4],\n                color:'primary'\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const lastUpdate = Date.now();\n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        lastUpdate,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedTranche] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedTranche] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedTranche}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedTranche);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedTranche);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedTranche){\n      breadcrumbPath.push(this.state.selectedTranche);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              gaugeConfig={this.state.gaugeConfig}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:16,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:70,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Deposited Tranches\n                      </Title>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'statusIcon',\n                              props:{\n                                ml:2,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.14],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.09 : 0.08],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolConvertedNoLabel` : 'poolConverted',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.13],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                height:'45px',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      tranchesOrdering={this.state.tranchesOrdering}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Title\n                      as={'h4'}\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Title>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.15]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'statusIcon',\n                            props:{\n                              ml:2,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.11],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolConvertedNoLabel` : 'poolConverted',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              height:'45px',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    tranchesOrdering={this.state.tranchesOrdering}\n                    availableTranches={this.props.account ? this.state.remainingTranches : this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'copyColor'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={RoundButton}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  buttonProps:{\n                    size:'small',\n                    width:'auto',\n                    style:{\n                      fontSize:'14px',\n                    }\n                  },\n                  value:'Reduce allowance'\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Input } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    eventData:{},\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n\n        let eventData = {};\n        switch (this.state.increaseAction){\n          case 'time':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseTime',\n              eventValue:this.state.lockPeriodInput\n            };\n          break;\n          case 'amount':\n            // Set data for ga custom event\n            eventData = {\n              eventAction:'IDLE',\n              eventCategory:'Staking_IncreaseAmount'\n            };\n          break;\n          default:\n          break;\n        }\n\n        // console.log('eventData',eventData);\n\n        this.setState({\n          eventData,\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let eventData = {};\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_Lock',\n          eventLabel:_unlock_time\n        };\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        // Set data for ga custom event\n        eventData = {\n          eventAction:'IDLE',\n          eventCategory:'Staking_IncreaseAmount'\n        };\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      eventData\n    });\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // if (newState.increaseAction !== this.state.increaseAction){\n    //   this.setIncreaseAction(newState.increaseAction);\n    // }\n\n    // Select Withdraw if the lock has expired\n    if (['Increase Lock','Lock'].includes(selectedAction) && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                ) : this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={RoundButton}\n                                          componentProps={{\n                                            buttonProps:{\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              disabled:this.state.buttonDisabled\n                                            },\n                                            value:'Increase Time',\n                                          }}\n                                          action={'Increase Time'}\n                                          eventData={this.state.eventData}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        eventData={this.state.eventData}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={RoundButton}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',  \n                                    width:[1,1/2],\n                                  },\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                eventData={{\n                                  eventCategory:'Staking_Withdraw',\n                                  eventAction:this.props.selectedToken\n                                }}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={RoundButton}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    value:'Claim',\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/3],\n                                    }\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  eventData={{\n                                    eventCategory:'Staking_Claim',\n                                    eventValue:this.state.claimable.toFixed(8),\n                                    eventAction:this.props.contractInfo.rewardToken\n                                  }}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={RoundButton}\n                                  componentProps={{\n                                    buttonProps:{\n                                      size:'medium',\n                                      width:[1,1/2],\n                                    },\n                                    value:'Approve',\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={RoundButton}\n                                componentProps={{\n                                  buttonProps:{\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    disabled:this.state.buttonDisabled\n                                  },\n                                  value:'Buy Coverage',\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.claimableAmount) ? this.state.selectedCoverToClaim.claimableAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      color={'primary'}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Title\n              as={'h4'}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Title>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport { Flex, Box, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const accountChanged = nextProps.account !== this.props.account;\n    const stateChanged = JSON.stringify(this.state) !== JSON.stringify(nextState);\n    const availableTokensChanged = JSON.stringify(nextProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    return stateChanged || accountChanged || availableTokensChanged;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  color={'primary'}\n                                  fontWeight={[3,4]}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1,\n                                  border:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Title\n                        as={'h4'}\n                        fontSize={[2,4]}\n                      >\n                        Tools\n                      </Title>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Assets to migrate\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Deposited assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Title\n                          as={'h4'}\n                          fontSize={[2,4]}\n                        >\n                          Available assets\n                        </Title>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  height:'45px',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={RoundButton}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      buttonProps:{\n                                                        width:[1,1/3],\n                                                        size:'medium',\n                                                        height:'45px',\n                                                      },\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={RoundButton}\n                                        componentProps={{\n                                          buttonProps:{\n                                            size:'medium',\n                                          },\n                                          value:'Claim',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Input } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeWeight,\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeWeight(gaugeConfig),\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n        const gaugeWorkingSupply = userBoostInfo.workingSupply;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(this.functionsUtil.BNify(gaugeWorkingSupply).plus(userWorkingBalance));\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        // console.log(gaugeToken,gaugeWeight.toFixed(),userBoostInfo,this.functionsUtil.BNify(userWorkingBalance).toFixed(),this.functionsUtil.BNify(gaugeWorkingSupply).toFixed(),userBoostedShare.toFixed());\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={isActive ? 'primary' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Title\n                  as={'h4'}\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Title>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport QuickswapV2Router02 from \"../abis/quickswap/QuickswapV2Router02.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v7.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://app.idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://app.idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio: \"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    bestYieldDisabledMessage: \"Deposits for this strategy are no longer available, please redeem your funds.\",\n    aysShort: \"This strategy automatically adjusts the yield split between the Senior and the Junior tranche\",\n    autoFarming: \"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://app.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://app.idle.finance/#/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"\",\n    theme: {\n      mode: \"dark\",\n      darkModeEnabled: true,\n      themeTogglerEnabled: false\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: false,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n      QuickswapRouter: {\n        abi: QuickswapV2Router02,\n        address: '0xa5E0829CaCEd8fFDD4De3c43696c57F7D7A678ff'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#2272C8\",\n        rgb: [34, 114, 200],\n        hsl: [\"211\", \"71%\", \"46%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FFD15C\",\n        rgb: [255, 209, 92],\n        hsl: [\"43\", \"100%\", \"68%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      availableNetworks: [1],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    /*\n    polygon: {\n      visible: true,\n      networkId: 137,\n      type: \"tranche\",\n      enabledEnvs: [],\n      color: \"#f32121\",\n      comingSoon: false,\n      token: \"CXETHWETH\",\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      protocol: \"quickswap\",\n      govTokensEnabled: true,\n      availableNetworks: [137],\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    */\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      enabledStatsNetworks: [1],\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      DQUICK:{\n        decimals: 18,\n        enabled: true,\n        label: 'DQUICK',\n        token: 'DQUICK',\n        icon: \"images/tokens/DQUICK.png\",\n        color: {\n          hex: '#1d8bcf',\n          rgb: [29, 139, 207],\n          hsl: ['203', '75%', '46%']\n        },\n        conversionRateInvertTokens:true,\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n      },\n      CXETHWETH: {\n        decimals: 18,\n        enabled: true,\n        label: 'CXETHWETH',\n        token: 'CXETHWETH',\n        conversionRateField: \"ETHDAIPrice\",\n        icon: \"images/tokens/CXETHWETH.png\",\n        color: {\n          hex: '#f73bac',\n          rgb: [247, 59, 172],\n          hsl: ['324', '92%', '60%']\n        },\n        isPoolToken: true, // Get Pool Token price for conversion rate\n        conversionRateProtocolContract: 'QuickswapRouter',\n        address: '0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        // addressForPrice: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        underlying: 'WBTC', // Used for decimals\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        conversionRateField: 'PBTCDAIPrice',\n        conversionRouterMethod: 'getAmountsOut',\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587',\n        addressForPrice: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      PNT: {\n        token: 'PNT',\n        decimals: 18,\n        enabled: true,\n        label: 'pNetwork',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0x89ab32156e46f46d02ade3fecbe5fc4243b9aaed'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      CPOOL: {\n        decimals: 18,\n        enabled: true,\n        label: 'CPOOL',\n        token: 'CPOOL',\n        color: {\n          hex: '#5F73F4',\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        },\n        address: '0x66761fa41377003622aee3c7675fc7b5c1c2fac5'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: false,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      TRU: {\n        token: 'TRU',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#195bff',\n          rgb: [25, 91, 255],\n          hsl: [\"223\", \"100%\", \"55%\"]\n        },\n        disabledCharts: ['score'],\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x4c19596f5aaff459fa38b0f7ed92f11ae6543784',\n      },\n      AGEUR: {\n        decimals: 18,\n        enabled: true,\n        token: 'AGEUR',\n        color: {\n          hex: '#fbcea9',\n          rgb: [251, 206, 169],\n          hsl: ['27', '91%', '82%']\n        },\n        // conversionRateForceToken: 'USDC',\n        // conversionRateInvertTokens: true,\n        // conversionRateField: 'ageurDAIPrice',\n        // conversionRateDirectConversion: true,\n        // conversionRouterMethod: 'getAmountsOut',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        endTimestamp:\"2022-05-22 23:59:59\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: false,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: false,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      quickswap: {\n        legend: false,\n        enabled: true,\n        label: \"QuickSwap\",\n        icon: \"quickswap.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      euler: {\n        label: \"Euler\",\n        legend: false,\n        enabled: true,\n        color: {\n          rgb: [228, 97, 94],\n          hsl: [\"1\", \"71%\", \"63%\"]\n        }\n      },\n      wintermute: {\n        legend: false,\n        enabled: true,\n        label: \"Wintermute\",\n        color: {\n          rgb: [163, 236, 38],\n          hsl: [\"82\", \"84%\", \"54%\"]\n        }\n      },\n      clearpool: {\n        legend: false,\n        enabled: true,\n        label: \"Clearpool\",\n        color: {\n          rgb: [95, 115, 244],\n          hsl: [\"232\", \"87%\", \"66%\"]\n        }\n      },\n      truefi: {\n        legend: false,\n        enabled: true,\n        label: \"TrueFi\",\n        color: {\n          rgb: [25, 91, 255],\n          hsl: [\"223\", \"100%\", \"55%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: false,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        explorer: 'polygonscan',\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    secondsPerDay: 86400,\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      polygonscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_POLYGONSCAN_KEY,\n          env.REACT_APP_POLYGONSCAN_KEY2,\n          env.REACT_APP_POLYGONSCAN_KEY3,\n        ],\n        endpoints: {\n          137: 'https://api.polygonscan.com/api',\n          80001: 'https://api-testnet.polygonscan.com/api',\n        },\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://polygonscan.com',\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          availableNetworks:[1],\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          AGEUR:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'AGEUR',\n            name: \"LiquidityGauge_aa_euler_ageur\",\n            token: \"LiquidityGauge_aa_euler_ageur\",\n            address:'0x8f195979f7af6c500b4688e492d07036c730c1b2',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_AGEUR',\n              token: 'AA_euler_AGEUR',\n              address: '0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n            }\n          },\n          USDC:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDC',\n            name: \"LiquidityGauge_aa_euler_usdc\",\n            token: \"LiquidityGauge_aa_euler_usdc\",\n            address:'0x1cd24f833af78ae877f90569eaec3174d6769995',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDC',\n              token: 'AA_euler_USDC',\n              address: '0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n            }\n          },\n          DAI:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'DAI',\n            name: \"LiquidityGauge_aa_euler_dai\",\n            token: \"LiquidityGauge_aa_euler_dai\",\n            address:'0x57d59d4bbb0e2432f1698f33d4a47b3c7a9754f3',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_DAI',\n              token: 'AA_euler_DAI',\n              address: '0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n            }\n          },\n          USDT:{\n            protocol:'euler',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'USDT',\n            name: \"LiquidityGauge_aa_euler_usdt\",\n            token: \"LiquidityGauge_aa_euler_usdt\",\n            address:'0x0c3310b0b57b86d376040b755f94a925f39c4320',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_euler_USDT',\n              token: 'AA_euler_USDT',\n              address: '0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    let orderedTranches = [];\n    if (this.props.tranchesOrdering){\n      this.props.tranchesOrdering.forEach( t => {\n        if (enabledProtocols.includes(t.protocol)){\n          const token = t.token;\n          const protocol = t.protocol;\n          if (this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token]){\n            const tokenConfig = this.props.availableTranches[protocol][token];\n            orderedTranches.push({\n              token,\n              protocol,\n              tokenConfig\n            });\n          }\n        }\n      });\n    } else {\n      enabledProtocols.forEach(protocol => {\n        const protocolTranches = this.props.availableTranches[protocol];\n        if (!protocolTranches){\n          return null;\n        }\n        Object.keys(protocolTranches).forEach( token => {\n          const tokenConfig = protocolTranches[token];\n          if (tokenConfig){\n            orderedTranches.push({\n              token,\n              protocol,\n              tokenConfig\n            });\n          }\n         })\n      })\n    }\n\n    const depositedTokens = this.props.depositedTokens;\n    if (depositedTokens){\n      orderedTranches = orderedTranches.filter( t => {\n        return depositedTokens.find( d => d.token === t.token && d.protocol === t.protocol )\n      });\n    }\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n        id={\"tranches-list-container\"}\n      >\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n        {\n          orderedTranches && orderedTranches.length>0 && (\n            <Flex\n              id={\"tranches-list\"}\n              flexDirection={'column'}\n            >\n              {\n                orderedTranches.map( p => {\n                  const token = p.token;\n                  const protocol = p.protocol;\n                  const tokenConfig = p.tokenConfig;\n                  const tranche = this.props.trancheType || null;\n                  return (\n                    <TableRow\n                      {...this.props}\n                      token={token}\n                      tranche={tranche}\n                      protocol={protocol}\n                      tokenConfig={tokenConfig}\n                      rowId={`tranche-col-${protocol}`}\n                      cardId={`tranche-card-${protocol}`}\n                      key={`tranche-${protocol}-${token}`}\n                      fieldComponent={this.props.fieldComponent || TrancheField}\n                    />\n                  )\n                })\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: ['beta'],\n        canDeposit: {\n          enabled: false,\n          disabledMessageDepositKey: 'bestYieldDisabledMessage'\n        },\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider && this.walletLink){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, rpc, ...rest } = kwargs;\n    super(rest);\n\n    this.rpc = rpc;\n    this.provider = null;\n    this.infuraId = infuraId;\n    this.WalletConnectProvider = WalletConnectProvider;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      const params = {\n        infuraId:this.infuraId\n      };\n      if (this.rpc){\n        params.rpc = this.rpc;\n      }\n      this.provider = new this.WalletConnectProvider(params);\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nexport default class Web3Connectors {\n\n  defaultNetwork = globalConfigs.network.requiredNetwork;\n\n  constructor(networkId=null){\n    this.setNetwork(networkId);\n  }\n\n  setNetwork(networkId){\n    if (networkId && globalConfigs.network.enabledNetworks.includes(networkId)){\n      this.defaultNetwork = networkId;\n    }\n  }\n\n  getConnectors(){\n\n    const {\n      InjectedConnector,\n      NetworkOnlyConnector,\n      TrezorConnector,\n      LedgerConnector,\n      FortmaticConnector,\n      PortisConnector\n    } = Connectors;\n\n    const env = process.env;\n\n    const defaultNetwork = this.defaultNetwork;\n    const portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\n    const portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n    const manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\n    const manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\n    const fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\n\n    const supportedNetworkURLs = {};\n\n    globalConfigs.network.enabledNetworks.forEach((networkId,index) => {\n      networkId = parseInt(networkId);\n      const provider = globalConfigs.network.availableNetworks[networkId].provider;\n      const providerConfig = globalConfigs.network.providers[provider];\n      supportedNetworkURLs[networkId] = providerConfig.rpc[networkId]+providerConfig.key;\n    });\n\n    // console.log('supportedNetworkURLs',defaultNetwork,supportedNetworkURLs);\n\n    const Injected = new InjectedConnector({\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Infura = new NetworkOnlyConnector({\n      providerURL: supportedNetworkURLs[defaultNetwork]\n    });\n\n\n    const Trezor = new TrezorConnector({\n      api: TrezorApi,\n      supportedNetworkURLs,\n      defaultNetwork,\n      manifestEmail,\n      manifestAppUrl\n    });\n\n    const Ledger = new LedgerConnector({\n      supportedNetworkURLs,\n      defaultNetwork\n    });\n\n    const WalletConnect = new WalletConnectConnector({\n      defaultNetwork,\n      rpc:supportedNetworkURLs,\n      api: WalletConnectProvider,\n      infuraId: env.REACT_APP_INFURA_KEY,\n      bridge: \"https://bridge.walletconnect.org\",\n      supportedNetworks: globalConfigs.network.enabledNetworks\n    });\n\n    const Fortmatic = new FortmaticConnector({\n      api: FortmaticApi,\n      apiKey: fortmaticApiKey,\n      logoutOnDeactivation: false\n    });\n\n    const Portis = new PortisConnector({\n      api: PortisApi,\n      dAppId: portisDAppId,\n      network: portisNetwork\n    });\n\n    const Authereum = new AuthereumConnector({\n      api: AuthereumApi,\n      network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n    });\n\n    const walletLink = new WalletLinkConnector({\n      api: WalletLink,\n      darkMode: false,\n      chainId: defaultNetwork,\n      appName: globalConfigs.appName,\n      infuraUrl: supportedNetworkURLs[defaultNetwork],\n      appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n    });\n\n    const Torus = new TorusConnector({\n      api: TorusApi,\n      initParams:{\n        buildEnv: 'production', // default: production\n        enableLogging: false, // default: false\n        network: {\n          host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n          chainId: defaultNetwork, // default: 1\n          networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n        },\n        showTorusButton: false // default: true\n      }\n    });\n\n    const gnosis = new GnosisSafeConnector(SafeAppConnector);\n\n    return {\n      Injected,\n      Infura,\n      WalletConnect,\n      gnosis,\n      walletLink,\n      Fortmatic,\n      Portis,\n      Authereum,\n      Torus,\n      Trezor,\n      Ledger,\n    };\n  }\n\n}","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 100;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    attempsTimeoutIds:{},\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 1000;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      attempsTimeoutIds:{},\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = window.setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash,count=0,maxCount=400) => {\n      return new Promise( (resolve, reject) => {\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId]){\n          this.multiCallsStats.attempsTimeoutIds[batchId] = {};\n        }\n\n        if (!this.multiCallsStats.attempsTimeoutIds[batchId][resultHash]){\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash] = {\n            count,\n            result:null,\n            timeoutId:null,\n            maxCountReached:false\n          };\n        }\n\n        const maxCountReached = maxCount && count>=maxCount;\n        const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined' ? true : false;\n\n        // Update attempt count\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].count = count;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].maxCountReached = maxCountReached;\n        this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result = resultIsDefined ? this.multiCallsResults[batchId][resultHash] : 'undefined';\n\n        // console.log('attempt',batchId,resultHash,count,resultIsDefined,maxCountReached,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].result);\n\n        if (resultIsDefined || maxCountReached) {\n\n          // Force rejected response\n          if (maxCountReached && !resultIsDefined){\n            if (!this.multiCallsResults[batchId]){\n              this.multiCallsResults[batchId] = {};\n            }\n            this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n          }\n\n          // Handle rejection\n          if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n            // this.timeLog('REJECTED',batchId,resultHash);\n\n            // Add hash to rejected hashes\n            this.addRejectedHash(resultHash);\n\n            resolve('REJECTED');\n          } else {\n            // this.timeLog('RESOLVED',batchId,resultHash);\n            this.addResolvedHash(resultHash);\n            resolve(this.multiCallsResults[batchId][resultHash]);\n          }\n\n          // Increment processed count\n          this.multiCallsStats.processedCount++;\n\n          // Remove hash from missing hashes\n          delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          delete this.multiCallsStats.attempsTimeoutIds[batchId][resultHash];\n        } else {\n          // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n          this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId = window.setTimeout(()=>{\n            resolve(checkMulticallData(batchId,resultHash,count+1,maxCount));\n          },50);\n\n          // console.log('new_attempt',batchId,resultHash,count+1,this.multiCallsStats.attempsTimeoutIds[batchId][resultHash].timeoutId);\n        }\n      });\n    }\n\n    // console.log('makeMulticall',callBatchId,callDataHash);\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    // console.log('data',callBatchId,callDataHash,data);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => window.setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading color={'primary'} fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const isGnosisSafe = !!props.connectors.gnosis.provider.safe;\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (props.connectors.Portis) {\n    if (registerPage) {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      props.connectors.Portis.options = props.connectors.Portis.options || {};\n      props.connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(props.connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport RoundButton from '../../RoundButton/RoundButton.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    href={\"#\"}\n                    color={'blue'}\n                    fontWeight={'0'}\n                    textAlign={'center'}\n                    onClick={this.toggleShowTxFees}\n                    title={\"Learn about Ethereum transaction fees\"}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading color={'primary'} fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark-white.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectors={this.props.connectors}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <RoundButton\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={ e => this.setCurrentSection(e,'instructions') }\n            >\n              READ INSTRUCTIONS\n            </RoundButton>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <RoundButton\n              className={[styles.gradientButton,styles.empty]}\n              px={[4,5]}\n              mx={'auto'}\n              size={'medium'}\n              handleClick={this.resetModal}\n            >\n              BACK\n            </RoundButton>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n\n      window.ethereum.on('accountsChanged', async (accounts) => {\n        this.initAccount(accounts[0]);\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n    window.connectors = this.props.connectors;\n  }\n\n  checkGnosisSafeNetwork = async () => {\n    const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n    // console.log('isGnosisSafe',this.state.web3.currentProvider.constructor.name);\n    if (isGnosisSafe){\n      const currentSafeNetworkId = await this.props.connectors.gnosis.getChainId();\n      console.log('currentSafeNetworkId',this.props.connectors.gnosis.provider.safe,currentSafeNetworkId,this.state.network.current.id);\n      if (!this.state.web3 || !this.state.network.current.id || this.state.network.current.id !== currentSafeNetworkId){\n        await this.checkNetwork(currentSafeNetworkId);\n      }\n    }\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    if (walletProvider === 'gnosis'){\n      return false;\n    }\n    \n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n\n        // Check Gnosis Network\n        this.checkGnosisSafeNetwork();\n\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded',this.props.connectors.gnosis.provider.safe);\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('connectorNameChanged',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.checkNetwork(null,this.initWeb3);\n    } else if ( prevProps.context.active !== this.props.context.active || prevProps.context.connectorName !== this.props.context.connectorName || JSON.stringify(prevProps.context.error) !== JSON.stringify(this.props.context.error) ) {\n      // console.log('contextChanged',this.props.connectorName,this.props.context.connectorName,this.props.context.active,this.props.context.error);\n\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.checkNetwork(null,this.initWeb3);\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.checkNetwork(null,this.initWeb3);\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName && setConnectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('connectorNameChanged_2',this.props.context.connectorName,this.props.context.connectorName,this.props.connectorName);\n      setConnectorName = this.props.connectorName;\n      this.checkNetwork(null,this.initWeb3);\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n      // this.initWeb3();\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n\n    // console.log('initWeb3','networkInitialized',this.state.networkInitialized);\n\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    let useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n    // let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      useWeb3Provider = false; // Disable web3 provider for Infura\n      context.unsetConnector();\n      // setConnectorName = null;\n    } else if (connectorName !== 'Infura') {\n      const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n      // console.log('initWeb3 connectorNameChanged',connectorName,context.connectorName,setConnectorName,!context.active,connectorNameChanged);\n\n      // Set the connector\n      if (connectorName !== 'ledgerLive'){\n        if (!context.active || connectorNameChanged) {\n          // Select preferred web3 provider\n          if (connectorName && connectorNameChanged){\n\n            if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n              return false;\n            }\n\n            // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n            setConnectorName = connectorName;\n            await context.setConnector(connectorName);\n            // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n            // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n            // return this.initWeb3();\n            return web3;\n          }\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    // Forse enable provider\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    const web3Callback = async (initWeb3Index=null) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index && initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',initWeb3Index,this.state.network.current.id,this.state.network.required.id,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        await this.checkGnosisSafeNetwork();\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const biconomyEnabled = biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()));\n\n    // console.log('initWeb3',initWeb3Index,biconomyEnabled,connectorName,web3,context,web3Provider,'UPDATE',web3 !== this.state.web3);\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyEnabled){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            // if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n            //   console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n            //   return false;\n            // }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          biconomy:false\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = (this.state.network.isCorrectNetwork ? this.state.web3 : (networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : this.state.web3Providers[this.state.network.required.id]));\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      await this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=null) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (!account && this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      let wallets = null;\n\n      if (!account){\n        wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n      \n      // console.log('initAccount',wallets,this.props.context.account,this.state.account,account);\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks,this.state.web3);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    // const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranchesNetworks){\n      Object.keys(this.props.availableTranchesNetworks).forEach( networkId => {\n        const protocols = this.props.availableTranchesNetworks[networkId];\n        Object.keys(protocols).forEach( protocol => {\n          const tokens = this.props.availableTranchesNetworks[networkId][protocol];\n          Object.keys(tokens).forEach( token => {\n            const tokenConfig = tokens[token];\n            // if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (parseInt(networkId) === parseInt(requiredNetworkId)){\n              if (tokenConfig.abi){\n                contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n              }\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n              contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n\n              const strategyConfig = tokenConfig.Strategy;\n              if (strategyConfig.address){\n                contracts.push(this.initContractWithoutSet(tokenConfig.Strategy.name,strategyConfig.address,strategyConfig.abi));\n              }\n            }\n\n            if (tokenConfig.abi){\n              contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,networkId));\n            }\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,networkId));\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,networkId));\n          });\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = (networkId=null) => {\n    const defaultNetworkID = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n    if (!networkId || !globalConfigs.network.enabledNetworks.includes(networkId)){\n      networkId = defaultNetworkID;\n    }\n    const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n    return {\n      id: networkId,\n      name: networkName\n    };\n   }\n\n   getCurrentNetwork = async (networkId=null,defaultWeb3=null) => {\n     const currentWeb3 = defaultWeb3 || this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     \n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null,callback=null) => {\n    const network = {...this.state.network};\n\n    // Get selected web3 provider\n    const defaultWeb3 = this.props.context && this.props.context.active && this.props.context.library ? this.props.context.library : null;\n\n    network.required = this.getRequiredNetwork(networkId);\n    network.current = await this.getCurrentNetwork(networkId,defaultWeb3);\n\n    const networkInitialized = !!network.current.id;\n    // Network is correct if not connected\n    network.isCorrectNetwork =  !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','defaultWeb3:',defaultWeb3,'networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', isCorrectNetwork: '+network.isCorrectNetwork,'networkInitialized: '+networkInitialized,', update: '+updateNetwork);\n\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      },()=>{\n        if (typeof callback === 'function'){\n          callback();\n        }\n      });\n    } else {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n        // Update transaction with receipt details\n        if (transaction.confirmationCount===1){\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n        }\n\n        if (call_callback){\n          callback(transaction);\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction,transaction.transactionHash);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          connectors={this.props.connectors}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import DAI from '../abis/tokens/DAI.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport TruefiPool from '../abis/truefi/TruefiPool.json';\nimport Clearpool from '../abis/clearpool/Clearpool.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOPolygon from '../contracts/IdleCDOPolygon.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nimport QuickswapLiquidityPool from \"../abis/quickswap/QuickswapLiquidityPool.json\";\nconst availableTranches = {\n  137:{\n    quickswap:{\n      CXETHWETH:{\n        decimals:18,\n        token:'CXETHWETH',\n        protocol:'quickswap',\n        blockNumber:28501471,\n        referralEnabled:true,\n        autoFarming:['WMATIC'],\n        abi:QuickswapLiquidityPool,\n        address:'0xda7cd765DF426fCA6FB5E1438c78581E4e66bFe7',\n        CDO:{\n          decimals:18,\n          abi:IdleCDOPolygon,\n          name:'IdleCDO_quickswap_CXETHWETH',\n          address:'0xB144eE58679e15f1b25A5F6EfcEBDd0AB8c8BEF5'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_quickswap_CXETHWETH'\n        },\n        messages:{\n          buyInstructions:'To get CXETHWETH token your have to supply liquidity into the <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://quickswap.exchange/#/add/0xfe4546feFe124F30788c4Cc1BB9AA6907A7987F9/0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619\">Quickswap cxETH-ETH pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish',\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_AA',\n            address:'0x466cFDfF869666941CdB89daa412c3CddC55D6c1'\n          },\n          blockNumber:28501471,\n          label:'AA-CXETHWETH-LP',\n          name:'AA_quickswap_CXETHWETH',\n          token:'AA_quickswap_CXETHWETH',\n          address:'0x967b2fdEc06c0178709F1BFf56E0aA9367c3225c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            rewardsRate:null,\n            claim:'getReward',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[\n              {\n                enabled:true,\n                token:'DQUICK',\n                address:'0xf28164A485B0B2C90639E47b0f377b4a438a16B1'\n              }\n            ],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_quickswap_CXETHWETH_BB',\n            address:'0x727d9c331e9481167Dc61A9289C948da25bE825e'\n          },\n          blockNumber:28501471,\n          label:'BB-CXETHWETH-LP',\n          name:'BB_quickswap_CXETHWETH',\n          token:'BB_quickswap_CXETHWETH',\n          address:'0x1aFf460F388E3822756F5697f05A7E2AEB8Db7ef'\n        }\n      }\n    }\n  },\n  1:{\n    idle:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        disabled:true,\n        protocol:'idle',\n        blockNumber:13054628,\n        enabledEnvs: ['beta'],\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          decimals:18,\n          abi:IdleCDO,\n          name:'IdleCDO_idleDAIYield',\n          address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleDAIYield',\n          address:'0x48a48c6694168093A3dEE02E9e8AC5a14169a652'\n        },\n        description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n            address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI AA',\n          blockNumber:13054628,\n          name:'AA_idleDAIYield',\n          token:'AA_idleDAIYield',\n          address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n            address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:false,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleDAI BB',\n          blockNumber:13054628,\n          name:'BB_idleDAIYield',\n          token:'BB_idleDAIYield',\n          address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n        }\n      },\n      FEI:{\n        token:'FEI',\n        decimals:18,\n        disabled:true,\n        protocol:'idle',\n        blockNumber:13575397,\n        enabledEnvs: ['beta'],\n        address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_idleFEIYield',\n          address:'0x77648a2661687ef3b05214d824503f6717311596'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_idleFEIYield',\n          address:'0x73A44027bDAF5D71296d2C73cfb13e561c76a916'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n            address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n            stakingRewards:[\n              {\n                token:'IDLE',\n                enabled:true,\n                address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n              }\n            ]\n          },\n          label:'idleFEI AA',\n          blockNumber:13575397,\n          name:'AA_idleFEIYield',\n          token:'AA_idleFEIYield',\n          address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          label:'idleFEI BB',\n          blockNumber:13575397,\n          name:'BB_idleFEIYield',\n          token:'BB_idleFEIYield',\n          address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n        }\n      }\n    },\n    lido:{\n      stETH:{\n        abi:ERC20,\n        decimals:18,\n        token:'stETH',\n        protocol:'lido',\n        blockNumber:13776954,\n        address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_lido_stETH',\n          address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          harvestEnabled:false,\n          name:'IdleStrategy_lido_stETH',\n          address:'0x0cac674ebD77bBD899f6079932768f6d59Da089A'\n        },\n        messages:{\n          buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            periodFinish:'periodFinish'\n          },\n          CDORewards:{\n            decimals:18,\n            unstakeWithBalance:false,\n            stakingRewards:[\n              {\n                token:'LDO',\n                enabled:true,\n                address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n              }\n            ],\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_lido_stETH_AA',\n            address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n          },\n          blockNumber:13776954,\n          name:'AA_lido_stETH',\n          token:'AA_lido_stETH',\n          label:'lido stETH AA',\n          address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_lido_stETH_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13776954,\n          name:'BB_lido_stETH',\n          token:'BB_lido_stETH',\n          label:'lido stETH BB',\n          address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n        }\n      }\n    },\n    /*\n    mstable:{\n      mUSD:{\n        abi:ERC20,\n        decimals:18,\n        token:'mUSD',\n        protocol:'mstable',\n        autoFarming:['MTA'],\n        blockNumber:14184007,\n        address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_mstable_mUSD',\n          address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_mstable_mUSD'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_mstable_mUSD_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'AA_mstable_mUSD',\n          token:'AA_mstable_mUSD',\n          label:'mstable mUSD AA',\n          address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14184007,\n          name:'BB_mstable_mUSD',\n          token:'BB_mstable_mUSD',\n          label:'mstable mUSD BB',\n          address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n        }\n      }\n    },\n    */\n    convex:{\n      FRAX3CRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'FRAX3CRV',\n        protocol:'convex',\n        blockNumber:13812864,\n        autoFarming:['CVX','CRV'],\n        curveApyPath:['apy','day','frax'],\n        address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_frax3crv',\n          address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_frax3crv',\n          address:'0xBc1707D16541108b7035E52e1DAeb27ca4B6B79F'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'AA_convex_frax3crv',\n          token:'AA_convex_frax3crv',\n          label:'convex frax3crv AA',\n          address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13812864,\n          name:'BB_convex_frax3crv',\n          token:'BB_convex_frax3crv',\n          label:'convex frax3crv BB',\n          address:'0x18cf59480d8c16856701f66028444546b7041307'\n        }\n      },\n      MIM3CRV:{\n        abi:ERC20,\n        decimals:18,\n        disabled:true,\n        token:'MIM3CRV',\n        protocol:'convex',\n        blockNumber:13848124,\n        enabledEnvs: ['beta'],\n        curveApyPath:['apy','day','mim'],\n        autoFarming:['CVX','CRV','SPELL'],\n        address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_mim3crv',\n          address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_mim3crv',\n          address:'0x35168324dC1981aDDc3bC915788e200BeDF77865'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'AA_convex_mim3crv',\n          token:'AA_convex_mim3crv',\n          label:'convex mim3crv AA',\n          address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:13848124,\n          name:'BB_convex_mim3crv',\n          token:'BB_convex_mim3crv',\n          label:'convex mim3crv BB',\n          address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n        }\n      },\n      steCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'steCRV',\n        protocol:'convex',\n        blockNumber:14182975,\n        autoFarming:['CVX','CRV','LDO'],\n        curveApyPath:['apy','day','steth'],\n        address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_steCRV',\n          address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_steCRV',\n          address:'0x3bCbA0AfD36C9B350f46c570f89ab70817D122CB'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'AA_convex_steCRV',\n          token:'AA_convex_steCRV',\n          label:'convex steCRV AA',\n          address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_steCRV',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14182975,\n          name:'BB_convex_steCRV',\n          token:'BB_convex_steCRV',\n          label:'convex steCRV BB',\n          address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n        }\n      },\n      ALUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        protocol:'convex',\n        token:'ALUSD3CRV',\n        blockNumber:14177732,\n        autoFarming:['CVX','CRV'],\n        address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_alusd3crv',\n          address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_alusd3crv',\n          address:'0xDb7306Ddba67DD9d5aF08204E314F4DE6c29e20d'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'AA_convex_alusd3crv',\n          token:'AA_convex_alusd3crv',\n          label:'convex alusd3crv AA',\n          address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177732,\n          name:'BB_convex_alusd3crv',\n          token:'BB_convex_alusd3crv',\n          label:'convex alusd3crv BB',\n          address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n        }\n      },\n      \"3EUR\":{\n        abi:ERC20,\n        decimals:18,\n        token:'3EUR',\n        protocol:'convex',\n        blockNumber:14177892,\n        autoFarming:['CVX','CRV','ANGLE'],\n        address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_3eur',\n          address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_3eur',\n          address:'0x4Ae60BC9A3eFc160AE2EbA70947a9b47Ad2b9094'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'AA_convex_3eur',\n          token:'AA_convex_3eur',\n          label:'convex 3eur AA',\n          address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_3eur_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177892,\n          name:'BB_convex_3eur',\n          token:'BB_convex_3eur',\n          label:'convex 3eur BB',\n          address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n        }\n      },\n      MUSD3CRV:{\n        abi:ERC20,\n        decimals:18,\n        disabled:true,\n        token:'MUSD3CRV',\n        protocol:'convex',\n        blockNumber:14177794,\n        enabledEnvs: ['beta'],\n        autoFarming:['CVX','CRV'],\n        address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_musd3crv',\n          address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_musd3crv',\n          address:'0x271cE5dED4cCbD28833bddF8a8093517299920f0'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'AA_convex_musd3crv',\n          token:'AA_convex_musd3crv',\n          label:'convex musd3crv AA',\n          address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14177794,\n          name:'BB_convex_musd3crv',\n          token:'BB_convex_musd3crv',\n          label:'convex musd3crv BB',\n          address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n        }\n      },\n      PBTCCRV:{\n        abi:ERC20,\n        decimals:18,\n        token:'PBTCCRV',\n        protocol:'convex',\n        blockNumber:14570195,\n        multiCallDisabled:true,\n        autoFarming:['CVX','CRV','PNT'],\n        address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_convex_pbtccrv',\n          address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_convex_pbtccrv',\n          address:'0x0198792f2849397908C092b6B57654e1a57a4CDC'\n        },\n        description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        messages:{\n          withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n          buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            stakedBalance:'usersStakes',\n            rewards:'expectedUserReward'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'AA_convex_pbtccrv',\n          token:'AA_convex_pbtccrv',\n          label:'convex pbtccrv AA',\n          address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14570195,\n          name:'BB_convex_pbtccrv',\n          token:'BB_convex_pbtccrv',\n          label:'convex pbtccrv BB',\n          address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n        }\n      }\n    },\n    euler:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14785127,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDC',\n          address:'0xf5a3d259bfe7288284bd41823ec5c8327a314054'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDC',\n          address:'0x5DaD2eEF80a8cdFD930aB8f0353cA13Bd48c4346'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDC',\n          blockNumber:14785127,\n          token:'AA_euler_USDC',\n          label:'euler USDC AA',\n          address:'0x1e095cbF663491f15cC1bDb5919E701b27dDE90C'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14785127,\n          name:'BB_euler_USDC',\n          token:'BB_euler_USDC',\n          label:'euler USDC BB',\n          address:'0xe11679CDb4587FeE907d69e9eC4a7d3F0c2bcf3B'\n        }\n      },\n      levUSDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        autoFarming:[],\n        protocol:'euler',\n        blockNumber:15445762,\n        enabledEnvs: ['beta'],\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_levUSDC',\n          address:'0xcb2bd49d4b7874e6597dedfaa3e7b4e01831c5af'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_levUSDC',\n          address:'0xee5ec95ce2c8700a2d152db3249fa13b163f0073'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.euler.finance/market/0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Euler USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_levUSDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15445762,\n          label:'euler USDC AA',\n          name:'AA_euler_levUSDC',\n          token:'AA_euler_levUSDC',\n          address:'0x9F94fa97cC2d48315015040708D12aB855283164'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_levUSDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15445762,\n          label:'euler USDC BB',\n          name:'BB_euler_levUSDC',\n          token:'BB_euler_levUSDC',\n          address:'0x617648B846512E2F49dC21Bf27e4505C285E6977'\n        }\n      },\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961854,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_DAI',\n          address:'0x46c1f702a6aad1fd810216a5ff15aab1c62ca826'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_DAI',\n          address:'0xc7F1B9C72B8230E470420A4b69af7c50781A3f44'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_DAI_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_DAI',\n          blockNumber:14961854,\n          token:'AA_euler_DAI',\n          label:'euler DAI AA',\n          address:'0x852c4d2823E98930388b5cE1ed106310b942bD5a'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_DAI_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:14961854,\n          name:'BB_euler_DAI',\n          token:'BB_euler_DAI',\n          label:'euler DAI BB',\n          address:'0x6629baA8C7c6a84290Bf9a885825E3540875219D'\n        }\n      },\n      USDT:{\n        abi:ERC20,\n        decimals:6,\n        token:'USDT',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:14961973,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_USDT',\n          address:'0xD5469DF8CA36E7EaeDB35D428F28E13380eC8ede'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_USDT',\n          address:'0x3d1775dA27Dd9c6d936795Ac21b94CDeD8baBD69'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_USDT_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_USDT',\n          blockNumber:14961973,\n          token:'AA_euler_USDT',\n          label:'euler USDT AA',\n          address:'0xE0f126236d2a5b13f26e72cBb1D1ff5f297dDa07'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_USDT_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'BB_euler_USDT',\n          blockNumber:14961973,\n          token:'BB_euler_USDT',\n          label:'euler USDT BB',\n          address:'0xb1EC065abF6783BCCe003B8d6B9f947129504854'\n        }\n      },\n      AGEUR:{\n        abi:ERC20,\n        decimals:18,\n        token:'AGEUR',\n        autoFarming:[],\n        enabledEnvs: [],\n        protocol:'euler',\n        blockNumber:15055915,\n        adaptiveYieldSplitEnabled:true,\n        address:'0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_euler_AGEUR',\n          address:'0x2398Bc075fa62Ee88d7fAb6A18Cd30bFf869bDa4'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_euler_AGEUR',\n          address:'0x8468B8Efe7eeA52978Ccfe3C0248Ca6F6895e166'\n        },\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_euler_AGEUR_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          name:'AA_euler_AGEUR',\n          blockNumber:15055915,\n          token:'AA_euler_AGEUR',\n          label:'euler AGEUR AA',\n          address:'0x624DfE05202b66d871B8b7C0e14AB29fc3a5120c'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_euler_AGEUR_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15055915,\n          name:'BB_euler_AGEUR',\n          token:'BB_euler_AGEUR',\n          label:'euler AGEUR BB',\n          address:'0xcf5FD05F72cA777d71FB3e38F296AAD7cE735cB7'\n        }\n      }\n    },\n    clearpool:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabledEnvs:[],\n        blockNumber:15044679,\n        protocol:'clearpool',\n        autoFarming:['CPOOL'],\n        maxUtilizationRate:0.99,\n        adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_clearpool_USDC',\n          address:'0xDBCEE5AE2E9DAf0F5d93473e08780C9f45DfEb93'\n        },\n        Pool:{\n          abi:Clearpool,\n          name:'Pool_clearpool_USDC',\n          address:'0xcb288b6d30738db7e3998159d192615769794b5b'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_clearpool_USDC',\n          address:'0x54ae90be2dee0a960953c724839541e75bb1f471'\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.clearpool.finance/pool/0xCb288b6d30738db7E3998159d192615769794B5b\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Clearpool Wintermute USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_clearpool_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_clearpool_USDC',\n          token:'AA_clearpool_USDC',\n          label:'clearpool USDC AA',\n          address:'0xb86264c21418aA75F7c337B1821CcB4Ff4d57673'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            utilizationRate:'getUtilizationRate'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_clearpool_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_clearpool_USDC',\n          token:'BB_clearpool_USDC',\n          label:'clearpool USDC BB',\n          address:'0x4D9d9AA17c3fcEA05F20a87fc1991A045561167d'\n        }\n      }\n    },\n    truefi:{\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        protocol:'truefi',\n        autoFarming:['TRU'],\n        blockNumber:15326147,\n        enabledEnvs: ['beta'],\n        multiCallDisabled:true,\n        // adaptiveYieldSplitEnabled:true,\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        CDO:{\n          abi:IdleCDO,\n          decimals:18,\n          name:'IdleCDO_truefi_USDC',\n          address:'0x1f5A97fB665e295303D2F7215bA2160cc5313c8E'\n        },\n        Strategy:{\n          abi:IdleStrategy,\n          name:'IdleStrategy_truefi_USDC',\n          address:'0x62B17c9083Db5941197E83BD385985B8878B58Fb'\n        },\n        Pool:{\n          abi:TruefiPool,\n          name:'Pool_truefi_USDC',\n          address:'0xA991356d261fbaF194463aF6DF8f0464F8f1c742'\n        },\n        modal:{\n          enabled:true,\n          buttonText:'Continue',\n          title:'Truefi exit fee',\n          icon:'images/warning-2.png',\n          id:'modal_truefi_usdc_exit_fee',\n          text:'This strategy is subject to an exit fee between 0.05% and 10% depending on the utilization ratio of the Truefi pool, in addition to the performance fee. Read more at <a href=\"https://docs.truefi.io/faq/dao-managed-pools/pool#what-is-liquid-exit\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">https://docs.truefi.io/faq/dao-managed-pools/pool#what-is-liquid-exit</a>'\n        },\n        messages:{\n          withdraw:'This strategy is subject to an exit fee between 0.05% and 10% depending on the utilization ratio of the Truefi pool.',\n        },\n        description:'This strategy deploys funds in the <a href=\"https://app.truefi.io/pools/0xA991356d261fbaF194463aF6DF8f0464F8f1c742\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Truefi USDC pool</a>. The APR is dynamically adjusted according to the coverage provided to the counterpart Senior tranche thanks to the <a href=\"https://medium.com/idle-finance/adaptive-yield-split-foster-pyts-liquidity-scalability-a796fa17ea35\" class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\">Adaptive Yield Split</a>.',\n        AA:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'AA',\n          functions:{\n            stake:'stake',\n            unstake:'exit',\n            rewards:'earned',\n            claim:'getReward',\n            deposit:'depositAA',\n            withdraw:'withdrawAA',\n            rewardsRate:'rewardRate',\n            stakedBalance:'balanceOf',\n            penaltyFee:'liquidExitPenalty'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:false,\n            abi:TrancheStakingRewards,\n            name:'TrancheStakingRewards_truefi_USDC_AA',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'AA_truefi_USDC',\n          token:'AA_truefi_USDC',\n          label:'truefi USDC AA',\n          address:'0x868bb78fb045576162B510ba33358C9f93e7959e'\n        },\n        BB:{\n          abi:ERC20,\n          decimals:18,\n          tranche:'BB',\n          functions:{\n            stake:'stake',\n            claim:'claim',\n            unstake:'unstake',\n            deposit:'depositBB',\n            withdraw:'withdrawBB',\n            stakedBalance:'usersStakes',\n            penaltyFee:'liquidExitPenalty'\n          },\n          CDORewards:{\n            decimals:18,\n            stakingRewards:[],\n            unstakeWithBalance:true,\n            abi:IdleCDOTrancheRewards,\n            name:'IdleCDOTrancheRewards_truefi_USDC_BB',\n            address:'0x0000000000000000000000000000000000000000'\n          },\n          blockNumber:15044679,\n          name:'BB_truefi_USDC',\n          token:'BB_truefi_USDC',\n          label:'truefi USDC BB',\n          address:'0x6EdE2522347E6a5A0420F41f42e021246e97B540'\n        }\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport themeDark from \"../theme-dark\";\nimport Web3Provider from \"web3-react\";\nimport Web3Connectors from \"./connectors\"\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport { ThemeProvider, Box, Flex } from \"rimble-ui\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// Lazy Loading\n// const Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    availableTranches: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableTranchesNetworks: null,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  web3Connectors = null;\n\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (!this.web3Connectors){\n      this.web3Connectors = new Web3Connectors();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n      this.web3Connectors.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = clear_all ? {} : { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableTranchesNetworks = availableTranches;\n    newState.availableTranches = Object.keys(availableTranches[requiredNetwork]).reduce( (output,protocol) => {\n      const tokens = availableTranches[requiredNetwork][protocol];\n      Object.keys(tokens).forEach( token => {\n        const tokenConfig = tokens[token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (envEnabled){\n          if (!output[protocol]){\n            output[protocol] = {};\n          }\n          output[protocol][token] = tokenConfig;\n        }\n      });\n      return output;\n    },{});\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(this.state.availableTranches && Object.keys(this.state.availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.selectedProtocol = selectedProtocol;\n            newState.availableTokens = this.state.availableTranches;\n            newState.tokenConfig = this.state.availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        // const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        const themeMode = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    const connectors = this.web3Connectors.getConnectors();\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    availableTranches={this.state.availableTranches}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableTranchesNetworks={this.state.availableTranchesNetworks}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        availableTranches={this.state.availableTranches}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route\n                                        path=\"/:section?/:param1?/:param2?/:param3?\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Dashboard\n                                              {...props}\n                                              web3={web3}\n                                              modals={modals}\n                                              network={network}\n                                              context={context}\n                                              account={account}\n                                              isDashboard={true}\n                                              initWeb3={initWeb3}\n                                              biconomy={biconomy}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              web3Infura={web3Infura}\n                                              web3Polygon={web3Polygon}\n                                              initAccount={initAccount}\n                                              multiCall={this.multiCall}\n                                              permitClient={permitClient}\n                                              initSimpleID={initSimpleID}\n                                              initContract={initContract}\n                                              transactions={transactions}\n                                              buyToken={this.state.buyToken}\n                                              logout={this.logout.bind(this)}\n                                              maticPOSClient={maticPOSClient}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              validateAccount={validateAccount}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              cachedData={this.state.cachedData}\n                                              setToken={this.setToken.bind(this)}\n                                              accountValidated={accountValidated}\n                                              getTokenDecimals={getTokenDecimals}\n                                              rejectValidation={rejectValidation}\n                                              tokenConfig={this.state.tokenConfig}\n                                              contractsNetworks={contractsNetworks}\n                                              getAccountBalance={getAccountBalance}\n                                              accountBalanceLow={accountBalanceLow}\n                                              accountInizialized={accountInizialized}\n                                              networkInitialized={networkInitialized}\n                                              selectedToken={this.state.selectedToken}\n                                              connectorName={this.state.connectorName}\n                                              setStrategy={this.setStrategy.bind(this)}\n                                              userRejectedConnect={userRejectedConnect}\n                                              accountBalanceToken={accountBalanceToken}\n                                              initializeContracts={initializeContracts}\n                                              walletProvider={this.state.walletProvider}\n                                              buyModalOpened={this.state.buyModalOpened}\n                                              erc20ForwarderClient={erc20ForwarderClient}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              rejectAccountConnect={rejectAccountConnect}\n                                              handleMenuClick={this.selectTab.bind(this)}\n                                              setConnector={this.setConnector.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              availableTokens={this.state.availableTokens}\n                                              closeBuyModal={this.closeBuyModal.bind(this)}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              selectedStrategy={this.state.selectedStrategy}\n                                              selectedProtocol={this.state.selectedProtocol}\n                                              userRejectedValidation={userRejectedValidation}\n                                              availableTranches={this.state.availableTranches}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              setStrategyToken={this.setStrategyToken.bind(this)}\n                                              accountValidationPending={accountValidationPending}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              contractMethodSendWrapper={contractMethodSendWrapper}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              initContractCustomProvider={initContractCustomProvider}\n                                              setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                              availableTranchesNetworks={this.state.availableTranchesNetworks}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Button } from \"rimble-ui\";\nimport theme from \"../theme-dark\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  state = {\n    buttonState:'default'\n  };\n\n  render() {\n    const ctaType = this.props.type || 'primary';\n\n    const buttonProps = Object.assign({\n      fontSize:2,\n      width:'auto',\n      fontWeight:4,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:1,\n      fontFamily:'ctas',\n      border:theme.colors.ctas[ctaType][this.state.buttonState].border,\n      contrastColor:theme.colors.ctas[ctaType][this.state.buttonState].text,\n      mainColor:theme.colors.ctas[ctaType][this.state.buttonState].background\n    },this.props.buttonProps);\n\n    const ButtonComponent = ctaType === 'secondary' ? Button.Outline : Button;\n\n    return (\n       <ButtonComponent\n        {...buttonProps}\n        onMouseEnter={(data, e) => {\n          this.setState({\n            buttonState:'hover'\n          });\n        }}\n        onMouseLeave={(data, e) => {\n          this.setState({\n            buttonState:'default'\n          });\n        }}\n        onClick={this.props.handleClick || this.props.onClick}\n       >\n        {this.props.children}\n       </ButtonComponent>\n    );\n  }\n}\n\nexport default RoundButton;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [14, 16, 16, 20, 20, 28, 36, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    ctas: '\"Open Sans\"',\n    labels: '\"Open Sans\"',\n    titles: '\"Open Sans\"',\n    sansSerif: '\"Source Sans Pro\"',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '5px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #C6CBD2', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#FFFFFF',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#CDD0D6',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#FFFFFF',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#CDD0D6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    CTAs\n    */\n    ctaPrimaryText:'#1B1E27',\n    ctas:{\n      primary:{\n        default:{\n          border:'none',\n          text:'#1B1E27',\n          background:'#FFFFFF'\n        },\n        hover:{\n          border:'none',\n          text:'#FFFFFF',\n          background:'#2272C8'\n        }\n      },\n      secondary:{\n        default:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        },\n        hover:{\n          text:'#FFFFFF',\n          background:'#FFFFFF',\n          border:'1px solid #FFFFFF'\n        }\n      }\n    },\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2272C8\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#293243',\n    selectBg: '#293243',\n    backButtonBg: '#FFFFFF',\n    lineChartStroke: '#CDD0D6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#1B1E27',\n    statValue: '#FFFFFF',\n    boxBorder: '#eeeeee',\n    cellTitle: '#CDD0D6',\n    cellText: '#CDD0D6',\n    divider: '#CDD0D6',\n    counter: '#CDD0D6',\n    redeem: '#00a9fe',\n    link: '#FFFFFF',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#C6CBD2',\n    cardBg: '#293243',\n    menuBg: '#293243',\n    menuHover: '#293243',\n    dropdownBg: '#4C5976',\n    flashBg: '#04117B',\n    flashColor: '#eeeeee',\n    cardBgHover: '#4b5a76',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    // cardBgActive: \"#04117B\",\n    // cardBgActive: \"#0c48a4\",\n    cardBgActive: \"#2272C8\",\n    cardBgContrast: \"#293243\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    paused: \"#ff7100\",\n    disabledBg: '#8e8d8d',\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#CDD0D6',\n      borderColor: '#0d2034',\n      backgroundColor: '#293243',\n    },\n  },\n  buttons: {\n    primary: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      // use css custom props\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    normal: {\n      color: '#1B1E27',\n      backgroundColor: 'white',\n      '--main-color': 'white',\n      '--contrast-color': '#1B1E27',\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__dKXq3\",\"bg-bottom-right\":\"ModalCard_bg-bottom-right__32tBy\",\"bg-noise\":\"ModalCard_bg-noise__1pVkK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3sgMk\",\"link\":\"Footer_link__1VFp9\"};","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      color:'primary',\n      textAlign:'center',\n      fontFamily:'titles',\n      lineHeight:'initial',\n    };\n\n    // Get title height\n    const as = this.props.as && Heading[this.props.as] ? this.props.as : 'h1';\n    const titleType = parseInt(as.substr(1));\n\n    // Set font size for h1\n    if (titleType === 1){\n      props.fontSize = [5,6];\n    } else if (titleType>=3){ // Reduce weight for h3...h6\n      props.fontWeight = 3;\n    }\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent =  this.props.component ? this.props.component : Heading[as];\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      right={'0'}\n      zIndex={999}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'dashboardBg'}\n    >\n      <Flex\n        zIndex={1}\n        width={'100%'}\n        height={'100%'}\n        position={'absolute'}\n      >\n        <Flex\n          className={[styles.bg,styles['bg-bottom-right']]}\n        />\n        <Flex\n          className={[styles.bg,styles['bg-noise']]}\n        />\n      </Flex>\n      <Flex\n        zIndex={2}\n        height={'100%'}\n        flex={'1 1 auto'}\n        style={{\n          overflow: 'auto',\n        }}\n        position={'relative'}\n        flexDirection={'column'}\n      >\n        {children}\n      </Flex>\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    mb={2}\n    width={1}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '40px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'primary'}\n        textAlign={'center'}\n        fontFamily={'titles'}\n        mt={props.icon ? 2 : 0}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    py={3}\n    px={[0,3]}\n    borderTop={0}\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderColor={'light-gray'}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                whiteSpace:'nowrap',\n                color:this.props.theme.colors.primary,\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontSize={2}\n              fontWeight={3}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__E1F2u\",\"genericSelector\":\"GenericSelector_genericSelector__3epuw\",\"dark\":\"GenericSelector_dark__3Fh8V\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__1c1_I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2H7IC\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__1TQOS\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__1cH4G\"};","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton.js\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <RoundButton\n        handleClick={this.props.handleClick}\n        buttonProps={{width:'auto',...this.props.buttonProps}}\n      >\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          {\n            this.props.isLoading ? (\n              <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n                <LoadingSpinner />\n              </Flex>\n            ) : this.props.buttonText\n          }\n        </Flex>\n      </RoundButton>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    const textProps = Object.assign({\n      color:'primary',\n      fontFamily:'ctas'\n    },this.props.textProps);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const portfolioChanged = this.props.portfolio ? ((this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio)) : false;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || portfolioChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    let formattedValue = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // console.log('mouseOver',fieldInfo.name,this.props.mouseOver);\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'statusIcon':\n        output = null;\n        if (!!this.props.tokenConfig.disabled) {\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool has been disabled, please redeem your funds`}\n            >\n              <Image src={`images/warning-2.png`} {...fieldProps} />\n            </Tooltip>\n          )\n        } else if (this.state.statusIcon === 'paused') {\n          output = (<Tooltip\n            placement={'top'}\n            message={`Deposits for this pool have been temporarily paused due to Smart-Contract maintenance`}\n          >\n            <Image src={`images/pause.svg`} {...fieldProps} />\n          </Tooltip>)\n        } else {\n          output = (\n            <TrancheField\n              {...this.props}\n              fieldInfo={{\n                ...fieldInfo,\n                name:'experimentalBadge'\n              }}\n            />\n          );\n        }\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.functionsUtil.BNify(this.state[fieldInfo.name]).gt(0) && this.functionsUtil.BNify(this.state[fieldInfo.name]).lte(5000000)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state[fieldInfo.name], 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (!!this.props.tokenConfig.disabled){\n            badgeText = 'Disabled';\n            badgeColor = 'disabledBg';\n          } else if (!this.functionsUtil.BNify(this.state.statusBadge).isNaN() && this.functionsUtil.BNify(this.state.statusBadge).gt(0) && this.functionsUtil.BNify(this.state.statusBadge).lte(5000000)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else if (this.state.statusBadge === 'paused'){\n            badgeText = 'Deposits Paused';\n            badgeColor = 'paused';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getTokenConfig(this.props.tokenConfig.token);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.tokenConfig.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n            mouseOver={this.props.mouseOver}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheAPRSplitRatio':\n        output = this.state[fieldInfo.name];\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n            {\n              (typeof this.props.tokenConfig.adaptiveYieldSplitEnabled === 'undefined' || this.props.tokenConfig.adaptiveYieldSplitEnabled) && (\n                <Tooltip\n                  placement={'top'}\n                  message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n                >\n                  <Image ml={2} src={`images/ays.svg`} height={['1.4em','1.8em']} {...fieldProps} />\n                </Tooltip>\n              )\n            }\n          </Flex>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n      case 'trancheAYS':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.functionsUtil.getGlobalConfig(['messages','aysShort'])}\n          >\n            <Image src={`images/ays.svg`} height={['1.4em','2em']} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Text, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Text\n        fontWeight={4}\n        color={'cellTitle'}\n        fontSize={['12px',0]}\n        fontFamily={'titles'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Text>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        componentHasChildren = true;\n        CustomComponent = RoundButton;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n        fieldProps.buttonProps = fieldProps;\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    if (fieldInfo.name !== 'button'){\n      fieldProps.fontWeight = 3;\n      fieldProps.fontSize = [0,2];\n    }\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // Highlight text color on hover\n    if (!!this.props.mouseOver){\n      fieldProps.color = 'primary';\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <RoundButton buttonProps={fieldProps} handleClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</RoundButton>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgActive' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}